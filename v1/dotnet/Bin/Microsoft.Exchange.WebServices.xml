<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.Exchange.WebServices</name>
	</assembly>
	<members>
		<member name="N:Microsoft.Exchange.WebServices.Autodiscover">
			<summary>This namespace contains types used to communicate with Autodiscover Service hosted by an Exchange Server.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AlternateMailbox">
			<summary>Represents the alternate mailbox for a user.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AlternateMailbox.DisplayName">
			<summary>Gets the display name of the alternate mailbox.</summary>
			<returns>A <see cref="T:System.String"></see> object that contains the display name of the alternate mailbox.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AlternateMailbox.LegacyDN">
			<summary>Gets the legacy domain name of the alternate mailbox.</summary>
			<returns>A <see cref="T:System.String"></see> object that contains the legacy domain name of the alternate mailbox.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AlternateMailbox.Server">
			<summary>Gets the name of the server for the alternate mailbox.</summary>
			<returns>A <see cref="T:System.String"></see> object that contains the name of the alternate mailbox server.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AlternateMailbox.Type">
			<summary>Gets the type of the alternate mailbox.</summary>
			<returns>A <see cref="T:System.String"></see> object that contains the type of the alternate mailbox.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AlternateMailboxCollection">
			<summary>A collection of alternate mailboxes for a user.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AlternateMailboxCollection.AlternateMailboxes">
			<summary>Gets a list of alternate mailboxes.</summary>
			<returns>A <see cref="T:System.Collections.Generic.List`1"></see> object containing a list of alternate mailboxes.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError">
			<summary>
            Represents an error returned by the Autodiscover service.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError.DebugData">
			<summary>
            Gets the debug data.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError.ErrorCode">
			<summary>
            Gets the error code.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError.Id">
			<summary>
            Gets a hash of the name of the computer that is running Microsoft Exchange Server that has the Client Access server role installed.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError.Message">
			<summary>
            Gets the error message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError.Time">
			<summary>
            Gets the time when the error was returned.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode">
			<summary>Defines the error codes that can be returned by the Autodiscover service.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.InternalServerError">
			<summary>An internal server error occurred.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.InvalidDomain">
			<summary>The requested domain is not a valid domain.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.InvalidRequest">
			<summary>
            The request is invalid.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.InvalidSetting">
			<summary>
            A specified setting is invalid.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.InvalidUser">
			<summary>
            The user that was passed in the request is invalid.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.NoError">
			<summary>
            There was no error.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.NotFederated">
			<summary>The specified organization is not federated with this organization.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.RedirectAddress">
			<summary>
            The caller must follow the e-mail address redirection that was returned by Autodiscover.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.RedirectUrl">
			<summary>
            The caller must follow the URL redirection that was returned by Autodiscover.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.ServerBusy">
			<summary>
            The server is too busy to process the request.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverErrorCode.SettingIsNotAvailable">
			<summary>
            A specified setting is not available.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverRedirectionUrlValidationCallback">
			<summary>Defines a delegate that is used by the AutodiscoverService class to determine whether a redirection URL can be used.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverRemoteException">
			<summary>
            Represents an exception that is thrown when the Autodiscover service returns an error.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverRemoteException.#ctor(Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError)">
			<summary>
        Initializes a new instance of the AutodiscoverRemoteException class.
      </summary>
			<param name="error">The error.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverRemoteException.#ctor(System.String,Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError)">
			<summary>
        Initializes a new instance of the AutodiscoverRemoteException class.
      </summary>
			<param name="error">The error.</param>
			<param name="message">The message.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverRemoteException.#ctor(System.String,Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverError,System.Exception)">
			<summary>
        Initializes a new instance of the AutodiscoverRemoteException class.
      </summary>
			<param name="error">The error.</param>
			<param name="innerException">The inner exception.</param>
			<param name="message">The message.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverRemoteException.Error">
			<summary>
            Gets the error.
            </summary>
			<returns>The error.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponse">
			<summary>
            Represents the base class for all responses returned by the Autodiscover service.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponse.ErrorCode">
			<summary>
            Gets the error code that was returned by the service.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponse.ErrorMessage">
			<summary>
            Gets the error message that was returned by the service.
            </summary>
			<returns>The error message.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponseCollection`1">
			<summary>
            Represents a collection of responses to a call to the Autodiscover service.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponseCollection`1.GetEnumerator">
			<summary>
            Gets an enumerator that iterates through the elements of the collection.
            </summary>
			<returns>An IEnumerator for the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponseCollection`1.Count">
			<summary>
            Gets the number of responses in the collection.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponseCollection`1.Item(System.Int32)">
			<summary>
            Gets the response at the specified index.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponseException">
			<summary>
            Represents an exception from an autodiscover error response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverResponseException.ErrorCode">
			<summary>
            Gets the ErrorCode for the exception.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService">
			<summary>Represents a binding to the Exchange Autodiscover service. </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.#ctor">
			<summary>Initializes a new instance of the AutodiscoverService class.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeVersion)">
			<summary>Initializes a new instance of the AutodiscoverService class by using the specified server version.</summary>
			<param name="requestedServerVersion">One of the ExchangeVersion enumeration values that specify the server version to use for operation requests.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.#ctor(System.String)">
			<summary>Initializes a new instance of the AutodiscoverService class.
            </summary>
			<param name="domain">The domain that will be used to determine the URL of the service.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.#ctor(System.Uri)">
			<summary>Initializes a new instance of the AutodiscoverService class.
            </summary>
			<param name="url">The URL of the service.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.#ctor(System.String,Microsoft.Exchange.WebServices.Data.ExchangeVersion)">
			<summary>Initializes a new instance of the AutodiscoverService class.
            </summary>
			<param name="requestedServerVersion">The requested server version.</param>
			<param name="domain">The domain that will be used to determine the URL of the service.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.#ctor(System.Uri,Microsoft.Exchange.WebServices.Data.ExchangeVersion)">
			<summary>Initializes a new instance of the AutodiscoverService class.
            </summary>
			<param name="requestedServerVersion">The requested server version.</param>
			<param name="url">The URL of the service.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.GetDomainSettings(System.Collections.Generic.IEnumerable{System.String},Microsoft.Exchange.WebServices.Autodiscover.DomainSettingName[])">
			<summary>Returns the specified domain settings for the specified list of domains.</summary>
			<returns>The GetDomainSettings method returns a GetDomainSettingsResponseCollection object that contains the specified domain settings for the specified domains.</returns>
			<param name="domainSettingNames">A list of domain settings to return.</param>
			<param name="domains">A list of domains for which the specified setting should be returned.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.GetDomainSettings(System.String,Microsoft.Exchange.WebServices.Autodiscover.DomainSettingName[])">
			<summary>Returns the specified settings for a domain.</summary>
			<returns>The GetDomainSettings method returns a GetDomainSettingsResponse object that contains the specified domain settings.</returns>
			<param name="domainSettingNames">An array of DomainSettingName objects that specify the settings to return.</param>
			<param name="domain">The domain for which to retrieve the specified settings.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.GetUserSettings(System.String,Microsoft.Exchange.WebServices.Autodiscover.UserSettingName[])">
			<summary>Retrieves the specified settings for a user.
            </summary>
			<returns>The GetUserSettings method returns a GetUserSettingsResponse object that contains the requested settings for the specified user.</returns>
			<param name="userSmtpAddress">The SMTP addresses of the user.</param>
			<param name="userSettingNames">The user setting names.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.GetUsersSettings(System.Collections.Generic.IEnumerable{System.String},Microsoft.Exchange.WebServices.Autodiscover.UserSettingName[])">
			<summary>Retrieves the specified settings for a set of users.
            </summary>
			<returns>The GetUsersSettings method returns a GetUserSettingsResponseCollection" object that contains the responses for each individual user.</returns>
			<param name="userSmtpAddresses">The SMTP addresses of the users.</param>
			<param name="userSettingNames">The user setting names.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.Domain">
			<summary>Gets the domain that this service is bound to. When the AutodiscoverService class is instantiated with a domain name, that domain name is used to automatically determine the Autodiscover service URL.
            </summary>
			<returns>A <see cref="T:System.String"></see> object. 
</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.EnableScpLookup">
			<summary>Gets or sets a value that indicates whether the AutodiscoverService instance should perform a Service Connection Point (SCP) lookup when determining the service URL.</summary>
			<returns>Value is true if the AutodiscoverService instance should perform an SCP lookup; otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.IsExternal">
			<summary>Gets a value that indicates whether the Autodiscover service that the URL points to is internal (inside the corporate network) or external (outside the corporate network).
            </summary>
			<returns>A <see cref="T:System.Nullable"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.RedirectionUrlValidationCallback">
			<summary>Gets or sets the redirection URL validation callback.
            </summary>
			<returns>The redirection URL validation callback.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverService.Url">
			<summary>Gets the URL of the service. When the AutodiscoverService class is instantiated with a domain name, that domain name is used to automatically determine the Autodiscover service URL.
            </summary>
			<returns>A <see cref="T:System.Uri"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.DomainSettingError">
			<summary>Contains information about errors returned by the GetDomainSettings method.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.DomainSettingError.ErrorCode">
			<summary>Gets the error code returned by the request.</summary>
			<returns>One of the AutodiscoverErrorCode enumeration values that specifies the request error.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.DomainSettingError.ErrorMessage">
			<summary>Gets the error message associated with the domain setting error.</summary>
			<returns>A <see cref="T:System.String"></see> object containing the error message.
</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.DomainSettingError.SettingName">
			<summary>Gets the name of the domain setting that caused the error.</summary>
			<returns>A <see cref="T:System.String"></see> object containing the name of the domain setting that caused the error.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.DomainSettingName">
			<summary>Defines domain settings.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.DomainSettingName.ExternalEwsUrl">
			<summary>The external URL of the Exchange Web Services.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.GetDomainSettingsResponse">
			<summary>The response that is returned by calls to the GetDomainSettings method.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.GetDomainSettingsResponse.#ctor">
			<summary>Initializes a new instance of the GetDomainSettingsResponse class.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.GetDomainSettingsResponse.Domain">
			<summary>Gets the domain that this response applies to.</summary>
			<returns>A <see cref="T:System.String"></see> object that contains the domain name.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.GetDomainSettingsResponse.DomainSettingErrors">
			<summary>Gets a collection of errors for settings that could not be returned.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection`1"></see> object containing DomainSettingError objects.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.GetDomainSettingsResponse.RedirectTarget">
			<summary>Gets the redirection target URL or e-mail address.</summary>
			<returns>A <see cref="T:System.String"></see> object containing the redirection target URL or e-mail address.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.GetDomainSettingsResponse.Settings">
			<summary>Gets the requested settings for the domain.</summary>
			<returns>A <see cref="T:System.Collections.Generic.IDictionary`2"></see> object containing domain setting names and domain settings as a key/value pair.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.GetDomainSettingsResponseCollection">
			<summary>A collection of GetDomainSettingsResponse objects.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.GetUserSettingsResponse">
			<summary>Represents the response to a GetUsersSettings call for an individual user.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Autodiscover.GetUserSettingsResponse.#ctor">
			<summary>Initializes a new instance of the GetUserSettingsResponse class.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.GetUserSettingsResponse.RedirectTarget">
			<summary>Gets the redirectionTarget (URL or e-mail address).
            </summary>
			<returns>A <see cref="T:System.String"></see> object.
</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.GetUserSettingsResponse.Settings">
			<summary>Gets the requested settings for the user. </summary>
			<returns>A <see cref="T:System.Collections.Generic.IDictionary`2"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.GetUserSettingsResponse.SmtpAddress">
			<summary>Gets the SMTP e-mail address that this response applies to.</summary>
			<returns>A <see cref="T:System.String"></see> object that contains the SMTP address that this response applies to.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.GetUserSettingsResponse.UserSettingErrors">
			<summary>Gets error information for settings that could not be returned.
            </summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection`1"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.GetUserSettingsResponseCollection">
			<summary>
            Represents a collection of responses to GetUserSettings.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.ProtocolConnection">
			<summary>Represents the protocol connection setting for the POP, IMAP, and SMTP protocols.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.ProtocolConnection.EncryptionMethod">
			<summary>Gets or sets the encryption method used for the connection.</summary>
			<returns>A <see cref="T:System.String"></see> object that contains the protocol connection encryption method.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.ProtocolConnection.Hostname">
			<summary>Gets or sets the host name of the server that this protocol connection references.</summary>
			<returns>The Hostname property value is a <see cref="T:System.String"></see> object containing the host name of the server.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.ProtocolConnection.Port">
			<summary>Gets or sets the port number that the connection protocol connection uses.</summary>
			<returns>The system port number used by the connection protocol.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.ProtocolConnectionCollection">
			<summary>Represents a user setting that is a collection of protocol connections.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.ProtocolConnectionCollection.Connections">
			<summary>Gets a list of user protocol connections.</summary>
			<returns>A <see cref="T:System.Collections.Generic.List`1"></see> object containing the user's protocol connections.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.UserSettingError">
			<summary>
            Represents a collection of user settings.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.UserSettingError.ErrorCode">
			<summary>
            Gets the error code.
            </summary>
			<returns>The error code.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.UserSettingError.ErrorMessage">
			<summary>
            Gets the error message.
            </summary>
			<returns>The error message.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.UserSettingError.SettingName">
			<summary>
            Gets the name of the setting.
            </summary>
			<returns>The name of the setting.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName">
			<summary>Identifies the user settings. </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ActiveDirectoryServer">
			<summary>
            The name of the Active Directory server.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.AlternateMailboxes">
			<summary>A list of alternate mailboxes.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.CasVersion">
			<summary>
            The version of the Client Access server that is serving the request (for example, 14.XX.YYY.ZZZ).
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.CrossOrganizationSharingEnabled">
			<summary>Indicates that cross-organization sharing is enabled for the user.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.EcpDeliveryReportUrlFragment">
			<summary>The URL fragment of the Exchange Control Panel for delivery reports.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.EcpEmailSubscriptionsUrlFragment">
			<summary>The URL fragment of the Exchange Control Panel for e-mail subscriptions.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.EcpTextMessagingUrlFragment">
			<summary>The URL fragment of the Exchange Control Panel for text messaging.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.EcpVoicemailUrlFragment">
			<summary>The URL fragment of the Exchange Control Panel for voice mail customization.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.EwsSupportedSchemas">
			<summary>
            A comma-separated list of schema versions that are supported by Exchange Web Services. The schema version values 
            will be the same as the values of the ExchangeVersion enumeration.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalEcpDeliveryReportUrl">
			<summary>The external URL of the Exchange Control Panel for delivery Reports.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalEcpEmailSubscriptionsUrl">
			<summary>The external URL of the Exchange Control Panel for e-mail subscriptions.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalEcpTextMessagingUrl">
			<summary>The external URL of the Exchange Control Panel for text messaging.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalEcpUrl">
			<summary>The external URL of the Exchange Control Panel.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalEcpVoicemailUrl">
			<summary>The external URL of the Exchange Control Panel for voice mail customization.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalEwsUrl">
			<summary>
            The external URL of Exchange Web Services.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalImap4Connections">
			<summary>The external connection settings list for the IMAP4 protocol.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalMailboxServer">
			<summary>
            The name of the RPC over HTTP server.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalMailboxServerAuthenticationMethods">
			<summary>
            The authentication methods that are supported by the RPC over HTTP server.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalMailboxServerRequiresSSL">
			<summary>
            Indicates whether the RPC over HTTP server requires SSL.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalOABUrl">
			<summary>
            The external URL of the Offline Address Book.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalPop3Connections">
			<summary>The external connection settings list for the POP3 protocol.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalSmtpConnections">
			<summary>The external connection settings list for the SMTP protocol.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalUMUrl">
			<summary>
            The external URL of the Unified Messaging services.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.ExternalWebClientUrls">
			<summary>
            The external URLs of the Exchange Web client.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalEcpDeliveryReportUrl">
			<summary>The internal URL of the Exchange Control Panel for delivery reports.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalEcpEmailSubscriptionsUrl">
			<summary>The internal URL of the Exchange Control Panel for e-mail subscriptions.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalEcpTextMessagingUrl">
			<summary>The internal URL of the Exchange Control Panel for text messaging.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalEcpUrl">
			<summary>The internal URL of the Exchange Control Panel.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalEcpVoicemailUrl">
			<summary>The internal URL of the Exchange Control Panel for voice mail customization.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalEwsUrl">
			<summary>
            The internal URL of Exchange Web Services.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalImap4Connections">
			<summary>The internal connection settings list for the IMAP4 protocol.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalMailboxServer">
			<summary>
            The fully qualified domain name of the mailbox server.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalMailboxServerDN">
			<summary>
            The legacy distinguished name of the mailbox server.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalOABUrl">
			<summary>
            The internal URL of the Offline Address Book.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalPop3Connections">
			<summary>The internal connection settings list for the POP3 protocol.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalRpcClientServer">
			<summary>The fully qualified domain name of the RPC client server.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalSmtpConnections">
			<summary>The internal connection settings list for the SMTP protocol.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalUMUrl">
			<summary>
            The internal URL of the Unified Messaging services.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.InternalWebClientUrls">
			<summary>
            The internal URLs of the Exchange Web client.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.MailboxDN">
			<summary>
            The distinguished name of the mailbox database of the user's mailbox.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.PublicFolderServer">
			<summary>
            The name of the public folders server.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.UserDeploymentId">
			<summary>
            The deployment ID of the user.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.UserDisplayName">
			<summary>
            The display name of the user.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Autodiscover.UserSettingName.UserDN">
			<summary>
            The legacy distinguished name of the user.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.WebClientUrl">
			<summary>
            Represents the URL of the Exchange web client.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.WebClientUrl.AuthenticationMethods">
			<summary>
            Gets or sets the authentication methods.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.WebClientUrl.Url">
			<summary>
            Gets or sets the URL.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Autodiscover.WebClientUrlCollection">
			<summary>
            Represents a user setting that is a collection of Exchange web client URLs.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Autodiscover.WebClientUrlCollection.Urls">
			<summary>
            Gets or sets the URLs.
            </summary>
		</member>
		<member name="N:Microsoft.Exchange.WebServices.Data">
			<summary>This namespace contains types for communicating with an Exchange Server by using Exchange Web Services.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AcceptMeetingInvitationMessage">
			<summary>
            Represents a meeting acceptance message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AcceptMeetingInvitationMessage.Tentative">
			<summary>
            Gets a value indicating whether the associated meeting is tentatively accepted.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AffectedTaskOccurrence">
			<summary>
            Indicates which occurrence of a recurring task should be deleted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AffectedTaskOccurrence.AllOccurrences">
			<summary>
            All occurrences of the recurring task will be deleted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AffectedTaskOccurrence.SpecifiedOccurrenceOnly">
			<summary>
            Only the current occurrence of the recurring task will be deleted.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AggregateType">
			<summary>Specifies whether the maximum or minimum value of a representative property is used to order the items in a group.
</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AggregateType.Maximum">
			<summary>Indicates that the groups are sorted starting with the smallest value for the AggregateOn property.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AggregateType.Minimum">
			<summary>Indicates that the groups are sorted starting with the largest value for the AggregateOn property.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AlternateId">
			<summary>
            Represents an Id expressed in a specific format.  
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AlternateId.#ctor">
			<summary>
            Initializes a new instance of the AlternateId class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AlternateId.#ctor(Microsoft.Exchange.WebServices.Data.IdFormat,System.String,System.String)">
			<summary>
        Initializes a new instance of the AlternateId class.
      </summary>
			<param name="id">The Id.</param>
			<param name="format">The format that the Id is expressed in.</param>
			<param name="mailbox">The SMTP address of the mailbox that the Id belongs to.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AlternateId.Mailbox">
			<summary>
            Gets or sets the mailbox to which the Id belongs.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AlternateId.UniqueId">
			<summary>
            Gets or sets the Id.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AlternateIdBase">
			<summary>
            Represents the base class for Id expressed in a specific format.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AlternateIdBase.Format">
			<summary>
            Gets or sets the format in which the Id in expressed.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AlternatePublicFolderId">
			<summary>
            Represents the Id of a public folder expressed in a specific format.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AlternatePublicFolderId.#ctor">
			<summary>
            Initializes a new instance of AlternatePublicFolderId.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AlternatePublicFolderId.#ctor(Microsoft.Exchange.WebServices.Data.IdFormat,System.String)">
			<summary>
            Initializes a new instance of AlternatePublicFolderId.
            </summary>
			<param name="format">The format in which the public folder Id is expressed.</param>
			<param name="folderId">The Id of the public folder.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AlternatePublicFolderId.FolderId">
			<summary>
            The Id of the public folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AlternatePublicFolderItemId">
			<summary>
            Represents the Id of a public folder item expressed in a specific format.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AlternatePublicFolderItemId.#ctor">
			<summary>
        Initializes a new instance of the AlternatePublicFolderItemId class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AlternatePublicFolderItemId.#ctor(Microsoft.Exchange.WebServices.Data.IdFormat,System.String,System.String)">
			<summary>
        Initializes a new instance of the AlternatePublicFolderItemId class.
      </summary>
			<param name="format">The format in which the public folder item Id is expressed.</param>
			<param name="folderId">The Id of the parent public folder of the public folder item.</param>
			<param name="itemId">The Id of the public folder item.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AlternatePublicFolderItemId.ItemId">
			<summary>
            The Id of the public folder item.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Appointment">
			<summary>
            Represents an appointment or a meeting. Properties available on appointments are defined in the AppointmentSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>
            Initializes an unsaved local instance of the Appointment class. To bind to an existing appointment, use Appointment.Bind() instead.
            </summary>
			<param name="service">The ExchangeService instance to which this appointmtnt is bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Accept(System.Boolean)">
			<summary>
            Accepts the meeting. Calling this method results in a call to EWS. 
            </summary>
			<param name="sendResponse">Indicates whether to send a response to the organizer.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.AcceptTentatively(System.Boolean)">
			<summary>
            Tentatively accepts the meeting. Calling this method results in a call to EWS. 
            </summary>
			<param name="sendResponse">Indicates whether to send a response to the organizer.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to an existing appointment and loads its first class properties. Calling this method results in a call to EWS.
            </summary>
			<returns>An Appointment instance representing the appointment corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the appointment.</param>
			<param name="id">The Id of the appointment to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing appointment and loads the specified set of properties. Calling this method results in a call to EWS.
            </summary>
			<returns>An Appointment instance representing the appointment corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the appointment.</param>
			<param name="id">The Id of the appointment to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.BindToOccurrence(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,System.Int32)">
			<summary>
            Binds to an occurence of an existing appointment and loads its first class properties. Calling this method results in a call to EWS.
            </summary>
			<returns>An Appointment instance representing the appointment occurence corresponding to the specified occurence index .</returns>
			<param name="service">The service to use to bind to the appointment.</param>
			<param name="recurringMasterId">The Id of the recurring master that the index represents an occurrence of.</param>
			<param name="occurenceIndex">The index of the occurrence.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.BindToOccurrence(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,System.Int32,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an occurence of an existing appointment and loads the specified set of properties. Calling this method results in a call to EWS.
            </summary>
			<returns>An Appointment instance representing the appointment occurence corresponding to the specified occurence index.</returns>
			<param name="service">The service to use to bind to the appointment.</param>
			<param name="recurringMasterId">The Id of the recurring master that the index represents an occurrence of.</param>
			<param name="propertySet">The set of properties to load.</param>
			<param name="occurenceIndex">The index of the occurrence.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.BindToRecurringMaster(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to the master appointment of a recurring series and loads its first class properties. Calling this method results in a call to EWS.
            </summary>
			<returns>An Appointment instance representing the master appointment of the recurring series to which the specified occurrence belongs.</returns>
			<param name="service">The service to use to bind to the appointment.</param>
			<param name="occurrenceId">The Id of one of the occurrences in the series.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.BindToRecurringMaster(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to the master appointment of a recurring series and loads the specified set of properties. Calling this method results in a call to EWS.
            </summary>
			<returns>An Appointment instance representing the master appointment of the recurring series to which the specified occurrence belongs.</returns>
			<param name="service">The service to use to bind to the appointment.</param>
			<param name="occurrenceId">The Id of one of the occurrences in the series.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.CancelMeeting">
			<summary>
            Cancels the meeting and sends cancellation messages to all attendees. Calling this method results in a call to EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.CancelMeeting(System.String)">
			<summary>
            Cancels the meeting and sends cancellation messages to all attendees. Calling this method results in a call to EWS.
            </summary>
			<param name="cancellationMessageText">Cancellation message text sent to all attendees.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.CreateAcceptMessage(System.Boolean)">
			<summary>
            Creates a local meeting acceptance message that can be customized and sent.
            </summary>
			<returns>An AcceptMeetingInvitationMessage representing the meeting acceptance message.</returns>
			<param name="tentative">Specifies whether the meeting will be tentatively accepted.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.CreateCancelMeetingMessage">
			<summary>
            Creates a local meeting cancellation message that can be customized and sent.
            </summary>
			<returns>A CancelMeetingMessage representing the meeting cancellation message.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.CreateDeclineMessage">
			<summary>
            Creates a local meeting declination message that can be customized and sent.
            </summary>
			<returns>A DeclineMeetingInvitation representing the meeting declination message.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.CreateForward">
			<summary>
            Creates a forward message from this appointment.
            </summary>
			<returns>A ResponseMessage representing the forward response that can subsequently be modified and sent.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.CreateReply(System.Boolean)">
			<summary>
            Creates a reply response to the organizer and/or attendees of the meeting.
            </summary>
			<returns>A ResponseMessage representing the reply response that can subsequently be modified and sent.</returns>
			<param name="replyAll">Indicates whether the reply should go to the organizer only or to all the attendees.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Decline(System.Boolean)">
			<summary>
            Declines the meeting invitation. Calling this method results in a call to EWS.
            </summary>
			<param name="sendResponse">Indicates whether to send a response to the organizer.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Delete(Microsoft.Exchange.WebServices.Data.DeleteMode,Microsoft.Exchange.WebServices.Data.SendCancellationsMode)">
			<summary>
            Deletes this appointment. Calling this method results in a call to EWS.
            </summary>
			<param name="deleteMode">The deletion mode.</param>
			<param name="sendCancellationsMode">Specifies if and how cancellations should be sent if this appointment is a meeting.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Forward(Microsoft.Exchange.WebServices.Data.MessageBody,Microsoft.Exchange.WebServices.Data.EmailAddress[])">
			<summary>
            Forwards the appointment. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the original body of the message.</param>
			<param name="toRecipients">The recipients to forward the appointment to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Forward(Microsoft.Exchange.WebServices.Data.MessageBody,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.EmailAddress})">
			<summary>
            Forwards the appointment. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the original body of the message.</param>
			<param name="toRecipients">The recipients to forward the appointment to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Reply(Microsoft.Exchange.WebServices.Data.MessageBody,System.Boolean)">
			<summary>
            Replies to the organizer and/or the attendees of the meeting. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the body of the meeting.</param>
			<param name="replyAll">Indicates whether the reply should go to the organizer only or to all the attendees.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Save(Microsoft.Exchange.WebServices.Data.SendInvitationsMode)">
			<summary>
            Saves this appointment in the Calendar folder. Calling this method results in at least one call to EWS.
            Mutliple calls to EWS might be made if attachments have been added.
            </summary>
			<param name="sendInvitationsMode">Specifies if and how invitations should be sent if this appointment is a meeting.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Save(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.SendInvitationsMode)">
			<summary>
            Saves this appointment in the specified folder. Calling this method results in at least one call to EWS.
            Mutliple calls to EWS might be made if attachments have been added.
            </summary>
			<param name="sendInvitationsMode">Specifies if and how invitations should be sent if this appointment is a meeting.</param>
			<param name="destinationFolderId">The Id of the folder in which to save this appointment.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Save(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.SendInvitationsMode)">
			<summary>
            Saves this appointment in the specified folder. Calling this method results in at least one call to EWS.
            Mutliple calls to EWS might be made if attachments have been added.
            </summary>
			<param name="sendInvitationsMode">Specifies if and how invitations should be sent if this appointment is a meeting.</param>
			<param name="destinationFolderName">The name of the folder in which to save this appointment.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Appointment.Update(Microsoft.Exchange.WebServices.Data.ConflictResolutionMode,Microsoft.Exchange.WebServices.Data.SendInvitationsOrCancellationsMode)">
			<summary>
            Applies the local changes that have been made to this appointment. Calling this method results in at least one call to EWS.
            Mutliple calls to EWS might be made if attachments have been added or removed.
            </summary>
			<param name="sendInvitationsOrCancellationsMode">Specifies if and how invitations or cancellations should be sent if this appointment is a meeting.</param>
			<param name="conflictResolutionMode">Specifies how conflicts should be resolved.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.AdjacentMeetingCount">
			<summary>
            Gets the number of calendar entries that are adjacent to this appointment in the authenticated user's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.AdjacentMeetings">
			<summary>
            Gets a list of meetings that conflict with this appointment in the authenticated user's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.AllowNewTimeProposal">
			<summary>
            Gets or sets a value indicating whether new time proposals are allowed for attendees of this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.AppointmentReplyTime">
			<summary>
            Gets the time when the attendee replied to the meeting request.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.AppointmentSequenceNumber">
			<summary>
            Gets the sequence number of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.AppointmentState">
			<summary>
            Gets the state of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.AppointmentType">
			<summary>
            Gets a value indicating the type of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.ConferenceType">
			<summary>
            Gets or sets the type of conferencing that will be used during the meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.ConflictingMeetingCount">
			<summary>
            Gets the number of calendar entries that conflict with this appointment in the authenticated user's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.ConflictingMeetings">
			<summary>
            Gets a list of meetings that conflict with this appointment in the authenticated user's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.DeletedOccurrences">
			<summary>
            Gets a list of deleted occurrences for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.Duration">
			<summary>
            Gets the duration of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.End">
			<summary>
            Gets or sets the end time of the appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.EndTimeZone">
			<summary>
            Gets or sets time zone of the end property of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.FirstOccurrence">
			<summary>
            Gets an OccurrenceInfo object identifying the first occurrence of this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.ICalDateTimeStamp">
			<summary>
            Gets the ICalendar DateTimeStamp.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.ICalRecurrenceId">
			<summary>
            Gets the ICalendar RecurrenceId.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.ICalUid">
			<summary>
            Gets the ICalendar Uid.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.IsAllDayEvent">
			<summary>
            Gets or sets a value indicating whether this appointment is an all day event.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.IsCancelled">
			<summary>
            Gets a value indicating whether the appointment has been cancelled.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.IsMeeting">
			<summary>
            Gets a value indicating whether the appointment is a meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.IsOnlineMeeting">
			<summary>
            Gets or sets a value indicating whether this is an online meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.IsRecurring">
			<summary>
            Gets a value indicating whether the appointment is recurring.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.IsResponseRequested">
			<summary>
            Gets or sets a value indicating whether responses are requested when invitations are sent for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.LastOccurrence">
			<summary>
            Gets an OccurrenceInfo identifying the last occurrence of this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.LegacyFreeBusyStatus">
			<summary>
            Gets or sets a value indicating the free/busy status of the owner of this appointment. 
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.Location">
			<summary>
            Gets or sets the location of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.MeetingRequestWasSent">
			<summary>
            Gets a value indicating whether the meeting request has already been sent.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.MeetingWorkspaceUrl">
			<summary>
            Gets or sets the URL of the meeting workspace. A meeting workspace is a shared Web site for planning meetings and tracking results.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.ModifiedOccurrences">
			<summary>
            Gets a list of modified occurrences for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.MyResponseType">
			<summary>
            Gets a value indicating what was the last response of the user that loaded this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.NetShowUrl">
			<summary>
            Gets or sets the URL of the Microsoft NetShow online meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.OptionalAttendees">
			<summary>
            Gets a list of optional attendeed for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.Organizer">
			<summary>
            Gets the organizer of this meeting. The Organizer property is read-only and is only relevant for attendees.
            The organizer of a meeting is automatically set to the user that created the meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.OriginalStart">
			<summary>
            Gets the original start time of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.Recurrence">
			<summary>
            Gets or sets the recurrence pattern for this appointment. Available recurrence pattern classes include
            Recurrence.DailyPattern, Recurrence.MonthlyPattern and Recurrence.YearlyPattern.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.RequiredAttendees">
			<summary>
            Gets a list of required attendees for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.Resources">
			<summary>
            Gets a list of resources for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.Start">
			<summary>
            Gets or sets the start time of the appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.StartTimeZone">
			<summary>
            Gets or sets time zone of the start property of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.TimeZone">
			<summary>
            Gets the name of the time zone this appointment is defined in.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Appointment.When">
			<summary>
            Gets a text value indicating when this appointment occurs. The text returned by When is localized using the Exchange Server culture or using the culture specified in the PreferredCulture property of the ExchangeService object this appointment is bound to.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AppointmentOccurrenceId">
			<summary>
            Represents the Id of an occurrence of a recurring appointment.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AppointmentOccurrenceId.#ctor(System.String,System.Int32)">
			<summary>
        Initializes a new instance of the AppointmentOccurrenceId class.
      </summary>
			<param name="recurringMasterUniqueId">The Id of the recurring master the Id represents an occurrence of.</param>
			<param name="occurrenceIndex">The index of the occurrence.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AppointmentOccurrenceId.OccurrenceIndex">
			<summary>
            Gets or sets the index of the occurrence. Note that the occurrence index starts at one not zero.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AppointmentSchema">
			<summary>
            Represents the schema for appointment and meeting requests.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.AdjacentMeetingCount">
			<summary>
            Defines the AdjacentMeetingCount property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.AdjacentMeetings">
			<summary>
            Defines the AdjacentMeetings property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.AllowNewTimeProposal">
			<summary>
            Defines the AllowNewTimeProposal property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.AppointmentReplyTime">
			<summary>
            Defines the AppointmentReplyTime property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.AppointmentSequenceNumber">
			<summary>
            Defines the AppointmentSequenceNumber property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.AppointmentState">
			<summary>
            Defines the AppointmentState property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.AppointmentType">
			<summary>
            Defines the AppointmentType property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.ConferenceType">
			<summary>
            Defines the ConferenceType property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.ConflictingMeetingCount">
			<summary>
            Defines the ConflictingMeetingCount property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.ConflictingMeetings">
			<summary>
            Defines the ConflictingMeetings property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.DeletedOccurrences">
			<summary>
            Defines the DeletedOccurrences property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.Duration">
			<summary>
            Defines the Duration property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.End">
			<summary>
            Defines the End property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.EndTimeZone">
			<summary>
            Defines the EndTimeZone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.FirstOccurrence">
			<summary>
            Defines the FirstOccurrence property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.ICalDateTimeStamp">
			<summary>
            Defines the iCalendar DateTimeStamp property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.ICalRecurrenceId">
			<summary>
            Defines the iCalendar RecurrenceId property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.ICalUid">
			<summary>
            Defines the iCalendar Uid property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.IsAllDayEvent">
			<summary>
            Defines the IsAllDayEvent property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.IsCancelled">
			<summary>
            Defines the IsCancelled property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.IsMeeting">
			<summary>
            Defines the IsMeeting property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.IsOnlineMeeting">
			<summary>
            Defines the IsOnlineMeeting property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.IsRecurring">
			<summary>
            Defines the IsRecurring property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.IsResponseRequested">
			<summary>
            Defines the IsResponseRequested property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.LastOccurrence">
			<summary>
            Defines the LastOccurrence property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.LegacyFreeBusyStatus">
			<summary>
            Defines the LegacyFreeBusyStatus property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.Location">
			<summary>
            Defines the Location property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.MeetingRequestWasSent">
			<summary>
            Defines the MeetingRequestWasSent property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.MeetingWorkspaceUrl">
			<summary>
            Defines the MeetingWorkspaceUrl property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.ModifiedOccurrences">
			<summary>
            Defines the ModifiedOccurrences property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.MyResponseType">
			<summary>
            Defines the MyResponseType property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.NetShowUrl">
			<summary>
            Defines the NetShowUrl property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.OptionalAttendees">
			<summary>
            Defines the OptionalAttendees property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.Organizer">
			<summary>
            Defines the Organizer property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.OriginalStart">
			<summary>
            Defines the OriginalStart property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.Recurrence">
			<summary>
            Defines the Recurrence property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.RequiredAttendees">
			<summary>
            Defines the RequiredAttendees property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.Resources">
			<summary>
            Defines the Resources property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.Start">
			<summary>
            Defines the Start property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.StartTimeZone">
			<summary>
            Defines the StartTimeZone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.TimeZone">
			<summary>
            Defines the TimeZone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentSchema.When">
			<summary>
            Defines the When property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AppointmentType">
			<summary>
            Defines the type of an appointment.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentType.Exception">
			<summary>
            The appointment is an exception of a recurring appointment.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentType.Occurrence">
			<summary>
            The appointment is an occurrence of a recurring appointment.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentType.RecurringMaster">
			<summary>
            The appointment is the recurring master of a series.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AppointmentType.Single">
			<summary>
            The appointment is non-recurring.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Attachment">
			<summary>Represents an attachment to an item.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Attachment.Load">
			<summary>Loads the attachment. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attachment.ContentId">
			<summary>Gets or sets the content ID of the attachment. ContentId can be used as a custom way to identify
            an attachment in order to reference it from within the body of the item that the attachment belongs to.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attachment.ContentLocation">
			<summary>Gets or sets the content location of the attachment. ContentLocation can be used to associate an attachment with a URL that defines its location on the Web.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attachment.ContentType">
			<summary>Gets or sets the content type of the attachment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attachment.Id">
			<summary>Gets the identifier of the attachment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attachment.IsInline">
			<summary>Gets or sets a value that indicates whether this is an inline attachment.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attachment.LastModifiedTime">
			<summary>Gets the date and time when this attachment was last changed.</summary>
			<returns>A <see cref="T:System.DateTime"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attachment.Name">
			<summary>Gets or sets the name of the attachment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attachment.Size">
			<summary>Gets the size of the attachment.</summary>
			<returns>A <see cref="T:System.Int32"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AttachmentCollection">
			<summary>
            Represents an item's attachment collection.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttachmentCollection.AddFileAttachment(System.String)">
			<summary>
            Adds a file attachment to the collection.
            </summary>
			<returns>A FileAttachment instance.</returns>
			<param name="fileName">The name of the file representing the content of the attachment.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttachmentCollection.AddFileAttachment(System.String,System.Byte[])">
			<summary>
            Adds a file attachment to the collection.
            </summary>
			<returns>A FileAttachment instance.</returns>
			<param name="content">A byte arrays representing the content of the attachment.</param>
			<param name="name">The display name of the new attachment.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttachmentCollection.AddFileAttachment(System.String,System.IO.Stream)">
			<summary>
            Adds a file attachment to the collection.
            </summary>
			<returns>A FileAttachment instance.</returns>
			<param name="contentStream">The stream from which to read the content of the attachment.</param>
			<param name="name">The display name of the new attachment.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttachmentCollection.AddFileAttachment(System.String,System.String)">
			<summary>
            Adds a file attachment to the collection.
            </summary>
			<returns>A FileAttachment instance.</returns>
			<param name="name">The display name of the new attachment.</param>
			<param name="fileName">The name of the file representing the content of the attachment.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttachmentCollection.AddItemAttachment``1">
			<summary>
            Adds an item attachment to the collection
            </summary>
			<returns>An ItemAttachment instance.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttachmentCollection.Clear">
			<summary>
            Removes all attachments from this collection.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttachmentCollection.Remove(Microsoft.Exchange.WebServices.Data.Attachment)">
			<summary>
            Removes the specified attachment.
            </summary>
			<returns>Returns true if the attachment was successfully removed from the collection; otherwise, returns false.</returns>
			<param name="attachment">The attachment to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttachmentCollection.RemoveAt(System.Int32)">
			<summary>
            Removes the attachment at the specified index.
            </summary>
			<param name="index">Index of the attachment to remove.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Attendee">
			<summary>
            Represents an attendee to a meeting.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Attendee.#ctor">
			<summary>
        Initializes a new instance of the Attendee class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Attendee.#ctor(Microsoft.Exchange.WebServices.Data.EmailAddress)">
			<summary>
        Initializes a new instance of the Attendee class from an EmailAddress.
      </summary>
			<param name="mailbox">The mailbox used to initialize the Attendee.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Attendee.#ctor(System.String)">
			<summary>
        Initializes a new instance of the Attendee class.
      </summary>
			<param name="smtpAddress">The SMTP address used to initialize the Attendee.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Attendee.#ctor(System.String,System.String)">
			<summary>
        Initializes a new instance of the Attendee class.
      </summary>
			<param name="smtpAddress">The SMTP address used to initialize the Attendee.</param>
			<param name="name">The name used to initialize the Attendee.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Attendee.#ctor(System.String,System.String,System.String)">
			<summary>
        Initializes a new instance of the Attendee class.
      </summary>
			<param name="smtpAddress">The SMTP address used to initialize the Attendee.</param>
			<param name="routingType">The routing type used to initialize the Attendee.</param>
			<param name="name">The name used to initialize the Attendee.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attendee.LastResponseTime">
			<summary>
            Gets the date and time when the attendee last responded to a meeting invitation or update.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Attendee.ResponseType">
			<summary>
            Gets the type of response the attendee gave to the meeting invitation it received.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AttendeeAvailability">
			<summary>Represents the availability of an individual attendee.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AttendeeAvailability.CalendarEvents">
			<summary>The CalendarEvents property gets a collection of calendar events for the attendee.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection ` 1"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AttendeeAvailability.MergedFreeBusyStatus">
			<summary>Gets a collection of free/busy status items for the attendee.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection ` 1"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AttendeeAvailability.ViewType">
			<summary>Gets the free/busy view type that is retrieved for the attendee.</summary>
			<returns>A FreeBusyViewType object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AttendeeAvailability.WorkingHours">
			<summary>Gets the working hours of the attendee.</summary>
			<returns>A WorkingHours object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AttendeeCollection">
			<summary>
            Represents a collection of attendees.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeCollection.Add(Microsoft.Exchange.WebServices.Data.Attendee)">
			<summary>
            Adds an attendee to the collection.
            </summary>
			<param name="attendee">The attendee to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeCollection.Add(System.String)">
			<summary>
            Adds a attendee to the collection.
            </summary>
			<returns>An Attendee instance initialized with the provided SMTP address.</returns>
			<param name="smtpAddress">The SMTP address of the attendee.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeCollection.Add(System.String,System.String)">
			<summary>
            Adds a attendee to the collection.
            </summary>
			<returns>An Attendee instance initialized with the provided name and SMTP address.</returns>
			<param name="smtpAddress">The SMTP address of the attendee.</param>
			<param name="name">The name of the attendee.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeCollection.Clear">
			<summary>
            Clears the collection.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeCollection.Remove(Microsoft.Exchange.WebServices.Data.Attendee)">
			<summary>
            Removes an attendee from the collection.
            </summary>
			<returns>Returns true if the attendee was successfully removed from the collection; otherwise, returns false.</returns>
			<param name="attendee">The attendee to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeCollection.RemoveAt(System.Int32)">
			<summary>
            Removes an attendee from the collection.
            </summary>
			<param name="index">The index of the attendee to remove.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AttendeeInfo">
			<summary>Represents information about an attendee for which to request availability information.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeInfo.#ctor">
			<summary>Initializes a new instance of the AttendeeInfo class.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeInfo.#ctor(System.String)">
			<summary>Initializes a new instance of the AttendeeInfo class by using the specified SMTP e-mail address.</summary>
			<param name="smtpAddress">The SMTP e-mail address of this attendee.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeInfo.#ctor(System.String,Microsoft.Exchange.WebServices.Data.MeetingAttendeeType,System.Boolean)">
			<summary>Initializes a new instance of the AttendeeInfo class by using the specified SMTP address, attendee type, and conflict exclusions.</summary>
			<param name="excludeConflicts">Indicates whether to exclude attendee conflicts. A value of true indicates that times when this attendee is not available are excluded; otherwise, the value is false.</param>
			<param name="smtpAddress">The SMTP address of the attendee.</param>
			<param name="attendeeType">One of the MeetingAttendeeType enumeration values.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AttendeeInfo.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.AttendeeInfo">
			<summary>Defines an implicit conversion between a string that represents an SMTP e-mail address and an AttendeeInfo object.</summary>
			<returns>An AttendeeInfo object.</returns>
			<param name="smtpAddress">A string representation of an SMTP e-mail address.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AttendeeInfo.AttendeeType">
			<summary>Gets or sets the type of meeting attendee.</summary>
			<returns>A MeetingAttendeeType object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AttendeeInfo.ExcludeConflicts">
			<summary>Gets or sets a value that indicates whether times when this attendee is not available should be returned.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AttendeeInfo.SmtpAddress">
			<summary>Gets or sets the SMTP e-mail address of this attendee.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AutodiscoverLocalException">
			<summary>
            Represents an exception that is thrown when the Autodiscover service could not be contacted.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AutodiscoverLocalException.#ctor">
			<summary>
            Initializes a new instance of the AutodiscoverLocalException class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AutodiscoverLocalException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the AutodiscoverLocalException class.
      </summary>
			<param name="message">The message.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AutodiscoverLocalException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the AutodiscoverLocalException class.
      </summary>
			<param name="innerException">The inner exception.</param>
			<param name="message">The message.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AvailabilityData">
			<summary>Defines the user availability data that can be requested.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AvailabilityData.FreeBusy">
			<summary>Specifies that only free/busy data should be returned.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AvailabilityData.FreeBusyAndSuggestions">
			<summary>Specifies that free/busy data and suggested meeting times should be returned.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.AvailabilityData.Suggestions">
			<summary>Specifies that only suggested meeting times should be returned.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.AvailabilityOptions">
			<summary>Represents the options for an availability request.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.#ctor">
			<summary>Initializes a new instance of the AvailabilityOptions class.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.CurrentMeetingTime">
			<summary>Gets or sets the start time of a meeting to update with suggested meeting times.</summary>
			<returns>A <see cref="T:System.Nullable`1"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.DetailedSuggestionsWindow">
			<summary>Gets or sets the time period for which detailed information about suggested meeting times should be returned.</summary>
			<returns>A TimeWindow object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.GlobalObjectId">
			<summary>Gets or sets the global identifier of a meeting to be modified by the returned data.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.GoodSuggestionThreshold">
			<summary>Gets or sets the percentage of attendees that must have the time period open for the time period to qualify as a good suggested meeting time. </summary>
			<returns>A <see cref="T:System.Int32"></see> object. The value must be between 1 and 49; the default value is 25.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.MaximumNonWorkHoursSuggestionsPerDay">
			<summary>Gets or sets the number of meeting times that should be suggested outside of regular working hours per day. </summary>
			<returns>A <see cref="T:System.Int32"></see> object. The value must be between 0 and 48; the default value is 0.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.MaximumSuggestionsPerDay">
			<summary>Gets or sets the maximum number of meeting times that should be suggested per day. </summary>
			<returns>A <see cref="T:System.Int32"></see> object. The value must be between 0 and 48; the default value is 10.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.MeetingDuration">
			<summary>Gets or sets the duration, in minutes, of the meeting for which to obtain suggestions. </summary>
			<returns>A <see cref="T:System.Int32"></see> object. The value must be between 30 and 1440; the default value is 60.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.MergedFreeBusyInterval">
			<summary>Gets or sets the time difference between two successive meeting times in a merged free/busy view. </summary>
			<returns>A <see cref="T:System.Int32"></see> object. The value must be between 5 and 1440; the default value is 30.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.MinimumSuggestionQuality">
			<summary>Gets or sets the minimum quality of suggestions to return. </summary>
			<returns>A SuggestionQuality enumeration value. The default value is SuggestionQuality.Fair.
</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.AvailabilityOptions.RequestedFreeBusyView">
			<summary>Gets or sets the requested type of free/busy view. </summary>
			<returns>A FreeBusyViewType enumeration value. The default value is FreeBusyViewType.Detailed.
</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.BasePropertySet">
			<summary>
            Defines base property sets that are used as the base for custom property sets.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.BasePropertySet.FirstClassProperties">
			<summary>
            Includes all the first class properties of items and folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.BasePropertySet.IdOnly">
			<summary>
            Only includes the Id of items and folders.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.BatchServiceResponseException`1">
			<summary>
            Represents a remote service exception that can have multiple service responses.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.BatchServiceResponseException`1.ServiceResponses">
			<summary>
            Gets a list of responses returned by the web method.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.BodyType">
			<summary>
            Defines the type of body of an item.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.BodyType.HTML">
			<summary>
            The body is formatted in HTML.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.BodyType.Text">
			<summary>
            The body is in plain text.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CalendarActionResults">
			<summary>Represents the results of an action that is performed on a calendar item or meeting request message, such as accepting, tentatively accepting, or declining a meeting request.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarActionResults.Appointment">
			<summary>Gets the meeting that was accepted, tentatively accepted, or declined.</summary>
			<returns>An <see cref="T:Microsoft.Exchange.WebServices.Data.Appointment"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarActionResults.MeetingCancellation">
			<summary>Gets a copy of the meeting cancellation message that is sent by the organizer to the attendees of a meeting when the meeting is canceled.</summary>
			<returns>A <see cref="T:Microsoft.Exchange.WebServices.Data.MeetingCancellation"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarActionResults.MeetingRequest">
			<summary>Gets the meeting request that was moved to the Deleted Items folder as a result of an attendee accepting, tentatively accepting, or declining a meeting request. If the meeting request is accepted, tentatively accepted, or declined from the Deleted Items folder, it is permanently deleted and the MeetingRequest property is null.</summary>
			<returns>A <see cref="T:Microsoft.Exchange.WebServices.Data.MeetingRequest"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarActionResults.MeetingResponse">
			<summary>Gets the copy of the response that is sent to the organizer of a meeting when the meeting is accepted, tentatively accepted, or declined by an attendee. The MeetingResponse property is null if the attendee chose not to send a response.</summary>
			<returns>A <see cref="T:Microsoft.Exchange.WebServices.Data.MeetingResponse"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CalendarEvent">
			<summary>Represents an event in a calendar.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEvent.Details">
			<summary>Gets the details of a calendar event. </summary>
			<returns>A CalendarEventDetails object. The Details property is null if the user who is making the request does not have the appropriate rights.
</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEvent.EndTime">
			<summary>Gets the end date and time of the event.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEvent.FreeBusyStatus">
			<summary>Gets the free/busy status that is associated with the event.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEvent.StartTime">
			<summary>Gets the start date and time of the event.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CalendarEventDetails">
			<summary>Represents the details of a calendar event that is returned by an availability request.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEventDetails.IsException">
			<summary>Gets a value that indicates whether the calendar event is an exception to a recurring series of events.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEventDetails.IsMeeting">
			<summary>Gets a value that indicates whether the calendar event is a meeting.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEventDetails.IsPrivate">
			<summary>Gets a value that indicates whether the calendar event is private.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEventDetails.IsRecurring">
			<summary>Gets a value that indicates whether the calendar event is a recurring event.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEventDetails.IsReminderSet">
			<summary>Gets a value that indicates whether the calendar event has a reminder set.</summary>
      <returns>A <see cref="T:System.Boolean"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEventDetails.Location">
			<summary>Gets the location of the calendar event.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEventDetails.StoreId">
			<summary>Gets the data store identifier of the calendar event.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarEventDetails.Subject">
			<summary>Gets the subject of the calendar event.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CalendarFolder">
			<summary>Represents a folder that contains appointments.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarFolder.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>Initializes an unsaved local instance of the CalendarFolder class. To bind to an existing calendar folder, use CalendarFolder.Bind() instead.</summary>
			<param name="service">The ExchangeService object to which the calendar folder will be bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>Binds to an existing calendar folder and loads its first class properties. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>An instance of the CalendarFolder class that represents the calendar folder that corresponds to the specified ID.</returns>
			<param name="service">The service to use to bind to the calendar folder.</param>
			<param name="id">The ID of the calendar folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>Binds to an existing calendar folder and loads its first class properties. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>An instance of the CalendarFolder class that represents the calendar folder with the specified name.</returns>
			<param name="service">The service to use to bind to the calendar folder.</param>
			<param name="name">The name of the calendar folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>Binds to an existing calendar folder and loads the specified set of properties. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>A CalendarFolder instance that represents the calendar folder that corresponds to the specified ID.</returns>
			<param name="service">The service to use to bind to the calendar folder.</param>
			<param name="id">The ID of the calendar folder to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>Binds to an existing calendar folder and loads the specified set of properties. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>An instance of the CalendarFolder class that represents the calendar folder with the specified name.</returns>
			<param name="service">The service to use to bind to the calendar folder.</param>
			<param name="propertySet">The set of properties to load.</param>
			<param name="name">The name of the calendar folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarFolder.FindAppointments(Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>Obtains a list of appointments by searching the contents of this folder and performing recurrence expansion for recurring appointments. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The FindAppointments method returns an object that represents the results of the search operation.</returns>
			<param name="view">The view that controls the range of appointments that are returned.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarFolder.FindAppointments(Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>Returns a list of appointments by searching the contents of a calendar folder and performing recurrence expansion for recurring appointments. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The FindAppointments method returns a FindItemsResults object.</returns>
			<param name="view">The view that controls the range of appointments that are returned.</param>
			<param name="searchFilter">The search filter to use.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarFolder.FindAppointments(System.String,Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>Returns a list of appointments by searching the contents of a calendar folder and performing recurrence expansion for recurring appointments. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The FindAppointments method returns a FindItemsResults object.</returns>
			<param name="queryString">The query string to use for indexed search.</param>
			<param name="view">The view that controls the range of appointments that are returned.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CalendarResponseMessage`1">
			<summary>
            Represents the base class for all calendar-related response messages.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarResponseMessage`1.Attachments">
			<summary>
            Gets a list of attachments to this response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarResponseMessage`1.BccRecipients">
			<summary>
            Gets a list of recipients this response will be sent to as Bcc.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarResponseMessage`1.Body">
			<summary>
            Gets or sets the body of the response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarResponseMessage`1.CcRecipients">
			<summary>
            Gets a list of recipients the response will be sent to as Cc.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarResponseMessage`1.Sender">
			<summary>
            Gets or sets the sender of this response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarResponseMessage`1.Sensitivity">
			<summary>
            Gets or sets the sensitivity of this response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarResponseMessage`1.ToRecipients">
			<summary>
            Gets a list of recipients the response will be sent to.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CalendarResponseMessageBase`1">
			<summary>The base class for all calendar-related responses.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarResponseMessageBase`1.Save">
			<summary>Saves the calendar response message in the Drafts folder. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The Save method returns a CalendarActionResults object that contains the items that were created or modified.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarResponseMessageBase`1.Save(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>Saves the calendar response message to the specified folder. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The Save method returns a CalendarActionResults object that contains the items that were created or modified.</returns>
			<param name="destinationFolderId">The identifier of the folder to which to save the response.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarResponseMessageBase`1.Save(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>Saves the calendar response message to the specified folder. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The Save method returns a CalendarActionResults object that contains the items that were created or modified.</returns>
			<param name="destinationFolderName">The name of the folder in which to save the response.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarResponseMessageBase`1.Send">
			<summary>Sends this calendar response message without saving a copy. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The Send method returns a CalendarActionResults object that contains the items that were created or modified.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarResponseMessageBase`1.SendAndSaveCopy">
			<summary>Sends this calendar response message and saves a copy in the Sent Items folder. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The SendAndSaveCopy method returns a CalendarActionResults object that contains the items that were created or modified.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarResponseMessageBase`1.SendAndSaveCopy(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>Sends this calendar response message and saves a copy to the specified folder. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The SendAndSaveCopy method returns a CalendarActionResults object that contains the items that were created or modified.</returns>
			<param name="destinationFolderId">The identifier of the folder in which to store the copy of the calendar response message.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarResponseMessageBase`1.SendAndSaveCopy(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>Sends this calendar response message and saves a copy to the specified folder. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The SendAndSaveCopy method returns a CalendarActionResults object that contains the items that were created or modified.</returns>
			<param name="destinationFolderName">The name of the folder in which to store the copy of the calendar response message.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CalendarView">
			<summary>Represents a date range view of appointments in calendar folder search operations.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarView.#ctor(System.DateTime,System.DateTime)">
			<summary>Initializes a new instance of the CalendarView class with the specified start and end dates.</summary>
			<param name="endDate">The end date.</param>
			<param name="startDate">The start date.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CalendarView.#ctor(System.DateTime,System.DateTime,System.Int32)">
			<summary>Initializes a new instance of the CalendarView class with the specified start and end dates and that will contain the specified maximum number of items or less.
            </summary>
			<param name="maxItemsReturned">The maximum number of items that the search operation should return.</param>
			<param name="endDate">The end date.</param>
			<param name="startDate">The start date.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarView.EndDate">
			<summary>Gets or sets the end date.
            </summary>
			<returns>A <see cref="T:System.DateTime"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarView.MaxItemsReturned">
			<summary>Gets or sets the maximum number of items that the search operation should return.
            </summary>
			<returns>A <see cref="T:System.Nullable `1"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarView.StartDate">
			<summary>Gets or sets the start date.
            </summary>
			<returns>A <see cref="T:System.DateTime"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CalendarView.Traversal">
			<summary>Gets or sets the search traversal mode. 
            </summary>
			<returns>An ItemTraversal enumeration value. The default value is ItemTraversal.Shallow.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CancelMeetingMessage">
			<summary>
            Represents a meeting cancellation message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CancelMeetingMessage.Body">
			<summary>
            Gets or sets the body of the response.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Change">
			<summary>
            Represents a change as returned by a synchronization operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Change.ChangeType">
			<summary>
            Gets the type of the change.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ChangeCollection`1">
			<summary>
            Represents a collection of changes as returned by a synchronization operation.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ChangeCollection`1.GetEnumerator">
			<summary>
            Gets an enumerator that iterates through the elements of the collection.
            </summary>
			<returns>An IEnumerator for the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ChangeCollection`1.Count">
			<summary>
            Gets the number of changes in the collection.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ChangeCollection`1.Item(System.Int32)">
			<summary>
            Gets an individual change from the change collection.
            </summary>
			<returns>An single change.</returns>
			<param name="index">Zero-based index.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ChangeCollection`1.MoreChangesAvailable">
			<summary>
            Gets a value indicating whether the there are more changes to be synchronized from the server.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ChangeCollection`1.SyncState">
			<summary>
            Gets the SyncState blob returned by a synchronization operation.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ChangeType">
			<summary>
            Defines the type of change of a synchronization event.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ChangeType.Create">
			<summary>
            An item or folder was created.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ChangeType.Delete">
			<summary>
            An item or folder was deleted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ChangeType.ReadFlagChange">
			<summary>
            An item's IsRead flag was changed.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ChangeType.Update">
			<summary>
            An item or folder was modified.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ComparisonMode">
			<summary>
            Defines the way values are compared in search filters.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ComparisonMode.Exact">
			<summary>
            The comparison is exact.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ComparisonMode.IgnoreCase">
			<summary>
            The comparison ignores casing.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ComparisonMode.IgnoreCaseAndNonSpacingCharacters">
			<summary>
            The comparison ignores casing and spacing characters.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ComparisonMode.IgnoreNonSpacingCharacters">
			<summary>
            The comparison ignores spacing characters.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CompleteName">
			<summary>Represents the complete name of a contact.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.CompleteName.#ctor">
			<summary>Initializes a new instance of the CompleteName class.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.FullName">
			<summary>Gets the full name of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.GivenName">
			<summary>Gets the given name of the contact.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.Initials">
			<summary>Gets the initials of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.MiddleName">
			<summary>Gets the middle name of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.NickName">
			<summary>Gets the nickname of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.Suffix">
			<summary>Gets the suffix of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.Surname">
			<summary>Gets the surname of the contact.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.Title">
			<summary>Gets the contact's title.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.YomiGivenName">
			<summary>Gets the Yomi given name of the contact.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.CompleteName.YomiSurname">
			<summary>Gets the Yomi surname of the contact.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ComplexProperty">
			<summary>Represents a property that can be sent to or retrieved from Exchange Web Services (EWS).</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1">
			<summary>
            Represents a collection of properties that can be sent to and retrieved from EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.Contains(`0)">
			<summary>
            Determines whether a specific property is in the collection.
            </summary>
			<returns>Returns true if the property was found in the collection; otherwise, returns false.</returns>
			<param name="complexProperty">The property to locate in the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.GetEnumerator">
			<summary>
            Gets an enumerator that iterates through the elements of the collection.
            </summary>
			<returns>An IEnumerator for the collection.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.IndexOf(`0)">
			<summary>
            Searches for a specific property and return its zero-based index within the collection.
            </summary>
			<returns>The zero-based index of the property within the collection.</returns>
			<param name="complexProperty">The property to locate in the collection.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.Count">
			<summary>
            Gets the total number of properties in the collection.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ComplexPropertyCollection`1.Item(System.Int32)">
			<summary>
            Gets the property at the specified index.
            </summary>
			<returns>The property at the specified index.</returns>
			<param name="index">The zero-based index of the property to get.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Conflict">
			<summary>Represents a conflict in a meeting time suggestion.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Conflict.ConflictType">
			<summary>Gets the type of conflict that is reported.</summary>
			<returns>One of the ConflictType enumeration values.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Conflict.FreeBusyStatus">
			<summary>Gets the free/busy status of the conflicting attendee. </summary>
			<returns>A LegacyFreeBusyStatus instance that contains free/busy status for the conflicting attendee.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Conflict.NumberOfMembers">
			<summary>Gets the number of attendees, resources, and rooms in the conflicting group.</summary>
			<returns>A <see cref="T:System.Int32"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Conflict.NumberOfMembersAvailable">
			<summary>Gets the number of members in the conflicting group who are available.</summary>
			<returns>A <see cref="T:System.Int32"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Conflict.NumberOfMembersWithConflict">
			<summary>Gets the number of members in the conflicting group that have a conflict.</summary>
			<returns>A <see cref="T:System.Int32"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Conflict.NumberOfMembersWithNoData">
			<summary>Gets the number of members in the conflicting group who do have published free/busy information.</summary>
			<returns>A <see cref="T:System.Int32"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ConflictResolutionMode">
			<summary>
            Defines how conflict resolutions are handled in update operations.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConflictResolutionMode.AlwaysOverwrite">
			<summary>
            Local property changes overwrite server-side changes. 
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConflictResolutionMode.AutoResolve">
			<summary>
            Local property changes are applied to the server unless the server-side copy is more recent than the local copy.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConflictResolutionMode.NeverOverwrite">
			<summary>
            Local property changes are discarded.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ConflictType">
			<summary>Defines the conflict types that can be returned in meeting time suggestions.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConflictType.GroupConflict">
			<summary>There is a conflict with at least one member of a group.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConflictType.GroupTooBigConflict">
			<summary>There is a conflict with at least one member of a group, but the group is too large to return individual conflict information.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConflictType.IndividualAttendeeConflict">
			<summary>There is a conflict with an individual attendee.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConflictType.UnknownAttendeeConflict">
			<summary>There is a conflict with an unresolvable attendee, on an attendee that is not an individual, group, or contact.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ConnectingIdType">
			<summary>
            Defines the type of Id of a ConnectingId object.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConnectingIdType.PrincipalName">
			<summary>
            The connecting Id is a principal name.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConnectingIdType.SID">
			<summary>
            The Id is an SID.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConnectingIdType.SmtpAddress">
			<summary>
            The Id is an SMTP address.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ConnectionFailureCause">
			<summary>
            The ConnectionFailureCause enumeration
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConnectionFailureCause.NoAnswer">
			<summary>
            NoAnswer
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConnectionFailureCause.None">
			<summary>
            None
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConnectionFailureCause.Other">
			<summary>
            Other
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConnectionFailureCause.Unavailable">
			<summary>
            Unavailable
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ConnectionFailureCause.UserBusy">
			<summary>
            UserBusy
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Contact">
			<summary>Represents a contact. The properties that are available on contacts are defined by the ContactSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Contact.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>Initializes an unsaved local instance of the Contact class. To bind to an existing contact, use Contact.Bind() instead.
            </summary>
			<param name="service">The ExchangeServiceBase object to which the contact will be bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Contact.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>Binds to an existing contact and loads its first class properties. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>The Bind method returns a Contact instance that represents the contact that corresponds to the specified ID.</returns>
			<param name="service">The service to use to bind to the contact.</param>
			<param name="id">The ID of the appointment to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Contact.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>Binds to an existing contact and loads the specified set of properties. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>A Contact instance that represents the contact that corresponds to the specified ID.</returns>
			<param name="service">The service to use to bind to the contact.</param>
			<param name="id">The ID of the appointment to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Contact.GetContactPictureAttachment">
			<summary>Returns the file attachment that contains the contact's picture.</summary>
			<returns>A FileAttachment object.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Contact.RemoveContactPicture">
			<summary>Removes the contact's picture.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Contact.SetContactPicture(System.Byte[])">
			<summary>Sets the contact's picture by using the specified byte array.</summary>
			<param name="content">The bytes that make the picture.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Contact.SetContactPicture(System.IO.Stream)">
			<summary>Sets the contact's picture by using the specified stream.</summary>
			<param name="contentStream">The stream that contains the contact's picture.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Contact.SetContactPicture(System.String)">
			<summary>Sets the contact's picture by using the specified file.</summary>
			<param name="fileName">The name of the file that contains the contact's picture.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.AssistantName">
			<summary>Gets or sets the contact's assistant’s name.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Birthday">
			<summary>Gets or sets the birthday of the contact.
            </summary>
			<returns>A <see cref="T:System.Nullable`1"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.BusinessHomePage">
			<summary>Gets or sets the business home page of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Children">
			<summary>Gets or sets a list of children for the contact.
            </summary>
			<returns>A StringList object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Companies">
			<summary>Gets or sets a list of companies for the contact.
            </summary>
			<returns>A StringList object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.CompanyName">
			<summary>Gets or sets the company name of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.CompleteName">
			<summary>Gets or sets the complete name of the contact.
            </summary>
			<returns>A CompleteName object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.ContactSource">
			<summary>Gets the source of the contact.
            </summary>
			<returns>A <see cref="T:System.Nullable`1"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Department">
			<summary>Gets or sets the department of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.DisplayName">
			<summary>Gets or sets the display name of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.EmailAddresses">
			<summary>Gets an indexed list of e-mail addresses for the contact. 
            </summary>
			<returns>An EmailAddressDictionary object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.FileAs">
			<summary>Gets or sets the name under which this contact is filed. The FileAs property can be manually set or can be automatically calculated based on the value of the FileAsMapping property.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.FileAsMapping">
			<summary>Gets or sets a value that indicates how the FileAs property should be automatically calculated.
            </summary>
			<returns>A <see cref="T:Microsoft.Exchange.WebServices.Data.FileAsMapping"></see> enumeration value.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Generation">
			<summary>Gets or sets the generation of the contact.</summary>
			<returns>A Generation object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.GivenName">
			<summary>Gets or sets the given name of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.HasPicture">
			<summary>Gets a value that indicates whether the contact has a picture.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.ImAddresses">
			<summary>Gets an indexed list of instant messaging (IM) addresses for the contact.</summary>
			<returns>An ImAddressDictionary object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Initials">
			<summary>Gets or sets the initials of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.JobTitle">
			<summary>Gets or sets the contact's job title.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Manager">
			<summary>Gets or sets the name of the contact's manager.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.MiddleName">
			<summary>Gets or sets the middle name of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Mileage">
			<summary>Gets or sets the mileage for the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.NickName">
			<summary>Gets or sets the nickname name of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.OfficeLocation">
			<summary>Gets or sets the location of the contact's office.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.PhoneNumbers">
			<summary>Gets an indexed list of telephone numbers for the contact. </summary>
			<returns>A PhoneNumberDictionary object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.PhysicalAddresses">
			<summary>Gets an indexed list of physical addresses for the contact.</summary>
			<returns>A PhysicalAddressDictionary object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.PostalAddressIndex">
			<summary>Gets or sets the index of the contact's postal address. When set, PostalAddressIndex refers to an entry in the PhysicalAddresses property indexed list.
            </summary>
			<returns>A <see cref="T:System.Nullable`1"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Profession">
			<summary>Gets or sets the contact's profession.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.SpouseName">
			<summary>Gets or sets the name of the contact's spouse.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.Surname">
			<summary>Gets or sets the surname of the contact.
            </summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Contact.WeddingAnniversary">
			<summary>Gets or sets the date of the contact's wedding anniversary.
            </summary>
			<returns>A <see cref="T:System.Nullable`1"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ContactGroup">
			<summary>Represents a group of contacts. Properties that are available on contact groups are defined by the ContactGroupSchema class.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ContactGroup.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>Initializes an unsaved local instance of the ContactGroup class.</summary>
			<param name="service">The ExchangeServiceBase object to which the contact group will be bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ContactGroup.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>Binds a ContactGroup object to a specific existing contact group and loads its first-class properties. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The Bind method returns a ContactGroup instance that is bound to the specified contact group.</returns>
			<param name="service">The ExchangeServiceBase object to which the contact group will be bound.</param>
			<param name="id">The identifier of the contact group to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ContactGroup.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>Binds a ContactGroup object to a specific existing contact group and loads the specified properties. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>The Bind method returns a ContactGroup instance that is bound to the specified contact group.</returns>
			<param name="service">The ExchangeServiceBase object to which the contact group will be bound.</param>
			<param name="id">The identifier of the contact group.</param>
			<param name="propertySet">The set of contact group properties to load.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ContactGroup.DisplayName">
			<summary>Gets or sets the display name of the contact group.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ContactGroup.FileAs">
			<summary>Gets the name under which this contact group is filed.</summary>
			<returns>A <see cref="T:System.String"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ContactGroup.Members">
			<summary>Gets the members of the contact group.</summary>
			<returns>A GroupMemberCollection object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ContactGroupSchema">
			<summary>Defines the schema for contact groups.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactGroupSchema.DisplayName">
			<summary>Defines the display name property.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactGroupSchema.FileAs">
			<summary>Defines the File As property.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactGroupSchema.Members">
			<summary>Defines the members property.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ContactSchema">
			<summary>
            Represents the schem for contacts.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.AssistantName">
			<summary>
            Defines the AssistantName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.AssistantPhone">
			<summary>
            Defines the AssistentPhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Birthday">
			<summary>
            Defines the Birthday property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessAddressCity">
			<summary>
            Defines the BusinessAddressCity property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessAddressCountryOrRegion">
			<summary>
            Defines the BusinessAddressCountryOrRegion property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessAddressPostalCode">
			<summary>
            Defines the BusinessAddressPostalCode property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessAddressState">
			<summary>
            Defines the BusinessAddressState property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessAddressStreet">
			<summary>
            Defines the BusinessAddressStreet property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessFax">
			<summary>
            Defines the BusinessFax property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessHomePage">
			<summary>
            Defines the BusinessHomePage property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessPhone">
			<summary>
            Defines the BusinessPhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.BusinessPhone2">
			<summary>
            Defines the BusinessPhone2 property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Callback">
			<summary>
            Defines the Callback property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.CarPhone">
			<summary>
            Defines the CarPhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Children">
			<summary>
            Defines the Children property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Companies">
			<summary>
            Defines the Companies property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.CompanyMainPhone">
			<summary>
            Defines the CompanyMainPhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.CompanyName">
			<summary>
            Defines the CompanyName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.CompleteName">
			<summary>
            Defines the CompleteName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.ContactSource">
			<summary>
            Defines the ContactSource property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Department">
			<summary>
            Defines the Department property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.DisplayName">
			<summary>
            Defines the DisplayName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.EmailAddress1">
			<summary>
            Defines the EmailAddress1 property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.EmailAddress2">
			<summary>
            Defines the EmailAddress2 property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.EmailAddress3">
			<summary>
            Defines the EmailAddress3 property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.EmailAddresses">
			<summary>
            Defines the EmailAddresses property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.FileAs">
			<summary>
            Defines the FileAs property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.FileAsMapping">
			<summary>
            Defines the FileAsMapping property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Generation">
			<summary>
            Defines the Generation property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.GivenName">
			<summary>
            Defines the GivenName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HasPicture">
			<summary>Defines the HasPicture property.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HomeAddressCity">
			<summary>
            Defines the HomeAddressCity property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HomeAddressCountryOrRegion">
			<summary>
            Defines the HomeAddressCountryOrRegion property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HomeAddressPostalCode">
			<summary>
            Defines the HomeAddressPostalCode property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HomeAddressState">
			<summary>
            Defines the HomeAddressState property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HomeAddressStreet">
			<summary>
            Defines the HomeAddressStreet property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HomeFax">
			<summary>
            Defines the HomeFax property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HomePhone">
			<summary>
            Defines the HomePhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.HomePhone2">
			<summary>
            Defines the HomePhone2 property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.ImAddress1">
			<summary>
            Defines the ImAddress1 property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.ImAddress2">
			<summary>
            Defines the ImAddress2 property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.ImAddress3">
			<summary>
            Defines the ImAddress3 property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.ImAddresses">
			<summary>
            Defines the ImAddresses property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Initials">
			<summary>
            Defines the Initials property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Isdn">
			<summary>
            Defines the Isdn property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.JobTitle">
			<summary>
            Defines the JobTitle property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Manager">
			<summary>
            Defines the Manager property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.MiddleName">
			<summary>
            Defines the MiddleName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Mileage">
			<summary>
            Defines the Mileage property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.MobilePhone">
			<summary>
            Defines the MobilePhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.NickName">
			<summary>
            Defines the NickName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.OfficeLocation">
			<summary>
            Defines the OfficeLocation property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.OtherAddressCity">
			<summary>
            Defines the OtherAddressCity property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.OtherAddressCountryOrRegion">
			<summary>
            Defines the OtherAddressCountryOrRegion property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.OtherAddressPostalCode">
			<summary>
            Defines the OtherAddressPostalCode property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.OtherAddressState">
			<summary>
            Defines the OtherAddressState property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.OtherAddressStreet">
			<summary>
            Defines the OtherAddressStreet property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.OtherFax">
			<summary>
            Defines the OtherFax property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.OtherTelephone">
			<summary>
            Defines the OtherTelephone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Pager">
			<summary>
            Defines the Pager property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.PhoneNumbers">
			<summary>
            Defines the PhoneNumbers property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.PhysicalAddresses">
			<summary>
            Defines the PhysicalAddresses property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.PostalAddressIndex">
			<summary>
            Defines the PostalAddressIndex property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.PrimaryPhone">
			<summary>
            Defines the PrimaryPhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Profession">
			<summary>
            Defines the Profession property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.RadioPhone">
			<summary>
            Defines the RadioPhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.SpouseName">
			<summary>
            Defines the SpouseName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Surname">
			<summary>
            Defines the Surname property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.Telex">
			<summary>
            Defines the Telex property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.TtyTddPhone">
			<summary>
            Defines the TtyTddPhone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSchema.WeddingAnniversary">
			<summary>
            Defines the WeddingAnniversary property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ContactsFolder">
			<summary>
            Represents a folder containing contacts.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ContactsFolder.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>
            Initializes an unsaved local instance of the ContactsFolder class. To bind to an existing contacts folder, use ContactsFolder.Bind() instead.
            </summary>
			<param name="service">The ExchangeService object to which the contacts folder will be bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ContactsFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Binds to an existing contacts folder and loads its first class properties.
            </summary>
			<returns>A ContactsFolder instance representing the contacts folder corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the contacts folder.</param>
			<param name="id">The Id of the contacts folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ContactsFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Binds to an existing contacts folder and loads its first class properties.
            </summary>
			<returns>A ContactsFolder instance representing the contacts folder with the specified name.</returns>
			<param name="service">The service to use to bind to the contacts folder.</param>
			<param name="name">The name of the contacts folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ContactsFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing contacts folder and loads the specified set of properties.
            </summary>
			<returns>A ContactsFolder instance representing the contacts folder corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the contacts folder.</param>
			<param name="id">The Id of the contacts folder to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ContactsFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing contacts folder and loads the specified set of properties.
            </summary>
			<returns>A ContactsFolder instance representing the contacts folder with the specified name.</returns>
			<param name="service">The service to use to bind to the contacts folder.</param>
			<param name="propertySet">The set of properties to load.</param>
			<param name="name">The name of the contacts folder to bind to.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ContactSource">
			<summary>
            Defines the source of a contact or distribution list.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSource.ActiveDirectory">
			<summary>
            The contact or distribution list is stored in the Global Address List
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContactSource.Store">
			<summary>
            The contact or distribution list is stored in Exchange.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ContainmentMode">
			<summary>
            Defines the containment mode for Contains search filters.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContainmentMode.ExactPhrase">
			<summary>
            The comparison is between an exact phrase in the string and the constant.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContainmentMode.FullString">
			<summary>
            The comparison is between the full string and the constant. The property value and the supplied constant are precisely the same.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContainmentMode.Prefixed">
			<summary>
            The comparison is between the string prefix and the constant.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContainmentMode.PrefixOnWords">
			<summary>
            The comparison is between a prefix on individual words in the string and the constant.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ContainmentMode.Substring">
			<summary>
            The comparison is between a substring of the string and the constant.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ConversationId">
			<summary>
            Represents the Id of a Conversation.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ConversationId.#ctor(System.String)">
			<summary>
            Initializes a new instance of ConversationId.
            </summary>
			<param name="uniqueId">The unique Id used to initialize the ConversationId instance.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ConversationId.op_Implicit(Microsoft.Exchange.WebServices.Data.ConversationId)~System.String">
			<summary>
            Defines an implicit conversion between ConversationId and String.
            </summary>
			<returns>A ConversationId initialized with the specified unique Id.</returns>
			<param name="conversationId">The conversationId to String.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ConversationId.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.ConversationId">
			<summary>
            Defines an implicit conversion between string and ConversationId.
            </summary>
			<returns>A ConversationId initialized with the specified unique Id.</returns>
			<param name="uniqueId">The unique Id to convert to ConversationId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ConversationId.ToString">
			<summary>
            Gets a string representation of the Conversation Id.
            </summary>
			<returns>The string representation of the conversation id.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ConvertIdResponse">
			<summary>
            Represents the response to an individual Id conversion operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ConvertIdResponse.ConvertedId">
			<summary>
            Gets the converted Id.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CreateAttachmentException">
			<summary>
            Represents an error that occurs when a call to the CreateAttachment web method fails.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CreateAttachmentResponse">
			<summary>
            Represents the response to an individual attachment creation operation.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.CustomXmlSerializationDelegate">
			<summary>The delegate type that applications can use to emit custom XML in SOAP requests that are sent to Exchange Web Services.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DayOfTheWeek">
			<summary>Specifies the day of the week.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Day">
			<summary>Any day of the week.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Friday">
			<summary>Friday.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Monday">
			<summary>Monday.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Saturday">
			<summary>Saturday.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Sunday">
			<summary>Sunday.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Thursday">
			<summary>Thursday.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Tuesday">
			<summary>Tuesday.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Wednesday">
			<summary>Wednesday.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.Weekday">
			<summary>Any day of the usual business week (Monday through Friday).</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeek.WeekendDay">
			<summary>Any weekend day (Saturday or Sunday).</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection">
			<summary>Represents a collection of DayOfTheWeek enumeration values.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.Add(Microsoft.Exchange.WebServices.Data.DayOfTheWeek)">
			<summary>Adds a new value to the collection.</summary>
			<param name="dayOfTheWeek">The DayOfTheWeek enumeration value to add to the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.DayOfTheWeek})">
			<summary>Adds a range of days to the collection.</summary>
			<param name="daysOfTheWeek">The range of DayOfTheWeek enumeration values to add to the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.Clear">
			<summary>Removes all members of the collection.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through the elements of the collection.</summary>
			<returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> object that can be used to iterate through the elements of the collection.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.Remove(Microsoft.Exchange.WebServices.Data.DayOfTheWeek)">
			<summary>Removes the specified DayOfTheWeek enumeration value from the collection.</summary>
			<returns>Returns true if the DayOfTheWeek enumeration value was removed from the collection; otherwise, returns false.</returns>
			<param name="dayOfTheWeek">The DayOfTheWeek enumeration value to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.RemoveAt(System.Int32)">
			<summary>Removes the DayOfTheWeek enumeration value at the specified index.</summary>
			<param name="index">The index of the DayOfTheWeek enumeration value to remove.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.Count">
			<summary>Returns the number of DayOfTheWeek enumeration values that are contained in the collection.</summary>
			<returns>The number of DayOfTheWeek enumeration values that are contained in the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DayOfTheWeekCollection.Item(System.Int32)">
			<summary>Gets the DayOfTheWeek enumeration value at the specified index in the collection.</summary>
			<returns>The DayOfTheWeek enumeration value at the specified index.</returns>
			<param name="index">The index of the item to return.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DayOfTheWeekIndex">
			<summary>Defines the index of a week day in a month.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeekIndex.First">
			<summary>The first specific day of the week in the month.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeekIndex.Fourth">
			<summary>The fourth specific day of the week in the month.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeekIndex.Last">
			<summary>The last specific day of the week in the month.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeekIndex.Second">
			<summary>The second specific day of the week in the month.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DayOfTheWeekIndex.Third">
			<summary>The third specific day of the week in the month.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DeclineMeetingInvitationMessage">
			<summary>
            Represents a meeting declination message.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet">
			<summary>
            Defines the default sets of extended properties.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.Address">
			<summary>
            The Address extended property set.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.Appointment">
			<summary>
            The Appointment extended property set.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.CalendarAssistant">
			<summary>
            The CalendarAssistants extended property set.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.Common">
			<summary>
            The Common extended property set.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.InternetHeaders">
			<summary>
            The InternetHeaders extended property set.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.Meeting">
			<summary>
            The Meeting extended property set.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.PublicStrings">
			<summary>
            The PublicStrings extended property set.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.Task">
			<summary>
            The Task extended property set.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet.UnifiedMessaging">
			<summary>
            The UnifiedMessaging extended property set.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DelegateFolderPermissionLevel">
			<summary>
            Defines a delegate user's permission level on a specific folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DelegateFolderPermissionLevel.Author">
			<summary>
            The delegate has Author permissions.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DelegateFolderPermissionLevel.Custom">
			<summary>
            The delegate has custom permissions.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DelegateFolderPermissionLevel.Editor">
			<summary>
            The delegate has Editor permissions.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DelegateFolderPermissionLevel.None">
			<summary>
            The delegate has no permission.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DelegateFolderPermissionLevel.Reviewer">
			<summary>
            The delegate has Reviewer permissions.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DelegateInformation">
			<summary>
            Represents the results of a GetDelegates operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegateInformation.DelegateUserResponses">
			<summary>
            Gets a list of responses for each of the delegate users concerned by the operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegateInformation.MeetingRequestsDeliveryScope">
			<summary>
            Gets a value indicating if and how meeting requests are delivered to delegates.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DelegatePermissions">
			<summary>
            Represents the permissions of a delegate user.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegatePermissions.CalendarFolderPermissionLevel">
			<summary>
            Gets or sets the delegate user's permission on the principal's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegatePermissions.ContactsFolderPermissionLevel">
			<summary>
            Gets or sets the delegate user's permission on the principal's contacts folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegatePermissions.InboxFolderPermissionLevel">
			<summary>
            Gets or sets the delegate user's permission on the principal's inbox.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegatePermissions.JournalFolderPermissionLevel">
			<summary>
            Gets or sets the delegate user's permission on the principal's journal folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegatePermissions.NotesFolderPermissionLevel">
			<summary>
            Gets or sets the delegate user's permission on the principal's notes folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegatePermissions.TasksFolderPermissionLevel">
			<summary>
            Gets or sets the delegate user's permission on the principal's tasks folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DelegateUser">
			<summary>
            Represents a delegate user.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DelegateUser.#ctor">
			<summary>
            Initializes a new instance of the DelegateUser class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DelegateUser.#ctor(Microsoft.Exchange.WebServices.Data.StandardUser)">
			<summary>
            Initializes a new instance of the StandardUser class.
            </summary>
			<param name="standardUser">The standard delegate user.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DelegateUser.#ctor(System.String)">
			<summary>
        Initializes a new instance of the DelegateUser class.
      </summary>
			<param name="primarySmtpAddress">The primary SMTP address of the delegate user.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegateUser.Permissions">
			<summary>
            Gets the list of delegate user's permissions.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegateUser.ReceiveCopiesOfMeetingMessages">
			<summary>
            Gets or sets a value indicating if the delegate user should receive copies of meeting requests.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegateUser.UserId">
			<summary>
            Gets the user Id of the delegate user.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegateUser.ViewPrivateItems">
			<summary>
            Gets or sets a value indicating if the delegate user should be able to view the principal's private items.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DelegateUserResponse">
			<summary>
            Represents the response to an individual delegate user manipulation (add, remove, update) operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DelegateUserResponse.DelegateUser">
			<summary>
            The delegate user that was involved in the operation.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DeleteAttachmentException">
			<summary>
            Represents an error that occurs when a call to the DeleteAttachment web method fails.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DeleteAttachmentResponse">
			<summary>
            Represents the response to an individual attachment deletion operation.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DeletedOccurrenceInfo">
			<summary>Represents a deleted occurrence of a recurring calendar item.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.DeletedOccurrenceInfo.OriginalStart">
			<summary>Represents the original start date and time of the deleted occurrence. </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DeletedOccurrenceInfoCollection">
			<summary>Represents a collection of deleted occurrences of a recurring appointment. </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DeleteMode">
			<summary>
            Represents deletion modes.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DeleteMode.HardDelete">
			<summary>
            The item or folder will be permanently deleted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DeleteMode.MoveToDeletedItems">
			<summary>
            The item or folder will be moved to the mailbox's Deleted Items folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.DeleteMode.SoftDelete">
			<summary>
            The item or folder will be moved to the dumpster. Items and folders in the dumpster can be recovered.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DictionaryEntryProperty`1">
			<summary>Represents an entry of a <see cref="T:Microsoft.Exchange.WebServices.Data.DictionaryProperty`2"></see> object.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.DictionaryProperty`2">
			<summary>
            Represents a generic dictionary that can be sent to or retrieved from EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.DictionaryProperty`2.Contains(`0)">
			<summary>
            Determines whether this instance contains the specified key.
            </summary>
			<returns>Returns true if this instance contains the specified key; otherwise, returns false.</returns>
			<param name="key">The key.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EffectiveRights">
			<summary>
            Defines the effective user rights associated with an item or folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EffectiveRights.CreateAssociated">
			<summary>
            The user can create associated items (FAI).
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EffectiveRights.CreateContents">
			<summary>
            The user can create items.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EffectiveRights.CreateHierarchy">
			<summary>
            The user can create sub-folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EffectiveRights.Delete">
			<summary>
            The user can delete items and/or folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EffectiveRights.Modify">
			<summary>
            The user can modify the properties of items and/or folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EffectiveRights.None">
			<summary>
            The user has no acces right on the item or folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EffectiveRights.Read">
			<summary>
            The user can read the contents of items.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EmailAddress">
			<summary>
            Represents an e-mail address.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddress.#ctor">
			<summary>
            Initializes a new instance of the EmailAddress class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddress.#ctor(System.String)">
			<summary>
            Initializes a new instance of the EmailAddress class.
            </summary>
			<param name="smtpAddress">The SMTP address used to initialize the EmailAddress.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddress.#ctor(System.String,System.String)">
			<summary>
            Initializes a new instance of the EmailAddress class.
            </summary>
			<param name="smtpAddress">The SMTP address used to initialize the EmailAddress.</param>
			<param name="name">The name used to initialize the EmailAddress.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddress.#ctor(System.String,System.String,System.String)">
			<summary>
            Initializes a new instance of the EmailAddress class.
            </summary>
			<param name="address">The address used to initialize the EmailAddress.</param>
			<param name="routingType">The routing type used to initialize the EmailAddress.</param>
			<param name="name">The name used to initialize the EmailAddress.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddress.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.EmailAddress">
			<summary>
            Defines an implicit conversion between a string representing an SMTP address and EmailAddress.
            </summary>
			<returns>An EmailAddress initialized with the specified SMTP address.</returns>
			<param name="smtpAddress">The SMTP address to convert to EmailAddress.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddress.ToString">
			<summary>
            Returns a String that represents the current EmailAddress.
            </summary>
			<returns>A String that represents the current EmailAddress.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailAddress.Address">
			<summary>
            Gets or sets the actual address associated with the e-mail address. The type of the Address property
            must match the specified routing type. If RoutingType is not set, Address is assumed to be an SMTP
            address.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailAddress.Id">
			<summary>
            Gets or sets the Id of the contact the e-mail address represents. When Id is specified, Address
            should be set to null.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailAddress.MailboxType">
			<summary>
            Gets or sets the type of the e-mail address.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailAddress.Name">
			<summary>
            Gets or sets the name associated with the e-mail address.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailAddress.RoutingType">
			<summary>
            Gets or sets the routing type associated with the e-mail address. If RoutingType is not set,
            Address is assumed to be an SMTP address.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EmailAddressCollection">
			<summary>
            Represents a collection of e-mail addresses.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressCollection.Add(Microsoft.Exchange.WebServices.Data.EmailAddress)">
			<summary>
            Adds an e-mail address to the collection.
            </summary>
			<param name="emailAddress">The e-mail address to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressCollection.Add(System.String)">
			<summary>
            Adds an e-mail address to the collection.
            </summary>
			<returns>An EmailAddress object initialized with the provided SMTP address.</returns>
			<param name="smtpAddress">The SMTP address used to initialize the e-mail address.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressCollection.Add(System.String,System.String)">
			<summary>
            Adds an e-mail address to the collection.
            </summary>
			<returns>An EmailAddress object initialized with the provided SMTP address.</returns>
			<param name="smtpAddress">The SMTP address used to initialize the e-mail address.</param>
			<param name="name">The name used to initialize the e-mail address.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.EmailAddress})">
			<summary>
            Adds multiple e-mail addresses to the collection.
            </summary>
			<param name="emailAddresses">The e-mail addresses to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressCollection.AddRange(System.Collections.Generic.IEnumerable{System.String})">
			<summary>
            Adds multiple e-mail addresses to the collection.
            </summary>
			<param name="smtpAddresses">The SMTP addresses used to initialize the e-mail addresses.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressCollection.Clear">
			<summary>
            Clears the collection.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressCollection.Remove(Microsoft.Exchange.WebServices.Data.EmailAddress)">
			<summary>
            Removes an e-mail address from the collection.
            </summary>
			<returns>Returns true if the email address was successfully removed from the collection; otherwise, returns false.</returns>
			<param name="emailAddress">The e-mail address to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressCollection.RemoveAt(System.Int32)">
			<summary>
            Removes an e-mail address from the collection.
            </summary>
			<param name="index">The index of the e-mail address to remove.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EmailAddressDictionary">
			<summary>Represents a dictionary of e-mail addresses.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressDictionary.#ctor">
			<summary>Initializes a new instance of the EmailAddressDictionary class.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailAddressDictionary.TryGetValue(Microsoft.Exchange.WebServices.Data.EmailAddressKey,Microsoft.Exchange.WebServices.Data.EmailAddress@)">
			<summary>Tries to get the e-mail address that is associated with the specified key.</summary>
			<returns>Returns true if the dictionary contains an e-mail address that is associated with the specified key; otherwise, the method returns false.</returns>
			<param name="key">The key that is associated with the e-mail address.</param>
			<param name="emailAddress">If the key is found, contains the e-mail address that is associated with the specified key; otherwise, null. This parameter is passed uninitialized.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailAddressDictionary.Item(Microsoft.Exchange.WebServices.Data.EmailAddressKey)">
			<summary>Gets or sets the e-mail address at the specified key.
            </summary>
			<returns>The e-mail address at the specified key.</returns>
			<param name="key">The key of the e-mail address to get or set.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EmailAddressEntry">
			<summary>
            Represents an entry of an EmailAddressDictionary.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailAddressEntry.EmailAddress">
			<summary>
            Gets or sets the e-mail address of the entry.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EmailAddressKey">
			<summary>
            Defines e-mail address entries for a contact.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailAddressKey.EmailAddress1">
			<summary>
            The first e-mail address.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailAddressKey.EmailAddress2">
			<summary>
            The second e-mail address.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailAddressKey.EmailAddress3">
			<summary>
            The third e-mail address.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EmailMessage">
			<summary>
            Represents an e-mail message. Properties available on e-mail messages are defined in the EmailMessageSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>
            Initializes an unsaved local instance of the EmailMessage class. To bind to an existing e-mail message, use EmailMessage.Bind() instead.
            </summary>
			<param name="service">The ExchangeService object to which the e-mail message will be bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to an existing e-mail message and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>An EmailMessage instance representing the e-mail message corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the e-mail message.</param>
			<param name="id">The Id of the e-mail message to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing e-mail message and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>An EmailMessage instance representing the e-mail message corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the e-mail message.</param>
			<param name="id">The Id of the e-mail message to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.CreateForward">
			<summary>
            Creates a forward response to the message.
            </summary>
			<returns>A ResponseMessage representing the forward response that can subsequently be modified and sent.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.CreateReply(System.Boolean)">
			<summary>
            Creates a reply response to the message.
            </summary>
			<returns>A ResponseMessage representing the reply response that can subsequently be modified and sent.</returns>
			<param name="replyAll">Indicates whether the reply should go to all of the original recipients of the message.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.Forward(Microsoft.Exchange.WebServices.Data.MessageBody,Microsoft.Exchange.WebServices.Data.EmailAddress[])">
			<summary>
            Forwards the message. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the original body of the message.</param>
			<param name="toRecipients">The recipients to forward the message to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.Forward(Microsoft.Exchange.WebServices.Data.MessageBody,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.EmailAddress})">
			<summary>
            Forwards the message. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the original body of the message.</param>
			<param name="toRecipients">The recipients to forward the message to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.Reply(Microsoft.Exchange.WebServices.Data.MessageBody,System.Boolean)">
			<summary>
            Replies to the message. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the original body of the message.</param>
			<param name="replyAll">Indicates whether the reply should be sent to all of the original recipients of the message.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.Send">
			<summary>
            Sends this e-mail message. Calling this method results in at least one call to EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.SendAndSaveCopy">
			<summary>
            Sends this e-mail message and saves a copy of it in the Sent Items folder. SendAndSaveCopy does not work if the
            message has unsaved attachments. In that case, the message must first be saved and then sent. Calling this method
            results in a call to EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.SendAndSaveCopy(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Sends this e-mail message and saves a copy of it in the specified folder. SendAndSaveCopy does not work if the
            message has unsaved attachments. In that case, the message must first be saved and then sent. Calling this method
            results in a call to EWS.
            </summary>
			<param name="destinationFolderId">The Id of the folder in which to save the copy.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.SendAndSaveCopy(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Sends this e-mail message and saves a copy of it in the specified folder. SendAndSaveCopy does not work if the
            message has unsaved attachments. In that case, the message must first be saved and then sent. Calling this method
            results in a call to EWS.
            </summary>
			<param name="destinationFolderName">The name of the folder in which to save the copy.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.EmailMessage.SuppressReadReceipt">
			<summary>
            Suppresses the read receipt on the message. Calling this method results in a call to EWS.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.BccRecipients">
			<summary>
            Gets the list of Bcc recipients for the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.CcRecipients">
			<summary>
            Gets the list of Cc recipients for the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.ConversationIndex">
			<summary>
            Gets the conversation index of the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.ConversationTopic">
			<summary>
            Gets the conversation topic of the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.From">
			<summary>
            Gets or sets the "on behalf" sender of the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.InternetMessageId">
			<summary>
            Gets the Internat Message Id of the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.IsAssociated">
			<summary>
            Gets or sets a value indicating whether this is an associated message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.IsDeliveryReceiptRequested">
			<summary>
            Gets or sets a value indicating whether a read receipt is requested for the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.IsRead">
			<summary>
            Gets or sets a value indicating whether the e-mail message is read.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.IsReadReceiptRequested">
			<summary>
            Gets or sets a value indicating whether a read receipt is requested for the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.IsResponseRequested">
			<summary>
            Gets or sets a value indicating whether a response is requested for the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.ReceivedBy">
			<summary>
            Gets the ReceivedBy property of the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.ReceivedRepresenting">
			<summary>
            Gets the ReceivedRepresenting property of the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.References">
			<summary>
            Gets or sets the references of the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.ReplyTo">
			<summary>
            Gets a list of e-mail addresses to which replies should be addressed.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.Sender">
			<summary>
            Gets or sets the sender of the e-mail message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.EmailMessage.ToRecipients">
			<summary>
            Gets the list of To recipients for the e-mail message.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EmailMessageSchema">
			<summary>
            Represents the schema for e-mail messages.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.BccRecipients">
			<summary>
            Defines the BccRecipients property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.CcRecipients">
			<summary>
            Defines the CcRecipients property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.ConversationIndex">
			<summary>
            Defines the ConversationIndex property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.ConversationTopic">
			<summary>
            Defines the ConversationTopic property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.From">
			<summary>
            Defines the From property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.InternetMessageId">
			<summary>
            Defines the InternetMessageId property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.IsDeliveryReceiptRequested">
			<summary>
            Defines the IsDeliveryReceiptRequested property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.IsRead">
			<summary>
            Defines the IsRead property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.IsReadReceiptRequested">
			<summary>
            Defines the IsReadReceiptRequested property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.IsResponseRequested">
			<summary>
            Defines the IsResponseRequested property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.ReceivedBy">
			<summary>
            Defines the ReceivedBy property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.ReceivedRepresenting">
			<summary>
            Defines the ReceivedRepresenting property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.References">
			<summary>
            Defines the References property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.ReplyTo">
			<summary>
            Defines the ReplyTo property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.Sender">
			<summary>
            Defines the Sender property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EmailMessageSchema.ToRecipients">
			<summary>
            Defines the ToRecipients property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.EventType">
			<summary>Defines a type of event as returned by notification subscriptions.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EventType.Copied">
			<summary>An item or folder has been copied.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EventType.Created">
			<summary>An item or folder has been created.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EventType.Deleted">
			<summary>An item or folder has been deleted.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EventType.Modified">
			<summary>An item or folder has been modified.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EventType.Moved">
			<summary>An item or folder has been moved.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EventType.NewMail">
			<summary>A new mail message was received.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.EventType.Status">
			<summary>A push notifications subscription is still alive.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExchangeCredentials">
			<summary>The base class of Exchange credential types.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeCredentials.#ctor">
			<summary>Initializes a new instance of the ExchangeCredentials class.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeCredentials.op_Implicit(System.Net.CredentialCache)~Microsoft.Exchange.WebServices.Data.ExchangeCredentials">
			<summary>Performs an implicit conversion from a <see cref="T:System.Net.CredentialCache"></see> object to an ExchangeCredentials object.</summary>
			<returns>An ExchangeCredentials object.</returns>
			<param name="credentials">The credentials to convert.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeCredentials.op_Implicit(System.Net.NetworkCredential)~Microsoft.Exchange.WebServices.Data.ExchangeCredentials">
			<summary>Performs an implicit conversion from System.Net credentials to Exchange credentials.
            This enables a <see cref="T:System.Net.NetworkCredential"></see> object to be implictly converted to an ExchangeCredentials object, which is useful when setting
            credentials on an ExchangeService object.</summary>
			<returns>The result of the conversion.</returns>
			<param name="credentials">The credentials.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExchangeServerInfo">
			<summary>
            Represents Exchange server information.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeServerInfo.ToString">
			<summary>
            Override ToString method.
            </summary>
			<returns>Canonical ExchangeService version string.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServerInfo.MajorBuildNumber">
			<summary>
            Gets the Major Exchange server build number.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServerInfo.MajorVersion">
			<summary>
            Gets the Major Exchange server version number.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServerInfo.MinorBuildNumber">
			<summary>
            Gets the Minor Exchange server build number.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServerInfo.MinorVersion">
			<summary>
            Gets the Minor Exchange server version number.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServerInfo.VersionString">
			<summary>
            Gets the Exchange server version string (for example: "Exchange2010").
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExchangeService">
			<summary>
            Represents a binding to the Exchange Web Services.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.#ctor">
			<summary>
        Initializes a new instance of the ExchangeService class, targeting the latest supported version of EWS and scoped to the system's current time zone.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeVersion)">
			<summary>
        Initializes a new instance of the ExchangeService class, targeting the specified version of EWS and scoped to the system's current time zone.
      </summary>
			<param name="requestedServerVersion">The version of EWS that the service targets.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.#ctor(System.TimeZoneInfo)">
			<summary>
        Initializes a new instance of the ExchangeService class, targeting the latest supported version of EWS and scoped to the specified time zone.
      </summary>
			<param name="timeZone">The time zone to which the service is scoped.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeVersion,System.TimeZoneInfo)">
			<summary>
        Initializes a new instance of the ExchangeService class, targeting the specified version of EWS and scoped to the specified time zone.
      </summary>
			<param name="requestedServerVersion">The version of EWS that the service targets.</param>
			<param name="timeZone">The time zone to which the service is scoped.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.AddDelegates(Microsoft.Exchange.WebServices.Data.Mailbox,System.Nullable{Microsoft.Exchange.WebServices.Data.MeetingRequestsDeliveryScope},Microsoft.Exchange.WebServices.Data.DelegateUser[])">
			<summary>
            Adds delegates to a specific mailbox. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of DelegateUserResponse objects providing the results of the operation.</returns>
			<param name="meetingRequestsDeliveryScope">Indicates how meeting requests should be sent to delegates.</param>
			<param name="delegateUsers">The delegate users to add.</param>
			<param name="mailbox">The mailbox to add delegates to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.AddDelegates(Microsoft.Exchange.WebServices.Data.Mailbox,System.Nullable{Microsoft.Exchange.WebServices.Data.MeetingRequestsDeliveryScope},System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.DelegateUser})">
			<summary>
            Adds delegates to a specific mailbox. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of DelegateUserResponse objects providing the results of the operation.</returns>
			<param name="meetingRequestsDeliveryScope">Indicates how meeting requests should be sent to delegates.</param>
			<param name="delegateUsers">The delegate users to add.</param>
			<param name="mailbox">The mailbox to add delegates to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.AutodiscoverUrl(System.String)">
			<summary>
            Initializes the Url property to the Exchange Web Services URL for the specified e-mail address by
            calling the Autodiscover service.
            </summary>
			<param name="emailAddress">The email address to use.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.AutodiscoverUrl(System.String,Microsoft.Exchange.WebServices.Autodiscover.AutodiscoverRedirectionUrlValidationCallback)">
			<summary>
            Initializes the Url property to the Exchange Web Services URL for the specified e-mail address by
            calling the Autodiscover service.
            </summary>
			<param name="emailAddress">The email address to use.</param>
			<param name="validateRedirectionUrlCallback">The callback used to validate redirection URL.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.BindToItems(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.ItemId},Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to multiple items in a single call to EWS.
            </summary>
			<returns>A ServiceResponseCollection providing results for each of the specified item Ids.</returns>
			<param name="propertySet">The set of properties to load.</param>
			<param name="itemIds">The Ids of the items to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ConvertId(Microsoft.Exchange.WebServices.Data.AlternateIdBase,Microsoft.Exchange.WebServices.Data.IdFormat)">
			<summary>Converts an identifier from one format to another format in a single EWS call.</summary>
			<returns>The converted identifier as a AlternateIdBase object.
</returns>
			<param name="id">The Id to convert.
</param>
			<param name="destinationFormat">The destination format.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ConvertIds(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.AlternateIdBase},Microsoft.Exchange.WebServices.Data.IdFormat)">
			<summary>
            Converts multiple Ids from one format to another in a single call to EWS.
            </summary>
			<returns>A ServiceResponseCollection providing conversion results for each specified Ids.</returns>
			<param name="destinationFormat">The destination format.</param>
			<param name="ids">The Ids to convert.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.CopyItems(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.ItemId},Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Copies multiple items in a single call to EWS.
            </summary>
			<returns>A ServiceResponseCollection providing copy results for each of the specified item Ids.</returns>
			<param name="destinationFolderId">The Id of the folder to copy the items to.</param>
			<param name="itemIds">The Ids of the items to copy.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.CreateItems(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.Item},Microsoft.Exchange.WebServices.Data.FolderId,System.Nullable{Microsoft.Exchange.WebServices.Data.MessageDisposition},System.Nullable{Microsoft.Exchange.WebServices.Data.SendInvitationsMode})">
			<summary>
            Creates multiple items in a single EWS call. Supported item classes are EmailMessage, Appointment, Contact, PostItem, Task and Item.
            CreateItems does not support items that have unsaved attachments.
            </summary>
			<returns>A ServiceResponseCollection providing creation results for each of the specified items.</returns>
			<param name="items">The items to create.</param>
			<param name="sendInvitationsMode">Indicates if and how invitations should be sent for items of type Appointment. Required if items contains at least one Appointment instance.</param>
			<param name="parentFolderId">The Id of the folder in which to place the newly created items. If null, items are created in their default folders.</param>
			<param name="messageDisposition">Indicates the disposition mode for items of type EmailMessage. Required if items contains at least one EmailMessage instance.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.DeleteItems(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.ItemId},Microsoft.Exchange.WebServices.Data.DeleteMode,System.Nullable{Microsoft.Exchange.WebServices.Data.SendCancellationsMode},System.Nullable{Microsoft.Exchange.WebServices.Data.AffectedTaskOccurrence})">
			<summary>
            Deletes multiple items in a single call to EWS.
            </summary>
			<returns>A ServiceResponseCollection providing deletion results for each of the specified item Ids.</returns>
			<param name="deleteMode">The deletion mode.</param>
			<param name="affectedTaskOccurrences">Indicates which instance of a recurring task should be deleted. Required if any of the item Ids represents a Task.</param>
			<param name="sendCancellationsMode">Indicates whether cancellation messages should be sent. Required if any of the item Ids represents an Appointment.</param>
			<param name="itemIds">The Ids of the items to delete.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ExpandGroup(Microsoft.Exchange.WebServices.Data.EmailAddress)">
			<summary>Expands a group identified by the specified EmailAddress.
</summary>
			<returns>An ExpandGroupResults object that contains the group members.
</returns>
			<param name="emailAddress">The e-mail address of the group.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ExpandGroup(Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>Expands a group identified by the specified group identifier.
</summary>
			<returns>An ExpandGroupResults object that contains the group members.
</returns>
			<param name="groupId">The Id of the group to expand.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ExpandGroup(System.String)">
			<summary>Expands a group identified by the group SMTP address.
</summary>
			<returns>An ExpandGroupResults object that contains the group members.
</returns>
			<param name="smtpAddress">The SMTP address of the group to expand.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ExpandGroup(System.String,System.String)">
			<summary>Expands a group identified by the group SMTP address and routing type of the group SMTP addess.
</summary>
			<returns>An ExpandGroupResults object that contains the group members.
</returns>
			<param name="address">The SMTP address of the group to expand.
</param>
			<param name="routingType">The routing type of the address of the group to expand.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindAppointments(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>
            Obtains a list of appointments by searching the contents of a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of appointments representing the contents of the specified folder.</returns>
			<param name="calendarView">The calendar view controlling the number of appointments returned.</param>
			<param name="parentFolderId">The id of the calendar folder in which to search for items.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindAppointments(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>
            Obtains a list of appointments by searching the contents of a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of appointments representing the contents of the specified folder.</returns>
			<param name="parentFolderName">The name of the calendar folder in which to search for items.</param>
			<param name="calendarView">The calendar view controlling the number of appointments returned.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindAppointments(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>Searches a folder with a search filter and calendar view options.
</summary>
			<returns>A FindItemsResults object that contains a collection of appointments.
</returns>
			<param name="searchFilter">The search filter.
</param>
			<param name="calendarView">The calendar view that controls the number of appointments returned.
</param>
			<param name="parentFolderId">The identifier of the calendar folder in which to search for items.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindAppointments(Microsoft.Exchange.WebServices.Data.FolderId,System.String,Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>Searches a folder with a query string and calendar view options.
</summary>
			<returns>A FindItemsResults object that contains a collection of appointments.
</returns>
			<param name="queryString">The search filter.
</param>
			<param name="calendarView">The calendar view that controls the number of appointments returned.
</param>
			<param name="parentFolderId">The identifier of the calendar folder in which to search for items.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindAppointments(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>Searches a folder with a search filter and calendar view options.
</summary>
			<returns>A FindItemsResults object that contains a collection of appointments.
</returns>
			<param name="parentFolderName">The identifier of the calendar folder in which to search for items.
</param>
			<param name="searchFilter">The search filter.
</param>
			<param name="calendarView">The calendar view that controls the number of appointments returned.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindAppointments(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,System.String,Microsoft.Exchange.WebServices.Data.CalendarView)">
			<summary>Searches a folder with a query string and calendar view options.
</summary>
			<returns>A FindItemsResults object that contains a collection of appointments.
</returns>
			<param name="queryString">The search filter.
</param>
			<param name="parentFolderName">The identifier of the calendar folder in which to search for items.
</param>
			<param name="calendarView">The calendar view that controls the number of appointments returned.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindFolders(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.FolderView)">
			<summary>
            Obtains a list of folders by searching the sub-folders of the specified folder.
            </summary>
			<returns>An object representing the results of the search operation.</returns>
			<param name="view">The view controlling the number of folders returned.</param>
			<param name="parentFolderId">The Id of the folder in which to search for folders.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindFolders(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.FolderView)">
			<summary>
            Obtains a list of folders by searching the sub-folders of the specified folder.
            </summary>
			<returns>An object representing the results of the search operation.</returns>
			<param name="parentFolderName">The name of the folder in which to search for folders.</param>
			<param name="view">The view controlling the number of folders returned.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindFolders(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.FolderView)">
			<summary>Searches a folder with a search filter and a specified folder view.
</summary>
			<returns>A FindFoldersResults object that contains the results of the FindFolder method.
</returns>
			<param name="view">The view settings that control the number of folders returned in the results.
</param>
			<param name="searchFilter">The search filter.
</param>
			<param name="parentFolderId">The identifier of the folder in which to search for folders.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindFolders(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.FolderView)">
			<summary>Searches a well-known folder with a search filter and a specified folder view.
</summary>
			<returns>A FindFoldersResults object that contains the results of the FindFolders method.
</returns>
			<param name="parentFolderName">The identifier of the folder in which to search for folders.
</param>
			<param name="view">The view settings that control the number of folders returned in the results.
</param>
			<param name="searchFilter">The search filter.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>
            Obtains a list of items by searching the contents of a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>An object that represents the results of the search operation.</returns>
			<param name="view">The view controlling the number of items returned.</param>
			<param name="parentFolderId">The Id of the folder in which to search for items.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>
            Obtains a list of items by searching the contents of a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>An object representing the results of the search operation.</returns>
			<param name="parentFolderName">The name of the folder in which to search for items.</param>
			<param name="view">The view controlling the number of items returned.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.ItemView,Microsoft.Exchange.WebServices.Data.Grouping)">
			<summary>
            Obtains a grouped list of items by searching the contents of a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A list of items containing the contents of the specified folder.</returns>
			<param name="view">The view controlling the number of items returned.</param>
			<param name="parentFolderId">The Id of the folder in which to search for items.</param>
			<param name="groupBy">The group by clause.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>Finds items in a folder with a search filter and a specified item view.
</summary>
			<returns>A FindItemsResults object that contains the results of the FindItems method.
</returns>
			<param name="view">The view settings that control the number of items returned in the results.
</param>
			<param name="searchFilter">The search filter.
</param>
			<param name="parentFolderId">The identifier of the folder in which to search for items.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.FolderId,System.String,Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>Finds items in a folder with a query string and a specified item view.
</summary>
			<returns>A FindItemsResults object that contains the results of the FindItems method.
</returns>
			<param name="queryString">The search filter.
</param>
			<param name="view">The view settings that control the number of items returned in the results.
</param>
			<param name="parentFolderId">The identifier of the folder in which to search for items.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>Finds items in a folder with a search filter and a specified item view.
</summary>
			<returns>A FindItemsResults object that contains the results of the FindItems method.
</returns>
			<param name="parentFolderName">The identifier of the folder in which to search for items.
</param>
			<param name="view">The view settings that control the number of items returned in the results.
</param>
			<param name="searchFilter">The search filter.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,System.String,Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>Finds items in a well-known folder with a query string and a specified item view.
</summary>
			<returns>A FindItemsResults object that contains the results of the FindItems method.
</returns>
			<param name="queryString">The search filter.
</param>
			<param name="parentFolderName">The identifier of the folder in which to search for items.
</param>
			<param name="view">The view settings that control the number of items returned in the results.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.ItemView,Microsoft.Exchange.WebServices.Data.Grouping)">
			<summary>Finds items in a folder with a search filter, a specified item view, and a grouped options setting.
</summary>
			<returns>A GroupedFindItemsResults object that contains the grouped result set.
</returns>
			<param name="view">The view settings that control the number of items returned in the results.
</param>
			<param name="searchFilter">The search filter.
</param>
			<param name="parentFolderId">The identifier of the folder in which to search for items.
</param>
			<param name="groupBy">The GroupBy object that specifies how items are grouped in the result set.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.FolderId,System.String,Microsoft.Exchange.WebServices.Data.ItemView,Microsoft.Exchange.WebServices.Data.Grouping)">
			<summary>Finds items in a folder with a query string, a specified item view, and a grouped options setting.
</summary>
			<returns>A GroupedFindItemsResults object that contains the grouped result set.
</returns>
			<param name="queryString">The search filter.
</param>
			<param name="view">The view settings that control the number of items returned in the results.
</param>
			<param name="parentFolderId">The identifier of the folder in which to search for items.
</param>
			<param name="groupBy">The GroupBy object that specifies how items are grouped in the result set.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.ItemView,Microsoft.Exchange.WebServices.Data.Grouping)">
			<summary>Finds items in a well-known folder with a search filter, a specified item view, and a grouped options setting.
</summary>
			<returns>A GroupedFindItemsResults object that contains the grouped result set.
</returns>
			<param name="parentFolderName">The identifier of the folder in which to search for items.
</param>
			<param name="view">The view settings that control the number of items returned in the results.
</param>
			<param name="searchFilter">The search filter.
</param>
			<param name="groupBy">The GroupBy object that specifies how items are grouped in the result set.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.FindItems(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,System.String,Microsoft.Exchange.WebServices.Data.ItemView,Microsoft.Exchange.WebServices.Data.Grouping)">
			<summary>Finds items in a well-known folder with a query string, a specified item view, and a grouped options setting.
</summary>
			<returns>A GroupedFindItemsResults object that contains the grouped result set.
</returns>
			<param name="queryString">The search filter.
</param>
			<param name="parentFolderName">The identifier of the folder in which to search for items.
</param>
			<param name="view">The view settings that control the number of items returned in the results.
</param>
			<param name="groupBy">The GroupBy object that specifies how items are grouped in the result set.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.GetDelegates(Microsoft.Exchange.WebServices.Data.Mailbox,System.Boolean,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.UserId})">
			<summary>
            Retrieves the delegates of a specific mailbox. Calling this method results in a call to EWS.
            </summary>
			<returns>A GetDelegateResponse providing the results of the operation.</returns>
			<param name="includePermissions">Indicates whether detailed permissions should be returned fro each delegate.</param>
			<param name="mailbox">The mailbox to retrieve the delegates of.</param>
			<param name="userIds">The optional Ids of the delegate users to retrieve.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.GetDelegates(Microsoft.Exchange.WebServices.Data.Mailbox,System.Boolean,Microsoft.Exchange.WebServices.Data.UserId[])">
			<summary>
            Retrieves the delegates of a specific mailbox. Calling this method results in a call to EWS.
            </summary>
			<returns>A GetDelegateResponse providing the results of the operation.</returns>
			<param name="includePermissions">Indicates whether detailed permissions should be returned fro each delegate.</param>
			<param name="mailbox">The mailbox to retrieve the delegates of.</param>
			<param name="userIds">The optional Ids of the delegate users to retrieve.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.GetRoomLists">
			<summary>
            Retrieves a collection of all room lists in the organization.
            </summary>
			<returns>An EmailAddressCollection containing all the room lists in the organization.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.GetRooms(Microsoft.Exchange.WebServices.Data.EmailAddress)">
			<summary>
            Retrieves a collection of all rooms in the specified room list in the organization.
            </summary>
			<returns>A collection of EmailAddress objects representing all the rooms within the specifed room list.</returns>
			<param name="emailAddress">The e-mail address of the room list.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.GetUserAvailability(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.AttendeeInfo},Microsoft.Exchange.WebServices.Data.TimeWindow,Microsoft.Exchange.WebServices.Data.AvailabilityData)">
			<summary>Retrieves detailed information about the availability of a set of users, rooms and resources within a specified time window.
</summary>
			<returns>A GetUserAvailabilityResults object.
</returns>
			<param name="attendees">The attendees for which to retrieve availability information.
</param>
			<param name="timeWindow">The time window in which to retrieve user availability information.
</param>
			<param name="requestedData">The requested free/busy or suggestion data.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.GetUserAvailability(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.AttendeeInfo},Microsoft.Exchange.WebServices.Data.TimeWindow,Microsoft.Exchange.WebServices.Data.AvailabilityData,Microsoft.Exchange.WebServices.Data.AvailabilityOptions)">
			<summary>Retrieves detailed information about the availability of a set of users, rooms and resources within a specified time window.
</summary>
			<returns>A GetUserAvailabilityResults object.
</returns>
			<param name="attendees">The attendees for which to retrieve availability information.
</param>
			<param name="options">The options controlling the information returned.
</param>
			<param name="timeWindow">The time window in which to retrieve user availability information.
</param>
			<param name="requestedData">The requested free/busy or suggestion data.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.GetUserOofSettings(System.String)">
			<summary>Gets out of office settings for the specified mailbox.
</summary>
			<returns>An OofSettings object.
</returns>
			<param name="smtpAddress">The SMTP address of the user for which to retrieve OOF settings.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.LoadPropertiesForItems(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.Item},Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Loads the properties of multiple items in a single call to EWS.
            </summary>
			<returns>A ServiceResponseCollection providing results for each of the specified items.</returns>
			<param name="propertySet">The set of properties to load.</param>
			<param name="items">The items to load the properties of.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.MoveItems(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.ItemId},Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Moves multiple items in a single call to EWS.
            </summary>
			<returns>A ServiceResponseCollection providing copy results for each of the specified item Ids.</returns>
			<param name="destinationFolderId">The Id of the folder to move the items to.</param>
			<param name="itemIds">The Ids of the items to move.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.RemoveDelegates(Microsoft.Exchange.WebServices.Data.Mailbox,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.UserId})">
			<summary>
            Removes delegates on a specific mailbox. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of DelegateUserResponse objects providing the results of the operation.</returns>
			<param name="mailbox">The mailbox to remove delegates from.</param>
			<param name="userIds">The Ids of the delegate users to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.RemoveDelegates(Microsoft.Exchange.WebServices.Data.Mailbox,Microsoft.Exchange.WebServices.Data.UserId[])">
			<summary>
            Removes delegates on a specific mailbox. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of DelegateUserResponse objects providing the results of the operation.</returns>
			<param name="mailbox">The mailbox to remove delegates from.</param>
			<param name="userIds">The Ids of the delegate users to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ResolveName(System.String)">
			<summary>
            Finds contacts in the user's Contacts folder and the Global Address List (in that order) that have names
            that match the one passed as a parameter. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
			<param name="nameToResolve">The name to resolve.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ResolveName(System.String,Microsoft.Exchange.WebServices.Data.ResolveNameSearchLocation,System.Boolean)">
			<summary>
            Finds contacts in the Global Address List that have names that match the one passed as a parameter.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
			<param name="returnContactDetails">Indicates whether full contact information should be returned for each of the found contacts.</param>
			<param name="nameToResolve">The name to resolve.</param>
			<param name="searchScope">The scope of the search.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.ResolveName(System.String,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.FolderId},Microsoft.Exchange.WebServices.Data.ResolveNameSearchLocation,System.Boolean)">
			<summary>
            Finds contacts in the Global Address List and/or in specific contact folders that have names
            that match the one passed as a parameter. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of name resolutions whose names match the one passed as a parameter.</returns>
			<param name="returnContactDetails">Indicates whether full contact information should be returned for each of the found contacts.</param>
			<param name="parentFolderIds">The Ids of the contact folders in which to look for matching contacts.</param>
			<param name="nameToResolve">The name to resolve.</param>
			<param name="searchScope">The scope of the search.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.SetUserOofSettings(System.String,Microsoft.Exchange.WebServices.Data.OofSettings)">
			<summary>Sets the out of office settings for a specific mailbox.
</summary>
			<param name="smtpAddress">The SMTP address of the user for which to set OOF settings.
</param>
			<param name="oofSettings">The OOF settings.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.SubscribeToPullNotifications(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.FolderId},System.Int32,System.String,Microsoft.Exchange.WebServices.Data.EventType[])">
			<summary>
            Subscribes to pull notifications. Calling this method results in a call to EWS.
            </summary>
			<returns>A PullSubscription representing the new subscription.</returns>
			<param name="eventTypes">The event types to subscribe to.</param>
			<param name="watermark">A optional watermark representing a previously opened subscription.</param>
			<param name="timeout">The timeout, in minutes, after which the subscription expires. timeout must be between 1 and 1440.</param>
			<param name="folderIds">The Ids of the folder to subscribe to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.SubscribeToPullNotificationsOnAllFolders(System.Int32,System.String,Microsoft.Exchange.WebServices.Data.EventType[])">
			<summary>Subscribes to pull notifications on all folders in the authenticated user's mailbox.
</summary>
			<returns>A PullSubscription object.
</returns>
			<param name="eventTypes">The event types to subscribe to.
</param>
			<param name="watermark">An optional watermark representing a previously opened subscription.
</param>
			<param name="timeout">The timeout, in minutes, after which the subscription expires. Timeout must be between 1 and 1440.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.SubscribeToPushNotifications(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.FolderId},System.Uri,System.Int32,System.String,Microsoft.Exchange.WebServices.Data.EventType[])">
			<summary>
            Subscribes to push notifications. Calling this method results in a call to EWS.
            </summary>
			<returns>A PushSubscription representing the new subscription.</returns>
			<param name="eventTypes">The event types to subscribe to.</param>
			<param name="url">The URL of the Web Service endpoint the Exchange server should push events to.</param>
			<param name="watermark">A optional watermark representing a previously opened subscription.</param>
			<param name="folderIds">The Ids of the folder to subscribe to.</param>
			<param name="frequency">The frequency, in minutes, at which the Exchange server should contact the Web Service endpoint. frequency must be between 1 and 1440.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.SubscribeToPushNotificationsOnAllFolders(System.Uri,System.Int32,System.String,Microsoft.Exchange.WebServices.Data.EventType[])">
			<summary>Subscribes to push notifications on all folders in the authenticated user's mailbox.
</summary>
			<returns>A PushSubscription object.
</returns>
			<param name="eventTypes">The event types to subscribe to.
</param>
			<param name="url">The URL of the Web Service endpoint the Exchange server should push events to.
</param>
			<param name="watermark">An optional watermark representing a previously opened subscription.
</param>
			<param name="frequency">The frequency, in minutes, at which the Exchange server should contact the Web Service endpoint. Frequency must be between 1 and 1440.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.SyncFolderHierarchy(Microsoft.Exchange.WebServices.Data.PropertySet,System.String)">
			<summary>
            Synchronizes the entire folder hierarchy of the mailbox this Service is connected to. Calling this method results in a call to EWS.
            </summary>
			<returns>A ChangeCollection containing a list of changes that occurred in the specified folder.</returns>
			<param name="propertySet">The set of properties to retrieve for synchronized items.</param>
			<param name="syncState">The optional sync state representing the point in time when to start the synchronization.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.SyncFolderHierarchy(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.PropertySet,System.String)">
			<summary>
            Synchronizes the sub-folders of a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A ChangeCollection containing a list of changes that occurred in the specified folder.</returns>
			<param name="propertySet">The set of properties to retrieve for synchronized items.</param>
			<param name="syncFolderId">The Id of the folder containing the items to synchronize with. A null value indicates the root folder of the mailbox.</param>
			<param name="syncState">The optional sync state representing the point in time when to start the synchronization.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.SyncFolderItems(Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.PropertySet,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.ItemId},System.Int32,Microsoft.Exchange.WebServices.Data.SyncFolderItemsScope,System.String)">
			<summary>
            Synchronizes the items of a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A ChangeCollection containing a list of changes that occurred in the specified folder.</returns>
			<param name="propertySet">The set of properties to retrieve for synchronized items.</param>
			<param name="maxChangesReturned">The maximum number of changes that should be returned.</param>
			<param name="syncScope">The sync scope identifying items to include in the ChangeCollection.</param>
			<param name="syncFolderId">The Id of the folder containing the items to synchronize with.</param>
			<param name="syncState">The optional sync state representing the point in time when to start the synchronization.</param>
			<param name="ignoredItemIds">The optional list of item Ids that should be ignored.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.UpdateDelegates(Microsoft.Exchange.WebServices.Data.Mailbox,System.Nullable{Microsoft.Exchange.WebServices.Data.MeetingRequestsDeliveryScope},Microsoft.Exchange.WebServices.Data.DelegateUser[])">
			<summary>
            Updates delegates on a specific mailbox. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of DelegateUserResponse objects providing the results of the operation.</returns>
			<param name="meetingRequestsDeliveryScope">Indicates how meeting requests should be sent to delegates.</param>
			<param name="delegateUsers">The delegate users to update.</param>
			<param name="mailbox">The mailbox to update delegates on.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.UpdateDelegates(Microsoft.Exchange.WebServices.Data.Mailbox,System.Nullable{Microsoft.Exchange.WebServices.Data.MeetingRequestsDeliveryScope},System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.DelegateUser})">
			<summary>
            Updates delegates on a specific mailbox. Calling this method results in a call to EWS.
            </summary>
			<returns>A collection of DelegateUserResponse objects providing the results of the operation.</returns>
			<param name="meetingRequestsDeliveryScope">Indicates how meeting requests should be sent to delegates.</param>
			<param name="delegateUsers">The delegate users to update.</param>
			<param name="mailbox">The mailbox to update delegates on.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExchangeService.UpdateItems(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.Item},Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.ConflictResolutionMode,System.Nullable{Microsoft.Exchange.WebServices.Data.MessageDisposition},System.Nullable{Microsoft.Exchange.WebServices.Data.SendInvitationsOrCancellationsMode})">
			<summary>
            Updates multiple items in a single EWS call. UpdateItems does not support items that have unsaved attachments.
            </summary>
			<returns>A ServiceResponseCollection providing update results for each of the specified items.</returns>
			<param name="sendInvitationsOrCancellationsMode">Indicates if and how invitations and/or cancellations should be sent for items of type Appointment. Required if items contains at least one Appointment instance.</param>
			<param name="items">The items to update.</param>
			<param name="conflictResolution">The conflict resolution mode.</param>
			<param name="messageDisposition">Indicates the disposition mode for items of type EmailMessage. Required if items contains at least one EmailMessage instance.</param>
			<param name="savedItemsDestinationFolderId">The folder in which to save sent messages, meeting invitations or cancellations. If null, the messages, meeting invitation or cancellations are saved in the Sent Items folder.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeService.FileAttachmentContentHandler">
			<summary>
            Gets or sets a file attachment content handler.
            </summary>
			<returns>IFileAttachmentContentHandler.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeService.ImpersonatedUserId">
			<summary>
            Gets or sets the Id of the user that EWS should impersonate. 
            </summary>
			<returns>An ImpersonatedUserId object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeService.PreferredCulture">
			<summary>
            Gets or sets the preferred culture for messages returned by the Exchange Web Services.
            </summary>
			<returns>A <see cref="T:System.Globalization.CultureInfo"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeService.TimeZone">
			<summary>
            Gets the time zone this service is scoped to.
            </summary>
			<returns>A <see cref="T:System.TimeZoneInfo"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeService.UnifiedMessaging">
			<summary>
            Provides access to the Unified Messaging functionalities.
            </summary>
			<returns>A UnifiedMessaging object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeService.Url">
			<summary>
            Gets or sets the URL of the Exchange Web Services.
            </summary>
			<returns>Returns a <see cref="T:System.Uri"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase">
			<summary>Represents an abstract binding to an Exchange Service.</summary>
		</member>
		<member name="E:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.OnSerializeCustomSoapHeaders">
			<summary>Can be implemented by applications to emit custom SOAP headers in requests that are sent to Exchange.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.AcceptGzipEncoding">
			<summary>Gets or sets a value indicating whether GZip compression encoding should be accepted.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.CookieContainer">
			<summary>Gets or sets the cookie container.</summary>
			<returns>A <see cref="T:System.Net.CookieContainer"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.Credentials">
			<summary>Gets or sets the credentials that are used to authenticate with the Exchange Web Services. Setting the Credentials property automatically sets the UseDefaultCredentials property to false.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.PreAuthenticate">
			<summary>Gets or sets a value that indicates whether HTTP pre-authentication should be performed.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.RequestedServerVersion">
			<summary>Gets the requested server version.</summary>
			<returns>An ExchangeVersion object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.ServerInfo">
			<summary>Gets information associated with the server that processed the most recent request.</summary>
			<returns>An ExchangeServerInfo object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.Timeout">
			<summary>Gets or sets the timeout that is used when sending HTTP requests and when receiving HTTP responses, in milliseconds.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.TraceEnabled">
			<summary>Gets or sets a value indicating whether tracing is enabled.
</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.TraceFlags">
			<summary>Gets or sets the trace flags.
            </summary>
			<returns>A <see cref="T:Microsoft.Exchange.WebServices.Data.TraceFlags"></see> enumeration value.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.TraceListener">
			<summary>Gets or sets the trace listener. </summary>
			<returns>An <see cref="T:Microsoft.Exchange.WebServices.Data.ITraceListener"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.UseDefaultCredentials">
			<summary>Gets or sets a value indicating whether the credentials of the user currently logged into Windows should be used to
authenticate with the Exchange Web Services. Setting the UseDefaultCredentials property to true automatically sets the Credentials property to null.
</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExchangeServiceBase.UserAgent">
			<summary>Gets or sets the user agent. </summary>
			<returns>A String that represents the user agent.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExchangeVersion">
			<summary>Defines each available release version of Exchange Server.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ExchangeVersion.Exchange2007_SP1">
			<summary>
            Indicates Microsoft Exchange Server 2007 Service Pack 1 (SP1).
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ExchangeVersion.Exchange2010">
			<summary>
            Indicates Microsoft Exchange Server 2010.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExpandGroupResults">
			<summary>Represents the results of an ExpandGroup method.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExpandGroupResults.GetEnumerator">
			<summary>Gets an enumerator that iterates through the group members.</summary>
			<returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> object that enumerates through the group members.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExpandGroupResults.Count">
			<summary>Gets the number of members that are returned.</summary>
			<returns>The number of members that are returned.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExpandGroupResults.IncludesAllMembers">
			<summary>Gets a value that indicates whether the entire group was returned.</summary>
			<returns>Value is true if all of the group members were returned; otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExpandGroupResults.Members">
			<summary>Gets the members of the expanded group.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection`1"></see> object that contains the group members.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExtendedProperty">
			<summary>Represents an extended property.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedProperty.Equals(System.Object)">
			<summary>Indicates whether the ExtendedProperty object is equal to the specified object.</summary>
			<returns>Returns true if the specified object is equal to the ExtendedProperty object; otherwise returns false.
</returns>
			<param name="obj">The <see cref="T:System.Object"></see> to compare with the ExtendedProperty object.
</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedProperty.GetHashCode">
			<summary>Gets a hash code for the ExtendedProperty object.</summary>
			<returns>The GetHashCode method returns an <see cref="T:System.Int32"></see> value.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedProperty.PropertyDefinition">
			<summary>Gets the definition of the extended property.</summary>
			<returns>The PropertyDefinition property returns an ExtendedPropertyDefinition object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedProperty.Value">
			<summary>Gets or sets the value of the extended property. 
</summary>
			<returns>The Value property returns an <see cref="T:System.Object"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExtendedPropertyCollection">
			<summary>
            Represents a collection of extended properties.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyCollection.#ctor">
			<summary>Initializes a new instance of the ExtendedPropertyCollection class.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition">
			<summary>
            Represents the definition of an extended property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.#ctor(System.Int32,Microsoft.Exchange.WebServices.Data.MapiPropertyType)">
			<summary>
        Initializes a new instance of the ExtendedPropertyDefinition class.
      </summary>
			<param name="mapiType">The MAPI type of the extended property.</param>
			<param name="tag">The tag of the extended property.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.#ctor(Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet,System.Int32,Microsoft.Exchange.WebServices.Data.MapiPropertyType)">
			<summary>
            Initializes a new instance of the ExtendedPropertyDefinition class.
            </summary>
			<param name="mapiType">The MAPI type of the extended property.</param>
			<param name="propertySet">The property set of the extended property.</param>
			<param name="id">The Id of the extended property.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.#ctor(Microsoft.Exchange.WebServices.Data.DefaultExtendedPropertySet,System.String,Microsoft.Exchange.WebServices.Data.MapiPropertyType)">
			<summary>
        Initializes a new instance of the ExtendedPropertyDefinition class.
      </summary>
			<param name="mapiType">The MAPI type of the extended property.</param>
			<param name="propertySet">The extended property set of the extended property.</param>
			<param name="name">The name of the extended property.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.#ctor(System.Guid,System.Int32,Microsoft.Exchange.WebServices.Data.MapiPropertyType)">
			<summary>
        Initializes a new instance of the ExtendedPropertyDefinition class.
      </summary>
			<param name="mapiType">The MAPI type of the extended property.</param>
			<param name="id">The Id of the extended property.</param>
			<param name="propertySetId">The property set Id of the extended property.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.#ctor(System.Guid,System.String,Microsoft.Exchange.WebServices.Data.MapiPropertyType)">
			<summary>
        Initializes a new instance of the ExtendedPropertyDefinition class.
      </summary>
			<param name="name">The name of the extended property.</param>
			<param name="mapiType">The MAPI type of the extended property.</param>
			<param name="propertySetId">The property set Id of the extended property.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.Equals(System.Object)">
			<summary>
            Determines whether a given extended property definition is equal to this extended property definition.
            </summary>
			<returns>Returns true if the properties definitions define the same extended property.</returns>
			<param name="obj">The object to check for equality.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.GetHashCode">
			<summary>
            Serves as a hash function for a particular type.
            </summary>
			<returns>A hash code for the current<see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.op_Equality(Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition,Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition)">
			<summary>
            Determines whether two specified instances of ExtendedPropertyDefinition are equal.
            </summary>
			<returns>Returns true if extended property definitions are equal.</returns>
			<param name="extPropDef1">First extended property definition.</param>
			<param name="extPropDef2">Second extended property definition.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.op_Inequality(Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition,Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition)">
			<summary>
            Determines whether two specified instances of ExtendedPropertyDefinition are not equal.
            </summary>
			<returns>Returns true if extended property definitions are equal.</returns>
			<param name="extPropDef1">First extended property definition.</param>
			<param name="extPropDef2">Second extended property definition.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.Id">
			<summary>
            Gets the Id of the extended property.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.MapiType">
			<summary>
            Gets the MAPI type of the extended property.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.Name">
			<summary>
            Gets the name of the extended property.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.PropertySet">
			<summary>
            Gets the property set of the extended property.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.PropertySetId">
			<summary>
            Gets the property set Id or the extended property.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.Tag">
			<summary>
            Gets the extended property's tag.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition.Version">
			<summary>
            Gets the version.
            </summary>
			<returns>The version.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FileAsMapping">
			<summary>Defines how the FileAs property of a contact is automatically formatted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.Company">
			<summary>
            Company
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.CompanySurnameCommaGivenName">
			<summary>Surname, GivenName</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.CompanySurnameGivenName">
			<summary>Company (SurnameGivenName)</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.CompanySurnameSpaceGivenName">
			<summary>Company (Surname GivenName)</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.DisplayName">
			<summary>DisplayName</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.Empty">
			<summary>No mapping.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.GivenName">
			<summary>GivenName</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.GivenNameSpaceSurname">
			<summary>GivenName Surname</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.None">
			<summary>
            No automatic formatting is used.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.Surname">
			<summary>Surname</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.SurnameCommaGivenName">
			<summary>Surname,GivenName</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.SurnameCommaGivenNameCompany">
			<summary>Surname,GivenNameCompany</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.SurnameGivenName">
			<summary>SurnameGivenName</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.SurnameGivenNameCompany">
			<summary>SurnameGivenNameCompany</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.SurnameGivenNameMiddleSuffix">
			<summary>SurnameGivenNameMiddleSuffix</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.SurnameGivenNameSuffix">
			<summary>SurnameGivenNameSuffix</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.SurnameSpaceGivenName">
			<summary>Surname GivenName</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FileAsMapping.SurnameSpaceGivenNameCompany">
			<summary>Surname GivenNameCompany</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FileAttachment">
			<summary>Represents a file attachment.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FileAttachment.Load(System.IO.Stream)">
			<summary>Loads the content of the file attachment into the specified stream. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<param name="stream">The stream to load the content of the attachment into.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FileAttachment.Load(System.String)">
			<summary>Loads the content of the file attachment into the specified file. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<param name="fileName">The name of the file to load the content of the attachment into. If the file already exists, it is overwritten.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FileAttachment.Content">
			<summary>Gets the content of the attachment in memory. Content is set only when the FileAttachment.Load() method is called.
            </summary>
			<returns>The attachment as an array of bytes.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FileAttachment.FileName">
			<summary>Gets the name of the file the attachment is linked to.
            </summary>
			<returns>The name of the file that the attachment is linked to.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FileAttachment.IsContactPhoto">
			<summary>Gets a value that indicates whether the attachment is the contact's photo.</summary>
			<returns>Value is true if the attachment is the contact's photo; otherwise, the value is false.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FindFoldersResults">
			<summary>Represents the results of a folder search operation. </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FindFoldersResults.GetEnumerator">
			<summary>Returns an enumerator that iterates through the collection. </summary>
			<returns>An <see cref="T:System.Collections.Generic.IEnumerator ` 1"></see> object that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FindFoldersResults.Folders">
			<summary>Gets a collection that contains the folders that were found by the search operation.
            </summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection ` 1"></see> object that contains the folders that were found by the search operation.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FindFoldersResults.MoreAvailable">
			<summary>Gets a value that indicates whether more folders that match the search criteria are available in the searched folder. </summary>
			<returns>Value is true if more folders are available; otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FindFoldersResults.NextPageOffset">
			<summary>Gets the offset that should be used with a FolderView object to retrieve the next page of folders in a FindFolders operation.</summary>
			<returns>The offset to the next page of folders.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FindFoldersResults.TotalCount">
			<summary>Gets the total number of folders that match the search criteria that are available in the searched folder.
            </summary>
			<returns>The total number of folders that match the search criteria.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FindItemsResults`1">
			<summary>Represents the results of an item search operation.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FindItemsResults`1.GetEnumerator">
			<summary>Returns an enumerator that iterates through the collection.
            </summary>
			<returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FindItemsResults`1.Items">
			<summary>Gets a collection that contains the items that were found by the search operation.
            </summary>
			<returns>The items that were found by the search operation.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FindItemsResults`1.MoreAvailable">
			<summary>Gets a value that indicates whether more items that match the search criteria are available in the searched folder. 
            </summary>
			<returns>Value is true if there are more items that match the search criteria; otherwise, the value is false.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FindItemsResults`1.NextPageOffset">
			<summary>Gets the offset that should be used with a ItemView object to retrieve the next page of folders in a FindItems operation.</summary>
			<returns>The offset to the next page of items.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FindItemsResults`1.TotalCount">
			<summary>Gets the total number of items that match the search criteria that is available in the searched folder.
            </summary>
			<returns>The total number of items that match the search criteria.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Folder">
			<summary>Represents a generic folder.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>Initializes an unsaved local instance of the Folder class. To bind to an existing folder, use the Folder.Bind() method instead.</summary>
			<param name="service">The Exchange Web Services (EWS) service to which this object belongs.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>Binds to an existing folder, whatever its actual type is, and loads its first class properties. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>The Bind method returns an instance of the Folder class that represents the folder that corresponds to the specified ID.</returns>
			<param name="service">The service to use to bind to the folder.</param>
			<param name="id">The ID of the folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>Binds to an existing folder, whatever its actual type is, and loads its first class properties.
            Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>The Bind method returns an instance of the Folder class that represents the folder with the specified name.</returns>
			<param name="service">The service to use to bind to the folder.</param>
			<param name="name">The name of the folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>Binds to an existing folder, whatever its actual type is, and loads the specified set of properties. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>The Bind method returns an instance of the Folder class that represents the folder that corresponds to the specified ID.</returns>
			<param name="service">The service to use to bind to the folder.</param>
			<param name="id">The ID of the folder to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>Binds to an existing folder, whatever its actual type is, and loads the specified set of properties.
            Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>The Bind method returns an instance of the Folder class that represents the folder with the specified name.</returns>
			<param name="service">The service to use to bind to the folder.</param>
			<param name="propertySet">The set of properties to load.</param>
			<param name="name">The name of the folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Copy(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Copies this folder into a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A Folder representing the copy of this folder.</returns>
			<param name="destinationFolderId">The Id of the folder in which to copy this folder.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Copy(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Copies this folder into the specified folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A Folder representing the copy of this folder.</returns>
			<param name="destinationFolderName">The name of the folder in which to copy this folder.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Delete(Microsoft.Exchange.WebServices.Data.DeleteMode)">
			<summary>
            Deletes the folder. Calling this method results in a call to EWS.
            </summary>
			<param name="deleteMode">Deletion mode.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.FindFolders(Microsoft.Exchange.WebServices.Data.FolderView)">
			<summary>
            Obtains a list of folders by searching the sub-folders of this folder. Calling this method results in a call to EWS.
            </summary>
			<returns>An object representing the results of the search operation.</returns>
			<param name="view">The view controlling the number of folders returned.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.FindFolders(Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.FolderView)">
			<summary>Returns a list of folders by searching the sub-folders in the specified view that satisfy the specified filter criteria. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>A FindFoldersResults object that contains the results of the search.</returns>
			<param name="view">The view that controls the number of folders that are returned.</param>
			<param name="searchFilter">The search filter.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.FindItems(Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>
            Obtains a list of items by searching the contents of this folder. Calling this method results in a call to EWS.
            </summary>
			<returns>An object representing the results of the search operation.</returns>
			<param name="view">The view controlling the number of items returned.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.FindItems(Microsoft.Exchange.WebServices.Data.ItemView,Microsoft.Exchange.WebServices.Data.Grouping)">
			<summary>Obtains a list of items by searching the contents of this folder in the specified view and grouped by the specified property. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>A GroupedFindItemsResults object that contains the results of the search.</returns>
			<param name="view">The view that controls the number of items that are returned.</param>
			<param name="groupBy">The grouping criteria.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.FindItems(Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>Returns a list of items by searching the contents of this folder. Calling this method results in a call to Exchange Web Services (EWS).
</summary>
			<returns>A GroupedFindItemsResults object that contains the results of the search.</returns>
			<param name="view">The view that controls the number of items that are returned.</param>
			<param name="searchFilter">The search filter.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.FindItems(System.String,Microsoft.Exchange.WebServices.Data.ItemView)">
			<summary>Returns a list of items by searching the contents of this folder with the specified query string. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>A GroupedFindItemsResults object that contains the results of the search.</returns>
			<param name="queryString">The query string that specifies the items to return.</param>
			<param name="view">The view that controls the number of items that are returned.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.FindItems(Microsoft.Exchange.WebServices.Data.SearchFilter,Microsoft.Exchange.WebServices.Data.ItemView,Microsoft.Exchange.WebServices.Data.Grouping)">
			<summary>Returns a list of items by searching the contents of this folder by using the specified search filter. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>A GroupedFindItemsResults object that contains the results of the search.</returns>
			<param name="view">The view that controls the number of items that are returned.</param>
			<param name="searchFilter">The search filter.</param>
			<param name="groupBy">The grouping criteria.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.FindItems(System.String,Microsoft.Exchange.WebServices.Data.ItemView,Microsoft.Exchange.WebServices.Data.Grouping)">
			<summary>Returns a list of items by searching the contents of this folder. Calling this method results in a call to Exchange Web Services (EWS).</summary>
			<returns>A GroupedFindItemsResults object that contains the results of the search.</returns>
			<param name="queryString">The query string that specifies the search filter.</param>
			<param name="view">The view that controls the number of items that are returned.</param>
			<param name="groupBy">The grouping criteria.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Move(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Moves this folder to a specific folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A new folder representing this folder in its new location. After Move completes, this folder does not exist anymore.</returns>
			<param name="destinationFolderId">The Id of the folder in which to move this folder.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Move(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Moves this folder to the specified folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A new folder representing this folder in its new location. After Move completes, this folder does not exist anymore.</returns>
			<param name="destinationFolderName">The name of the folder in which to move this folder.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.RemoveExtendedProperty(Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition)">
			<summary>
            Removes an extended property.
            </summary>
			<returns>Returns true if property was removed.</returns>
			<param name="extendedPropertyDefinition">The extended property definition.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Save(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Saves this folder in a specific folder. Calling this method results in a call to EWS.
            </summary>
			<param name="parentFolderId">The Id of the folder in which to save this folder.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Save(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Saves this folder in a specific folder. Calling this method results in a call to EWS.
            </summary>
			<param name="parentFolderName">The name of the folder in which to save this folder.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.SetExtendedProperty(Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition,System.Object)">
			<summary>Sets the specified extended property.</summary>
			<param name="value">The value to which to set the extended property.</param>
			<param name="extendedPropertyDefinition">The definition of the extended property.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Folder.Update">
			<summary>
            Applies the local changes that have been made to this folder. Calling this method results in a call to EWS.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.ChildFolderCount">
			<summary>
            Gets the number of child folders this folder has.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.DisplayName">
			<summary>
            Gets or sets the display name of the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.EffectiveRights">
			<summary>
            Gets a value indicating the effective rights the current authenticated user has on the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.ExtendedProperties">
			<summary>
            Gets a list of extended properties associated with the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.FolderClass">
			<summary>
            Gets or sets the custom class name of this folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.Id">
			<summary>
            Gets the Id of the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.ManagedFolderInformation">
			<summary>
            Gets the Email Lifecycle Management (ELC) information associated with the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.ParentFolderId">
			<summary>
            Gets the Id of this folder's parent folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.Permissions">
			<summary>
            Gets or sets a list of permissions for the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.TotalCount">
			<summary>
            Gets the total number of items contained in the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Folder.UnreadCount">
			<summary>
            Gets the number of unread items in the folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderChange">
			<summary>
            Represents a change on a folder as returned by a synchronization operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderChange.Folder">
			<summary>
            Gets the folder the change applies to. Folder is null when ChangeType is equal to
            ChangeType.Delete. In that case, use the FolderId property to retrieve the Id of
            the folder that was deleted.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderChange.FolderId">
			<summary>
            Gets the Id of the folder the change applies to.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderEvent">
			<summary>Represents an event that affects a folder.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderEvent.FolderId">
			<summary>Gets the identifier of the effected folder.</summary>
			<returns>A FolderId object containing the identifier of the effected folder.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderEvent.OldFolderId">
			<summary>Gets the identifier of the folder that was moved or copied.</summary>
			<returns>A FolderId object that contains the identifier of the folder that was moved or copied.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderEvent.UnreadCount">
			<summary>Gets the number of unread items in the folder.</summary>
			<returns>The number of unread items in the folder. The property can be null.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderId">
			<summary>
            Represents the Id of a folder.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderId.#ctor(System.String)">
			<summary>
        Initializes a new instance of the FolderId class. Use this constructor
        to link this FolderId to an existing folder that you have the unique Id of.
      </summary>
			<param name="uniqueId">The unique Id used to initialize the FolderId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderId.#ctor(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
        Initializes a new instance of the FolderId class. Use this constructor
        to link this FolderId to a well known folder (e.g. Inbox, Calendar or Contacts).
      </summary>
			<param name="folderName">The folder name used to initialize the FolderId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderId.#ctor(Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.Mailbox)">
			<summary>
        Initializes a new instance of the FolderId class. Use this constructor
        to link this FolderId to a well known folder (e.g. Inbox, Calendar or Contacts) in a
        specific mailbox.
      </summary>
			<param name="folderName">The folder name used to initialize the FolderId.</param>
			<param name="mailbox">The mailbox used to initialize the FolderId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderId.Equals(System.Object)">
			<summary>
            Determines whether the specified object is equal to the current FolderId.
            </summary>
			<returns>Returns true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, returns false.</returns>
			<param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
			<exception cref="T:System.NullReferenceException">The obj parameter is null.</exception>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderId.GetHashCode">
			<summary>
            Serves as a hash function for a particular type.
            </summary>
			<returns>A hash code for the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderId.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.FolderId">
			<summary>
             Defines an implicit conversion between string and FolderId.
            </summary>
			<returns>A FolderId initialized with the specified unique Id.</returns>
			<param name="uniqueId">The unique Id to convert to FolderId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderId.op_Implicit(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)~Microsoft.Exchange.WebServices.Data.FolderId">
			<summary>
            Defines an implicit conversion between WellKnownFolderName and FolderId.
            </summary>
			<returns>A FolderId initialized with the specified folder name.</returns>
			<param name="folderName">The folder name to convert to FolderId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderId.ToString">
			<summary>
            Returns a String that represents the current FolderId.
            </summary>
			<returns>A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderId.FolderName">
			<summary>
            Gets the name of the folder associated with the folder Id. Name and Id are mutually exclusive; if one is set, the other is null.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderId.Mailbox">
			<summary>
            Gets the mailbox of the folder. Mailbox is only set when FolderName is set.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderIdCollection">
			<summary>
            Represents a collection of folder Ids.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderIdCollection.Add(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Adds a folder Id to the collection.
            </summary>
			<param name="folderId">The folder Id to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderIdCollection.Add(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Adds a well-known folder to the collection.
            </summary>
			<returns>A FolderId encapsulating the specified Id.</returns>
			<param name="folderName">The well known folder to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderIdCollection.Clear">
			<summary>
            Clears the collection.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderIdCollection.Remove(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Removes the specified folder Id from the collection.
            </summary>
			<returns>Returns true if the folder id was successfully removed from the collection; otherwise, returns false.</returns>
			<param name="folderId">The folder Id to remove from the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderIdCollection.Remove(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Removes the specified well-known folder from the collection.
            </summary>
			<returns>Returns true if the well-known folder was successfully removed from the collection; otherwise, returns false.</returns>
			<param name="folderName">The well-knwon folder to remove from the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderIdCollection.RemoveAt(System.Int32)">
			<summary>
            Removes the folder Id at the specified index.
            </summary>
			<param name="index">The zero-based index of the folder Id to remove.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderPermission">
			<summary>
            Represents a permission on a folder.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermission.#ctor">
			<summary>
            Initializes a new instance of the FolderPermission class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermission.#ctor(Microsoft.Exchange.WebServices.Data.StandardUser,Microsoft.Exchange.WebServices.Data.FolderPermissionLevel)">
			<summary>
        Initializes a new instance of the FolderPermission class.
      </summary>
			<param name="permissionLevel">The level of the permission.</param>
			<param name="standardUser">The standard user the permission applies to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermission.#ctor(System.String,Microsoft.Exchange.WebServices.Data.FolderPermissionLevel)">
			<summary>
        Initializes a new instance of the FolderPermission class.
      </summary>
			<param name="permissionLevel">The level of the permission.</param>
			<param name="primarySmtpAddress">The primary SMTP address of the user the permission applies to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermission.#ctor(Microsoft.Exchange.WebServices.Data.UserId,Microsoft.Exchange.WebServices.Data.FolderPermissionLevel)">
			<summary>
        Initializes a new instance of the FolderPermission class.
      </summary>
			<param name="permissionLevel">The level of the permission.</param>
			<param name="userId">The Id of the user the permission applies to.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.CanCreateItems">
			<summary>
            Gets or sets a value indicating whether the user can create new items.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.CanCreateSubFolders">
			<summary>
            Gets or sets a value indicating whether the user can create sub-folders.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.DeleteItems">
			<summary>
            Gets or sets a value indicating if/how the user can delete existing items.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.DisplayPermissionLevel">
			<summary>
            Gets the permission level that Outlook would display for this folder permission.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.EditItems">
			<summary>
            Gets or sets a value indicating if/how the user can edit existing items.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.IsFolderContact">
			<summary>
            Gets or sets a value indicating whether the user is a contact for the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.IsFolderOwner">
			<summary>
            Gets or sets a value indicating whether the user owns the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.IsFolderVisible">
			<summary>
            Gets or sets a value indicating whether the folder is visible to the user.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.PermissionLevel">
			<summary>
            Gets or sets the permission level.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.ReadItems">
			<summary>
            Gets or sets the read items access permission.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermission.UserId">
			<summary>
            Gets the Id of the user the permission applies to.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderPermissionCollection">
			<summary>
            Represents a collection of folder permissions.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermissionCollection.Add(Microsoft.Exchange.WebServices.Data.FolderPermission)">
			<summary>
            Adds a permission to the collection.
            </summary>
			<param name="permission">The permission to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermissionCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.FolderPermission})">
			<summary>
            Adds the specified permissions to the collection.
            </summary>
			<param name="permissions">The permissions to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermissionCollection.Clear">
			<summary>
            Clears this collection.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermissionCollection.Remove(Microsoft.Exchange.WebServices.Data.FolderPermission)">
			<summary>
            Removes a permission from the collection.
            </summary>
			<returns>Returns true if the folder permission was successfully removed from the collection; otherwise, returns false.</returns>
			<param name="permission">The permission to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderPermissionCollection.RemoveAt(System.Int32)">
			<summary>
            Removes a permission from the collection.
            </summary>
			<param name="index">The zero-based index of the permission to remove.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderPermissionCollection.UnknownEntries">
			<summary>
            Gets a list of unknown user Ids in the collection.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel">
			<summary>
            Defines permission levels for calendar folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.Author">
			<summary>
            The Author level.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.Contributor">
			<summary>
            The Contributor level.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.Custom">
			<summary>
            The Custom level.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.Editor">
			<summary>
            The Editor level.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.FreeBusyTimeAndSubjectAndLocation">
			<summary>
            The Free/busy Time, Subject and Location level. Can only be applied to Calendar folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.FreeBusyTimeOnly">
			<summary>
            The Free/busy Time Only level. Can only be applied to Calendar folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.None">
			<summary>
            No permission is granted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.NoneditingAuthor">
			<summary>
            The Non-editing Author level.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.Owner">
			<summary>
            The Owner level.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.PublishingAuthor">
			<summary>
            The Pusnlishing Author level.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.PublishingEditor">
			<summary>
            The Publishing Editor level.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionLevel.Reviewer">
			<summary>
            The Reviewer level.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderPermissionReadAccess">
			<summary>
            Defines a user's read access permission on items in a non-calendar folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionReadAccess.FullDetails">
			<summary>
            The user has access to the full details of items.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionReadAccess.None">
			<summary>
            The user has no read access on the items in the folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionReadAccess.TimeAndSubjectAndLocation">
			<summary>
            The user can read the start and end date and time, subject and location of appointments. Can only be applied to Calendar folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderPermissionReadAccess.TimeOnly">
			<summary>
            The user can read the start and end date and time of appointments. Can only be applied to Calendar folders.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderSchema">
			<summary>
            Represents the schema for folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.ChildFolderCount">
			<summary>
            Defines the ChildFolderCount property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.DisplayName">
			<summary>
            Defines the DisplayName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.EffectiveRights">
			<summary>
            Defines the EffectiveRights property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.FolderClass">
			<summary>
            Defines the FolderClass property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.Id">
			<summary>
            Defines the Id property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.ManagedFolderInformation">
			<summary>
            Defines the ManagedFolderInformation property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.ParentFolderId">
			<summary>
            Defines the ParentFolderId property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.Permissions">
			<summary>
            Defines the Permissions property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.TotalCount">
			<summary>
            Defines the TotalCount property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderSchema.UnreadCount">
			<summary>
            Defines the UnreadCount property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderTraversal">
			<summary>
            Defines the scope of FindFolders operations.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderTraversal.Deep">
			<summary>
            The entire hierarchy of sub-folders is retrieved.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderTraversal.Shallow">
			<summary>
            Only direct sub-folders are retrieved.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FolderTraversal.SoftDeleted">
			<summary>
            Only soft deleted folders are retrieved.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FolderView">
			<summary>
            Represents the view settings in a folder search operation.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderView.#ctor(System.Int32)">
			<summary>
            Initializes a new instance of the FolderView class.
            </summary>
			<param name="pageSize">The maximum number of elements the search operation should return.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderView.#ctor(System.Int32,System.Int32)">
			<summary>
        Initializes a new instance of the FolderView class.
      </summary>
			<param name="offset">The offset of the view from the base point.</param>
			<param name="pageSize">The maximum number of elements the search operation should return.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.FolderView.#ctor(System.Int32,System.Int32,Microsoft.Exchange.WebServices.Data.OffsetBasePoint)">
			<summary>
        Initializes a new instance of the FolderView class.
      </summary>
			<param name="offset">The offset of the view from the base point.</param>
			<param name="pageSize">The maximum number of elements the search operation should return.</param>
			<param name="offsetBasePoint">The base point of the offset.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.FolderView.Traversal">
			<summary>
            Gets or sets the search traversal mode. Defaults to FolderTraversal.Shallow.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.FreeBusyViewType">
			<summary>Defines the type of free/busy information that is returned by a GetUserAvailability operation.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FreeBusyViewType.Detailed">
			<summary>
            Represents the legacy status information: free, busy, tentative, and OOF; the start/end times of the
            appointments; and various properties of the appointment such as subject, location, and importance.
            This requested view will return the maximum amount of information for which the requesting user is privileged.
            If merged free/busy information only is available, as with requesting information for users in a Microsoft
            Exchange Server 2003 forest, FreeBusyViewType.MergedOnly will be returned. Otherwise, FreeBusyViewType.FreeBusy or FreeBusyViewType.Detailed will be returned.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FreeBusyViewType.DetailedMerged">
			<summary>
            Represents all the properties in FreeBusyViewType.Detailed with a stream of merged free/busy availability
            information. If only merged free/busy information is available, for example if the mailbox exists on a computer that is running Exchange 2003, FreeBusyViewType.MergedOnly will be returned. Otherwise, FreeBusyViewType.FreeBusyMerged or FreeBusyViewType.DetailedMerged will be returned.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FreeBusyViewType.FreeBusy">
			<summary>
            Represents the legacy status information: free, busy, tentative, and Out of Office (OOF). This also includes the start/end
            times of the appointments. This view is richer than the legacy free/busy view because individual meeting
            start and end times are provided instead of an aggregated free/busy stream.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FreeBusyViewType.FreeBusyMerged">
			<summary>
            Represents all the properties in FreeBusyViewType.FreeBusy with a stream of merged free/busy availability information.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FreeBusyViewType.MergedOnly">
			<summary>
            Represents an aggregated free/busy stream. In cross-forest scenarios in which the target user in one forest
            does not have an Availability service configured, the Availability service of the requester retrieves the
            target user’s free/busy information from the free/busy public folder. Because public folders only store
            free/busy information in merged form, FreeBusyViewType.MergedOnly is the only available information.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.FreeBusyViewType.None">
			<summary>Represents no free/busy information.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.GetEventsResults">
			<summary>Represents a collection of notification events.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GetEventsResults.AllEvents">
			<summary>Gets the collection of notification events.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection`1"></see> object that contains the notification events.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GetEventsResults.FolderEvents">
			<summary>Gets an enumerator that iterates over all folder events in the collection.</summary>
			<returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"></see> object that iterates over all folder events in the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GetEventsResults.ItemEvents">
			<summary>Gets an enumerator that iterates over all item events in the collection.</summary>
			<returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"></see> object that iterates over all item events in the collection.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.GetFolderResponse">
			<summary>
            Represents the response to an individual folder retrieval operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GetFolderResponse.Folder">
			<summary>
            Gets the folder that was retrieved.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.GetItemResponse">
			<summary>
            Represents a response to an individual item retrieval operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GetItemResponse.Item">
			<summary>
            Gets the item that was retrieved.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.GetUserAvailabilityResults">
			<summary>Represents the results of the GetUserAvailability method.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GetUserAvailabilityResults.AttendeesAvailability">
			<summary>Gets a collection that represents availability information for each of the specified attendees.</summary>
			<returns>A ServiceResponseCollection object that contains AttendeeAvailability objects for each of the specified attendees.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GetUserAvailabilityResults.Suggestions">
			<summary>Gets a collection of suggested meeting times for the requested time period.</summary>
			<returns>A collection of Suggestion objects with suggested meeting times for the requested time period.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.GroupedFindItemsResults`1">
			<summary>
            Represents the results of an item search operation.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupedFindItemsResults`1.GetEnumerator">
			<summary>
            Returns an enumerator that iterates through the collection.
            </summary>
			<returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GroupedFindItemsResults`1.ItemGroups">
			<summary>Gets the item groups returned by the search operation.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GroupedFindItemsResults`1.MoreAvailable">
			<summary>
            Gets a value indicating whether more items corresponding to the search criteria
            are available in the searched folder. 
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GroupedFindItemsResults`1.NextPageOffset">
			<summary>Gets the offset that should be used with ItemView to retrieve the next page of items in a FindItems operation.</summary>
			<returns>Returns <see cref="T:System.Nullable`1"></see>.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GroupedFindItemsResults`1.TotalCount">
			<summary>
            Gets the total number of items matching the search criteria available in the searched folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Grouping">
			<summary>
            Represents grouping options in item search operations.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Grouping.#ctor">
			<summary>
            Initializes a new instance of the Grouping class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Grouping.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.SortDirection,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.AggregateType)">
			<summary>
        Initializes a new instance of the Grouping class.
      </summary>
			<param name="aggregateOn">The property to aggregate on.</param>
			<param name="groupOn">The property to group on.</param>
			<param name="sortDirection">The sort direction.</param>
			<param name="aggregateType">The type of aggregate to calculate.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Grouping.AggregateOn">
			<summary>
            Gets or sets the property to aggregate on.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Grouping.AggregateType">
			<summary>
            Gets or sets the types of aggregate to calculate.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Grouping.GroupOn">
			<summary>
            Gets or sets the property to group on.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Grouping.SortDirection">
			<summary>
            Gets or sets the sort direction.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.GroupMember">
			<summary>Represents a member of a group.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor">
			<summary>Initializes a new instance of the GroupMember class.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(Microsoft.Exchange.WebServices.Data.EmailAddress)">
			<summary>Initializes a new instance of the GroupMember class from the specified e-mail address.</summary>
			<param name="addressInformation">The e-mail address of the member.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>Initializes a new instance of the GroupMember class.</summary>
			<param name="contactGroupId">The identifier of the contact group to link the member to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(System.String)">
			<summary>Initializes a new instance of the GroupMember class that has the specified e-mail address.</summary>
			<param name="smtpAddress">The SMTP e-mail address of the member.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(Microsoft.Exchange.WebServices.Data.Contact,Microsoft.Exchange.WebServices.Data.EmailAddressKey)">
			<summary>Initializes a new instance of the GroupMember class from a Contact instance that is indexed by the specified e-mail address.</summary>
			<param name="emailAddressKey">The contact's e-mail address to link to.</param>
			<param name="contact">The contact to link to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(Microsoft.Exchange.WebServices.Data.ItemId,System.String)">
			<summary>Initializes a new instance of the GroupMember class from the specified identifier.</summary>
			<param name="addressToLink">The e-mail address of the contact.</param>
			<param name="contactId">The identifier of the contact member.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(System.String,Microsoft.Exchange.WebServices.Data.MailboxType)">
			<summary>Initializes a new instance of the GroupMember class that has the specified address.</summary>
			<param name="mailboxType">One of the MailboxType enumeration values.</param>
			<param name="smtpAddress">The SMTP address of the member.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of the GroupMember class that has the specified name and e-mail address.</summary>
			<param name="smtpAddress">The SMTP address of the member.</param>
			<param name="name">The name of the member.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(System.String,System.String,Microsoft.Exchange.WebServices.Data.MailboxType)">
			<summary>Initializes a new instance of the GroupMember class that has the specified address, routing, and mailbox type.</summary>
			<param name="mailboxType">One of the MailboxType enumeration values.</param>
			<param name="address">The e-mail address of the member.</param>
			<param name="routingType">The routing type of the address.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMember.#ctor(System.String,System.String,System.String)">
			<summary>Initializes a new instance of the GroupMember class with the specified name, e-mail address, and routing type.</summary>
			<param name="address">The e-mail address of the group member.</param>
			<param name="routingType">The routing type for the e-mail address.</param>
			<param name="name">The name of the group member.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GroupMember.AddressInformation">
			<summary>Gets the e-mail address of the group member.</summary>
			<returns>An EmailAddress object that contains the e-mail address of the group member.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GroupMember.Key">
			<summary>Gets the key field for the group member.</summary>
			<returns>The key field for the group member.
</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.GroupMember.Status">
			<summary>Gets the status of the group member.</summary>
			<returns>One of the MemberStatus enumeration values.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.GroupMemberCollection">
			<summary>Represents a group of contacts.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.#ctor">
			<summary>Initializes a new instance of the GroupMemberCollection class.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.Add(Microsoft.Exchange.WebServices.Data.GroupMember)">
			<summary>Adds a member to the group.</summary>
			<param name="member">The member to add to the group.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddContactEmailAddress(Microsoft.Exchange.WebServices.Data.Contact,Microsoft.Exchange.WebServices.Data.EmailAddressKey)">
			<summary>Adds a group member that is linked to a specific e-mail address for a contact.</summary>
			<param name="emailAddressKey">The e-mail address to link to.</param>
			<param name="contact">The contact to link to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddContactGroup(Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>Adds a member to a linked contact group.</summary>
			<param name="contactGroupId">The identifier of the contact group.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddDirectoryContact(System.String)">
			<summary>Adds a member that is linked to an Active Directory contact that is identified by the specified e-mail address.</summary>
			<param name="smtpAddress">The SMTP e-mail address of the Active Directory contact.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddDirectoryContact(System.String,System.String)">
			<summary>Adds a member that is linked to an Active Directory contact that is identified by the specified e-mail address and routing type.</summary>
			<param name="address">The e-mail address of the Active Directory contact.</param>
			<param name="routingType">The routing type for the Active Directory contact.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddDirectoryPublicFolder(System.String)">
			<summary>Adds a member that is linked to a mail-enabled public folder.</summary>
			<param name="smtpAddress">The SMTP e-mail address of the mail-enabled public folder.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddDirectoryUser(System.String)">
			<summary>Adds a member that is linked to an Active Directory user that is specified by SMTP address.</summary>
			<param name="smtpAddress">The SMTP address of the member.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddDirectoryUser(System.String,System.String)">
			<summary>Adds a member that is linked to an Active Directory user that is specified by e-mail address and routing type.</summary>
			<param name="address">The e-mail address of the user.</param>
			<param name="routingType">The routing type of the address.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddOneOff(System.String,System.String)">
			<summary>Adds a one-off member to the group with the specified display name and SMTP e-mail address.</summary>
			<param name="displayName">The member's display name.</param>
			<param name="smtpAddress">The member's SMTP e-mail address.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddOneOff(System.String,System.String,System.String)">
			<summary>Adds a one-off member to the group with the specified display name, e-mail address, and routing type.</summary>
			<param name="displayName">The member's display name.</param>
			<param name="routingType">The routing type of the address.</param>
			<param name="address">The member's e-mail address.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddPersonalContact(Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>Adds a member that is linked to a specific personal contact.</summary>
			<param name="contactId">The identifier of the contact to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddPersonalContact(Microsoft.Exchange.WebServices.Data.ItemId,System.String)">
			<summary>Adds a member that is linked to a specific personal contact and e-mail address.</summary>
			<param name="addressToLink">The e-mail address to use.</param>
			<param name="contactId">The identifier of the contact to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddPublicGroup(System.String)">
			<summary>Adds a member that is linked to a public group.</summary>
			<param name="smtpAddress">The SMTP e-mail address of the public group.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.GroupMember})">
			<summary>Adds multiple members to a group.</summary>
			<param name="members">The members to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.Clear">
			<summary>Removes all contacts from the group.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.Find(System.String)">
			<summary>Finds the member in the collection that has the specified key.</summary>
			<returns>A GroupMember object that contains the member that has the specified key.</returns>
			<param name="key">The key of the member to find.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.Remove(Microsoft.Exchange.WebServices.Data.GroupMember)">
			<summary>Removes the specified member from the collection.</summary>
			<returns>Returns true if the group member was removed from the collection; otherwise, returns false.</returns>
			<param name="member">The member to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.GroupMemberCollection.RemoveAt(System.Int32)">
			<summary>Removes the group member at the specified index.</summary>
			<param name="index">The index of the group member to remove.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.IdFormat">
			<summary>
            Defines supported Id formats in ConvertId operations.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.IdFormat.EntryId">
			<summary>
            The base64-encoded PR_ENTRYID property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.IdFormat.EwsId">
			<summary>
            The EWS Id format used in Exchange 2007 SP1 and above.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.IdFormat.EwsLegacyId">
			<summary>
            The EWS Id format used in Exchange 2007 RTM.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.IdFormat.HexEntryId">
			<summary>
            The hexadecimal representation  of the PR_ENTRYID property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.IdFormat.OwaId">
			<summary>
            The Outlook Web Access Id format.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.IdFormat.StoreId">
			<summary>
            The Store Id format.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.IFileAttachmentContentHandler">
			<summary>
            Defines a file attachment content handler. Application can implement IFileAttachmentContentHandler
            to provide a stream in which the content of file attachment should be written.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.IFileAttachmentContentHandler.GetOutputStream(System.String)">
			<summary>
            Provides a stream to which the content of the attachment with the specified Id should be written.
            </summary>
			<returns>A Stream to which the content of the attachment will be written.</returns>
			<param name="attachmentId">The Id of the attachment that is being loaded.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ImAddressDictionary">
			<summary>
            Represents a dictionary of Instant Messaging addresses.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ImAddressDictionary.TryGetValue(Microsoft.Exchange.WebServices.Data.ImAddressKey,System.String@)">
			<summary>
            Tries to get the IM address associated with the specified key.
            </summary>
			<returns>Returns true if the Dictionary contains an IM address associated with the specified key; otherwise, returns false.</returns>
			<param name="key">The key.</param>
			<param name="imAddress">When this method returns, contains the IM address associated with the specified key, if the key is found; otherwise, null. This parameter is passed uninitialized.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ImAddressDictionary.Item(Microsoft.Exchange.WebServices.Data.ImAddressKey)">
			<summary>
            Gets or sets the Instant Messaging address at the specified key.
            </summary>
			<returns>The Instant Messaging address at the specified key.</returns>
			<param name="key">The key of the Instant Messaging address to get or set.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ImAddressEntry">
			<summary>
            Represents an entry of an ImAddressDictionary.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ImAddressEntry.ImAddress">
			<summary>
            Gets or sets the Instant Messaging address of the entry.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ImAddressKey">
			<summary>
            Defines Instant Messaging address entries for a contact.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ImAddressKey.ImAddress1">
			<summary>
            The first Instant Messaging address.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ImAddressKey.ImAddress2">
			<summary>
            The second Instant Messaging address.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ImAddressKey.ImAddress3">
			<summary>
            The third Instant Messaging address.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ImpersonatedUserId">
			<summary>
            Represents an impersonated user Id.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ImpersonatedUserId.#ctor">
			<summary>
            Initializes a new instance of ConnectingId.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ImpersonatedUserId.#ctor(Microsoft.Exchange.WebServices.Data.ConnectingIdType,System.String)">
			<summary>
            Initializes a new instance of ConnectingId.
            </summary>
			<param name="id">The user Id.</param>
			<param name="idType">The type of this Id.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ImpersonatedUserId.Id">
			<summary>
            Gets or sets the user Id.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ImpersonatedUserId.IdType">
			<summary>
            Gets or sets the type of the Id.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Importance">
			<summary>
            Defines the importance of an item.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Importance.High">
			<summary>
            High importance.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Importance.Low">
			<summary>
            Low importance.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Importance.Normal">
			<summary>
            Normal importance.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition">
			<summary>
            Represents an indexed property definition.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition.Equals(System.Object)">
			<summary>
            Determines whether a given indexed property definition is equal to this indexed property definition.
            </summary>
			<returns>Returns true if the properties definitions define the same indexed property.</returns>
			<param name="obj">The object to check for equality.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition.GetHashCode">
			<summary>
            Serves as a hash function for a particular type.
            </summary>
			<returns>A hash code for the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition.op_Equality(Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition,Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition)">
			<summary>
            Determines whether two specified instances of IndexedPropertyDefinition are equal.
            </summary>
			<returns>Returns true if indexed property definitions are equal.</returns>
			<param name="idxPropDef1">First indexed property definition.</param>
			<param name="idxPropDef2">Second indexed property definition.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition.op_Inequality(Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition,Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition)">
			<summary>
            Determines whether two specified instances of IndexedPropertyDefinition are not equal.
            </summary>
			<returns>Returns true if indexed property definitions are equal.</returns>
			<param name="idxPropDef1">First indexed property definition.</param>
			<param name="idxPropDef2">Second indexed property definition.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.IndexedPropertyDefinition.Index">
			<summary>
            Gets the index of the property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.InternetMessageHeader">
			<summary>
            Represents an Internet message header.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.InternetMessageHeader.ToString">
			<summary>
            Obtains a string representation of the header.
            </summary>
			<returns>The string representation of the header.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.InternetMessageHeader.Name">
			<summary>
            The name of the header.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.InternetMessageHeader.Value">
			<summary>
            The value of the header.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.InternetMessageHeaderCollection">
			<summary>
            Represents a collection of Internet message headers.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.InternetMessageHeaderCollection.Find(System.String)">
			<summary>
            Find a specific header in the collection.
            </summary>
			<returns>An InternetMessageHeader representing the header with the specified name; null if no header with the specified name was found.</returns>
			<param name="name">The name of the header to locate.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ISearchStringProvider">
			<summary>
            Interface defined for types that can produce a string representation for use in search filters.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ISearchStringProvider.GetSearchString">
			<summary>
            Get a string representation for using this instance in a search filter.
            </summary>
			<returns>String representation of instance.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Item">
			<summary>Represents a generic item. Properties that are available on items are defined in the ItemSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>Binds to an existing item, whatever its actual type is, and loads its first class properties. Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>An instance of the Item class that represents the item that corresponds to the specified ID.</returns>
			<param name="service">The service to use to bind to the item.</param>
			<param name="id">The ID of the item to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>Binds to an existing item, whatever its actual type is, and loads the specified set of properties.
            Calling this method results in a call to Exchange Web Services (EWS).
            </summary>
			<returns>An instance of the Item class that represents the item that corresponds to the specified ID.</returns>
			<param name="service">The service to use to bind to the item.</param>
			<param name="id">The ID of the item to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Copy(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Creates a copy of this item in the specified folder. Calling this method results in a call to EWS.
            </summary>
			<param name="destinationFolderId">The Id of the folder in which to create a copy of this item.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Copy(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Creates a copy of this item in the specified folder. Calling this method results in a call to EWS.
            </summary>
			<param name="destinationFolderName">The name of the folder in which to create a copy of this item.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Delete(Microsoft.Exchange.WebServices.Data.DeleteMode)">
			<summary>
            Deletes the item. Calling this method results in a call to EWS.
            </summary>
			<param name="deleteMode">The deletion mode.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Move(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Moves this item to a the specified folder. Calling this method results in a call to EWS.
            </summary>
			<param name="destinationFolderId">The Id of the folder to which to move this item.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Move(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Moves this item to a the specified folder. Calling this method results in a call to EWS.
            </summary>
			<param name="destinationFolderName">The name of the folder to which to move this item.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.RemoveExtendedProperty(Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition)">
			<summary>
            Removes an extended property.
            </summary>
			<returns>Returns true if property was removed.</returns>
			<param name="extendedPropertyDefinition">The extended property definition.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Save">
			<summary>
            Saves this item in the default folder based on the item's type (for example, an e-mail message is saved to the Drafts folder).
            Calling this method results in at least one call to EWS. Mutliple calls to EWS might be made if attachments have been added.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Save(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Saves this item in a specific folder. Calling this method results in at least one call to EWS.
            Mutliple calls to EWS might be made if attachments have been added.
            </summary>
			<param name="parentFolderId">The Id of the folder in which to save this item.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Save(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Saves this item in a specific folder. Calling this method results in at least one call to EWS.
            Mutliple calls to EWS might be made if attachments have been added.
            </summary>
			<param name="parentFolderName">The name of the folder in which to save this item.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.SetExtendedProperty(Microsoft.Exchange.WebServices.Data.ExtendedPropertyDefinition,System.Object)">
			<summary>Sets the specified extended property to the specified value.</summary>
			<param name="value">The value to set on the extended property.</param>
			<param name="extendedPropertyDefinition">The extended property to set.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Item.Update(Microsoft.Exchange.WebServices.Data.ConflictResolutionMode)">
			<summary>
            Applies the local changes that have been made to this item. Calling this method results in at least one call to EWS.
            Mutliple calls to EWS might be made if attachments have been added or removed.
            </summary>
			<param name="conflictResolutionMode">The conflict resolution mode.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.AllowedResponseActions">
			<summary>
            Gets a value indicating which response actions are allowed on this item. Examples of response actions are Reply and Forward.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Attachments">
			<summary>
            Gets a list of the attachments to this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Body">
			<summary>
            Gets or sets the body of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Categories">
			<summary>
            Gets or sets the list of categories associated with this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.ConversationId">
			<summary>
            Gets the Id of the conversation this item is part of.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Culture">
			<summary>
            Gets or sets the culture associated with this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.DateTimeCreated">
			<summary>
            Gets the date and time this item was created.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.DateTimeReceived">
			<summary>
            Gets the time when this item was received.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.DateTimeSent">
			<summary>
            Gets the date and time this item was sent.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.DisplayCc">
			<summary>
            Gets a text value summarizing the Cc receipients of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.DisplayTo">
			<summary>
            Gets a text value summarizing the To recipients of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.EffectiveRights">
			<summary>
            Gets a value indicating the effective rights the current authenticated user has on this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.ExtendedProperties">
			<summary>
            Gets a list of extended properties defined on this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.HasAttachments">
			<summary>
            Gets a value indicating whether the item has attachments.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Id">
			<summary>
            Gets the Id of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Importance">
			<summary>
            Gets or sets the importance of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.InReplyTo">
			<summary>
            Gets or sets the In-Reply-To reference of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.InternetMessageHeaders">
			<summary>
            Gets a list of Internet headers for this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsAssociated">
			<summary>
            Gets a value indicating whether this is an associated item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsAttachment">
			<summary>
            Gets a value indicating whether the item is an attachment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsDraft">
			<summary>
            Gets a value indicating whether the item is is a draft. An item is a draft when it has not yet been sent.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsFromMe">
			<summary>
            Gets a value indicating whether the item has been sent by the current authenticated user.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsNew">
			<summary>
            Gets a value indicating whether this object is a real store item, or if it's a local object
            that has yet to be saved. 
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsReminderSet">
			<summary>
            Gets or sets a value indicating whether a reminder is set for this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsResend">
			<summary>
            Gets a value indicating whether the item is a resend of another item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsSubmitted">
			<summary>
            Gets a value indicating whether the message has been submitted to be sent.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.IsUnmodified">
			<summary>
            Gets a value indicating whether the item has been modified since it was created.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.ItemClass">
			<summary>
            Gets or sets the custom class name of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.LastModifiedName">
			<summary>
            Gets the name of the user who last modified this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.LastModifiedTime">
			<summary>
            Gets the date and time this item was last modified.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.MimeContent">
			<summary>
            Get the MIME content of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.ParentFolderId">
			<summary>
            Gets the Id of the parent folder of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.ReminderDueBy">
			<summary>
            Gets or sets the date and time when the reminder is due for this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.ReminderMinutesBeforeStart">
			<summary>
            Gets or sets the number of minutes before the start of this item when the reminder should be triggered.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Sensitivity">
			<summary>
            Gets the sensitivity of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Size">
			<summary>
            Gets the size of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.Subject">
			<summary>
            Gets or sets the subject of this item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.UniqueBody">
			<summary>
            Gets the body part that is unique to the conversation this item is part of.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.WebClientEditFormQueryString">
			<summary>
            Gets the query string that should be appended to the Exchange Web client URL to open this item using the appropriate edit form in a web browser.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Item.WebClientReadFormQueryString">
			<summary>
            Gets the query string that should be appended to the Exchange Web client URL to open this item using the appropriate read form in a web browser.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemAttachment">
			<summary>
            Represents an item attachment.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemAttachment.Load(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase})">
			<summary>
            Loads this attachment.
            </summary>
			<param name="additionalProperties">The optional additional properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemAttachment.Load(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase[])">
			<summary>
            Loads this attachment.
            </summary>
			<param name="additionalProperties">The optional additional properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemAttachment.Load(Microsoft.Exchange.WebServices.Data.BodyType,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase})">
			<summary>
            Loads this attachment.
            </summary>
			<param name="additionalProperties">The optional additional properties to load.</param>
			<param name="bodyType">The body type to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemAttachment.Load(Microsoft.Exchange.WebServices.Data.BodyType,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase[])">
			<summary>
            Loads this attachment.
            </summary>
			<param name="additionalProperties">The optional additional properties to load.</param>
			<param name="bodyType">The body type to load.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemAttachment.Item">
			<summary>
            Gets the item associated with the attachment.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemAttachment`1">
			<summary>
            Represents a strongly typed item attachment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemAttachment`1.Item">
			<summary>
            Gets the item associated with the attachment.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemChange">
			<summary>
            Represents a change on an item as returned by a synchronization operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemChange.IsRead">
			<summary>
            Gets the IsRead property for the item that the change applies to. IsRead is
            only valid when ChangeType is equal to ChangeType.ReadFlagChange.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemChange.Item">
			<summary>
            Gets the item the change applies to. Item is null when ChangeType is equal to
            either ChangeType.Delete or ChangeType.ReadFlagChange. In those cases, use the
            ItemId property to retrieve the Id of the item that was deleted or whose IsRead
            property changed.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemChange.ItemId">
			<summary>
            Gets the Id of the item the change applies to.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemCollection`1">
			<summary>
            Represents a collection of items.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemCollection`1.GetEnumerator">
			<summary>
            Gets an enumerator that iterates through the elements of the collection.
            </summary>
			<returns>An IEnumerator for the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemCollection`1.Count">
			<summary>
            Gets the total number of items in the collection.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemCollection`1.Item(System.Int32)">
			<summary>
            Gets the item at the specified index.
            </summary>
			<returns>The item at the specified index.</returns>
			<param name="index">The zero-based index of the item to get.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemEvent">
			<summary>Represents an event that applies to an item.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemEvent.ItemId">
			<summary>Gets or sets the identifier of the item that this event applies to.</summary>
			<returns>An ItemId object that identifies the item that this event applies to.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemEvent.OldItemId">
			<summary>Gets or sets the identifier of the original item that was moved or copied. </summary>
			<returns>An ItemId object that identifies the original item that this event applies to.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemGroup`1">
			<summary>
            Represents a group of items as returned by grouped item search operations.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemGroup`1.GroupIndex">
			<summary>
            Gets an index identifying the group.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemGroup`1.Items">
			<summary>
            Gets a collection of the items in this group.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemId">
			<summary>
            Represents the Id of an Exchange item.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemId.#ctor(System.String)">
			<summary>
            Initializes a new instance of ItemId.
            </summary>
			<param name="uniqueId">The unique Id used to initialize the ItemId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemId.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.ItemId">
			<summary>
            Defines an implicit conversion between string and ItemId.
            </summary>
			<returns>An ItemId initialized with the specified unique Id.</returns>
			<param name="uniqueId">The unique Id to convert to ItemId.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemSchema">
			<summary>
            Represents the schema for generic items.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.AllowedResponseActions">
			<summary>
            Defines the AllowedResponseActions property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Attachments">
			<summary>
            Defines the Attachments property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Body">
			<summary>
            Defines the Body property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Categories">
			<summary>
            Defines the Categories property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.ConversationId">
			<summary>
            Defines the ConversationId property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Culture">
			<summary>
            Defines the Culture property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.DateTimeCreated">
			<summary>
            Defines the DateTimeCreated property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.DateTimeReceived">
			<summary>
            Defines the DateTimeReceived property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.DateTimeSent">
			<summary>
            Defines the DateTimeSent property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.DisplayCc">
			<summary>
            Defines the DisplayCc property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.DisplayTo">
			<summary>
            Defines the DisplayTo property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.EffectiveRights">
			<summary>
            Defines the EffectiveRights property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.HasAttachments">
			<summary>
            Defines the HasAttachments property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Id">
			<summary>
            Defines the Id property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Importance">
			<summary>
            Defines the Importance property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.InReplyTo">
			<summary>
            Defines the InReplyTo property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.InternetMessageHeaders">
			<summary>
            Defines the InternetMessageHeaders property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.IsAssociated">
			<summary>
            Defines the IsAssociated property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.IsDraft">
			<summary>
            Defines the IsDraft property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.IsFromMe">
			<summary>
            Defines the IsFromMe property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.IsReminderSet">
			<summary>
            Defines the IsReminderSet property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.IsResend">
			<summary>
            Defines the IsResend property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.IsSubmitted">
			<summary>
            Defines the IsSubmitted property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.IsUnmodified">
			<summary>
            Defines the IsUnmodified property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.ItemClass">
			<summary>
            Defines the ItemClass property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.LastModifiedName">
			<summary>
            Defines the LastModifiedName property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.LastModifiedTime">
			<summary>
            Defines the LastModifiedTime property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.MimeContent">
			<summary>
            Defines the MimeContent property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.ParentFolderId">
			<summary>
            Defines the ParentFolderId property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.ReminderDueBy">
			<summary>
            Defines the ReminderDueBy property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.ReminderMinutesBeforeStart">
			<summary>
            Defines the ReminderMinutesBeforeStart property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Sensitivity">
			<summary>
            Defines the Sensitivity property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Size">
			<summary>
            Defines the Size property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.Subject">
			<summary>
            Defines the Subject property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.UniqueBody">
			<summary>
            Defines the UniqueBody property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.WebClientEditFormQueryString">
			<summary>
            Defines the WebClientEditFormQueryString property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemSchema.WebClientReadFormQueryString">
			<summary>
            Defines the WebClientReadFormQueryString property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemTraversal">
			<summary>
            Defines the scope of FindItems operations.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemTraversal.Associated">
			<summary>
            Only associated items are retrieved.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemTraversal.Shallow">
			<summary>
            All non deleted items in the specified folder are retrieved.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ItemTraversal.SoftDeleted">
			<summary>
            Only soft-deleted items are retrieved.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ItemView">
			<summary>
            Represents the view settings in a folder search operation.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemView.#ctor(System.Int32)">
			<summary>
        Initializes a new instance of the ItemView class.
      </summary>
			<param name="pageSize">The maximum number of elements the search operation should return.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemView.#ctor(System.Int32,System.Int32)">
			<summary>
        Initializes a new instance of the ItemView class.
      </summary>
			<param name="offset">The offset of the view from the base point.</param>
			<param name="pageSize">The maximum number of elements the search operation should return.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ItemView.#ctor(System.Int32,System.Int32,Microsoft.Exchange.WebServices.Data.OffsetBasePoint)">
			<summary>
        Initializes a new instance of the ItemView class.
      </summary>
			<param name="offset">The offset of the view from the base point.</param>
			<param name="pageSize">The maximum number of elements the search operation should return.</param>
			<param name="offsetBasePoint">The base point of the offset.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemView.OrderBy">
			<summary>
            Gets the properties against which the returned items should be ordered.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ItemView.Traversal">
			<summary>
            Gets or sets the search traversal mode. Defaults to ItemTraversal.Shallow.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ITraceListener">
			<summary>
            ITraceListener handles message tracing.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ITraceListener.Trace(System.String,System.String)">
			<summary>
            Handles a trace message.
            </summary>
			<param name="traceType">Type of trace message.</param>
			<param name="traceMessage">The trace message.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.LegacyFreeBusyStatus">
			<summary>
            Defines the legacy free/busy status associated with an appointment.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.LegacyFreeBusyStatus.Busy">
			<summary>
            The time slot associated with the appointment appears as busy.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.LegacyFreeBusyStatus.Free">
			<summary>
            The time slot associated with the appointment appears as free.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.LegacyFreeBusyStatus.NoData">
			<summary>
            No free/busy status is associated with the appointment.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.LegacyFreeBusyStatus.OOF">
			<summary>
            The time slot associated with the appointment appears as Out of Office.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.LegacyFreeBusyStatus.Tentative">
			<summary>
            The time slot associated with the appointment appears as tentative.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.LogicalOperator">
			<summary>
            Defines a logical operator as used by search filter collections.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.LogicalOperator.And">
			<summary>
            The AND operator.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.LogicalOperator.Or">
			<summary>
            The OR operator.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Mailbox">
			<summary>
            Represents a mailbox reference.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Mailbox.#ctor">
			<summary>
        Initializes a new instance of the Mailbox class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Mailbox.#ctor(System.String)">
			<summary>
        Initializes a new instance of the Mailbox class.
      </summary>
			<param name="smtpAddress">The primary SMTP address of the mailbox.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Mailbox.#ctor(System.String,System.String)">
			<summary>
        Initializes a new instance of the Mailbox class.
      </summary>
			<param name="address">The address used to reference the user mailbox.</param>
			<param name="routingType">The routing type of the address used to reference the user mailbox.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Mailbox.Equals(System.Object)">
			<summary>
        Determines whether the specified object is equal to the current Mailbox object.
      </summary>
			<returns>Returns true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, returns false.</returns>
			<param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
			<exception cref="T:System.NullReferenceException">The obj parameter is null.</exception>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Mailbox.GetHashCode">
			<summary>
            Serves as a hash function for a particular type.
            </summary>
			<returns>A hash code for the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Mailbox.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.Mailbox">
			<summary>
            Defines an implicit conversion between a string representing an SMTP address and Mailbox.
            </summary>
			<returns>A Mailbox initialized with the specified SMTP address.</returns>
			<param name="smtpAddress">The SMTP address to convert to EmailAddress.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Mailbox.ToString">
			<summary>
            Returns a String that represents the current Mailbox.
            </summary>
			<returns>A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Mailbox.Address">
			<summary>
            Gets or sets the address used to refer to the user mailbox.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Mailbox.IsValid">
			<summary>
            True if this instance is valid; otherthise false.
            </summary>
			<returns>Value is true if this instance is valid; otherwise, value is false.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Mailbox.RoutingType">
			<summary>
            Gets or sets the routing type of the address used to refer to the user mailbox.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MailboxType">
			<summary>Defines the type of an EmailAddress object.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MailboxType.Contact">
			<summary>
            The e-mail address represents a store contact or Active Directory mail contact.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MailboxType.ContactGroup">
			<summary>The e-mail address represents a group of contacts.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MailboxType.Mailbox">
			<summary>
            The e-mail address represents a mailbox.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MailboxType.OneOff">
			<summary>
            The e-mail address represents a one-off contact.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MailboxType.PublicFolder">
			<summary>
            The e-mail address represents a public folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MailboxType.PublicGroup">
			<summary>The e-mail address represents a public group.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MailboxType.Unknown">
			<summary>
            Unknown mailbox type.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation">
			<summary>
            Represents information for a managed folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.CanDelete">
			<summary>
            Gets a value indicating whether the user can delete objects in the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.CanRenameOrMove">
			<summary>
            Gets a value indicating whether the user can rename or move objects in the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.Comment">
			<summary>
            Gets the comment associated with the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.FolderSize">
			<summary>
            Gets the size of the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.HasQuota">
			<summary>
            Gets a value indicating whether the folder has a quota.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.HomePage">
			<summary>
            Gets the home page associated with the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.IsManagedFoldersRoot">
			<summary>
            Gets a value indicating whether the folder is the root of the managed folder hierarchy.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.ManagedFolderId">
			<summary>
            Gets the Managed Folder Id of the folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.MustDisplayComment">
			<summary>
            Gets a value indicating whether the client application must display the Comment property to the user.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ManagedFolderInformation.StorageQuota">
			<summary>
            Gets the storage quota of the folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MapiPropertyType">
			<summary>
            Defines the MAPI type of an extended property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.ApplicationTime">
			<summary>
            The property is of type ApplicationTime.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.ApplicationTimeArray">
			<summary>
            The property is of type ApplicationTimeArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Binary">
			<summary>
            The property is of type Binary.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.BinaryArray">
			<summary>
            The property is of type BinaryArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Boolean">
			<summary>
            The property is of type Boolean.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.CLSID">
			<summary>
            The property is of type CLSID.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.CLSIDArray">
			<summary>
            The property is of type CLSIDArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Currency">
			<summary>
            The property is of type Currency.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.CurrencyArray">
			<summary>
            The property is of type CurrencyArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Double">
			<summary>
            The property is of type Double.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.DoubleArray">
			<summary>
            The property is of type DoubleArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Error">
			<summary>
            The property is of type Error.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Float">
			<summary>
            The property is of type Float.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.FloatArray">
			<summary>
            The property is of type FloatArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Integer">
			<summary>
            The property is of type Integer.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.IntegerArray">
			<summary>
            The property is of type IntegerArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Long">
			<summary>
            The property is of type Long.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.LongArray">
			<summary>
            The property is of type LongArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Null">
			<summary>
            The property is of type Null.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Object">
			<summary>
            The property is of type Object.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.ObjectArray">
			<summary>
            The property is of type ObjectArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.Short">
			<summary>
            The property is of type Short.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.ShortArray">
			<summary>
            The property is of type ShortArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.String">
			<summary>
            The property is of type String.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.StringArray">
			<summary>
            The property is of type StringArray.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.SystemTime">
			<summary>
            The property is of type SystemTime.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MapiPropertyType.SystemTimeArray">
			<summary>
            The property is of type SystemTimeArray.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingAttendeeType">
			<summary>
            Defines the type of a meeting attendee.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingAttendeeType.Optional">
			<summary>
            The attendee is optional.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingAttendeeType.Organizer">
			<summary>
            The attendee is the organizer of the meeting.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingAttendeeType.Required">
			<summary>
            The attendee is required.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingAttendeeType.Resource">
			<summary>
            The attendee is a resource.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingAttendeeType.Room">
			<summary>
            The attendee is a room.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingCancellation">
			<summary>
            Represents a meeting cancellation message. Properties available on meeting messages are defined in the MeetingMessageSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingCancellation.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to an existing meeting cancellation message and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A MeetingCancellation instance representing the meeting cancellation message corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the meeting cancellation message.</param>
			<param name="id">The Id of the meeting cancellation message to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingCancellation.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing meeting cancellation message and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A MeetingCancellation instance representing the meeting cancellation message corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the meeting cancellation message.</param>
			<param name="id">The Id of the meeting cancellation message to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingCancellation.RemoveMeetingFromCalendar">
			<summary>
            Removes the meeting associated with the cancellation message from the user's calendar.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingMessage">
			<summary>
            Represents a meeting-related message. Properties available on meeting messages are defined in the MeetingMessageSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingMessage.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to an existing meeting message and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A MeetingMessage instance representing the meeting message corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the meeting message.</param>
			<param name="id">The Id of the meeting message to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingMessage.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing meeting message and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A MeetingMessage instance representing the meeting message corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the meeting message.</param>
			<param name="id">The Id of the meeting message to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingMessage.AssociatedAppointmentId">
			<summary>
            Gets the Id of the appointment associated with the meeting message.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingMessage.HasBeenProcessed">
			<summary>
             Gets a value indicating whether the meeting message has been processed by Exchange (i.e. Exchange has noted
             the arrival of a meeting request and has created the associated meeting item in the calendar).
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingMessage.ICalDateTimeStamp">
			<summary>
            Gets the ICalendar DateTimeStamp.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingMessage.ICalRecurrenceId">
			<summary>
            Gets the ICalendar RecurrenceId.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingMessage.ICalUid">
			<summary>
            Gets the ICalendar Uid.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingMessage.IsDelegated">
			<summary>
            Gets a value indicating whether the meeting message is delegated.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingMessage.IsOutOfDate">
			<summary>
            Gets a value indicating whether the meeting message is out of date.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingMessage.ResponseType">
			<summary>
            Gets the type of response the meeting message represents.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema">
			<summary>
            Represents the schema for meeting messages.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema.AssociatedAppointmentId">
			<summary>
            Defines the AssociatedAppointmentId property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema.HasBeenProcessed">
			<summary>
            Defines the HasBeenProcessed property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema.ICalDateTimeStamp">
			<summary>
            Defines the iCalendar DateTimeStamp property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema.ICalRecurrenceId">
			<summary>
            Defines the iCalendar RecurrenceId property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema.ICalUid">
			<summary>
            Defines the iCalendar Uid property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema.IsDelegated">
			<summary>
            Defines the IsDelegated property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema.IsOutOfDate">
			<summary>
            Defines the IsOutOfDate property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingMessageSchema.ResponseType">
			<summary>
            Defines the ResponseType property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingRequest">
			<summary>
            Represents a meeting request that an attendee can accept or decline. Properties available on meeting requests are defined in the MeetingRequestSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingRequest.Accept(System.Boolean)">
			<summary>
            Accepts the meeting. Calling this method results in a call to EWS. 
            </summary>
			<param name="sendResponse">Indicates whether to send a response to the organizer.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingRequest.AcceptTentatively(System.Boolean)">
			<summary>
            Tentatively accepts the meeting. Calling this method results in a call to EWS. 
            </summary>
			<param name="sendResponse">Indicates whether to send a response to the organizer.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingRequest.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to an existing meeting request and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A MeetingRequest instance representing the meeting request corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the meeting request.</param>
			<param name="id">The Id of the meeting request to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingRequest.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing meeting request and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A MeetingRequest instance representing the meeting request corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the meeting request.</param>
			<param name="id">The Id of the meeting request to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingRequest.CreateAcceptMessage(System.Boolean)">
			<summary>
            Creates a local meeting acceptance message that can be customized and sent.
            </summary>
			<returns>An AcceptMeetingInvitationMessage representing the meeting acceptance message.</returns>
			<param name="tentative">Specifies whether the meeting will be tentatively accepted.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingRequest.CreateDeclineMessage">
			<summary>
            Creates a local meeting declination message that can be customized and sent.
            </summary>
			<returns>A DeclineMeetingInvitation representing the meeting declination message.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingRequest.Decline(System.Boolean)">
			<summary>
            Declines the meeting invitation. Calling this method results in a call to EWS.
            </summary>
			<param name="sendResponse">Indicates whether to send a response to the organizer.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.AdjacentMeetingCount">
			<summary>
            Gets the number of calendar entries that are adjacent to this appointment in the authenticated user's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.AdjacentMeetings">
			<summary>
            Gets a list of meetings that conflict with this appointment in the authenticated user's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.AllowNewTimeProposal">
			<summary>
            Gets or sets a value indicating whether new time proposals are allowed for attendees of this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.AppointmentReplyTime">
			<summary>
            Gets the time when the attendee replied to the meeting request.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.AppointmentSequenceNumber">
			<summary>
            Gets the sequence number of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.AppointmentState">
			<summary>
            Gets the state of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.AppointmentType">
			<summary>
            Gets a value indicating the type of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.ConferenceType">
			<summary>
            Gets the type of conferencing that will be used during the meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.ConflictingMeetingCount">
			<summary>
            Gets the number of calendar entries that conflict with this appointment in the authenticated user's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.ConflictingMeetings">
			<summary>
            Gets a list of meetings that conflict with this appointment in the authenticated user's calendar.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.DeletedOccurrences">
			<summary>
            Gets a list of deleted occurrences for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.Duration">
			<summary>
            Gets the duration of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.End">
			<summary>
            Gets or sets the end time of the appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.EndTimeZone">
			<summary>
            Gets or sets time zone of the end property of this meeting request.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.FirstOccurrence">
			<summary>
            Gets an OccurrenceInfo identifying the first occurrence of this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.IntendedFreeBusyStatus">
			<summary>
            Gets the a value representing the intended free/busy status of the meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.IsAllDayEvent">
			<summary>
            Gets or sets a value indicating whether this appointment is an all day event.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.IsCancelled">
			<summary>
             Gets a value indicating whether the appointment has been cancelled.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.IsMeeting">
			<summary>
            Gets a value indicating whether the appointment is a meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.IsOnlineMeeting">
			<summary>
            Gets or sets a value indicating whether this is an online meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.IsRecurring">
			<summary>
             Gets a value indicating whether the appointment is recurring.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.LastOccurrence">
			<summary>
            Gets an OccurrenceInfo identifying the last occurrence of this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.LegacyFreeBusyStatus">
			<summary>
            Gets or sets a value indicating the free/busy status of the owner of this appointment. 
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.Location">
			<summary>
            Gets or sets the location of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.MeetingRequestType">
			<summary>
            Gets the type of this meeting request.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.MeetingRequestWasSent">
			<summary>
             Gets a value indicating whether the meeting request has already been sent.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.MeetingWorkspaceUrl">
			<summary>
            Gets or sets the URL of the meeting workspace. A meeting workspace is a shared Web site for planning meetings and tracking results.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.ModifiedOccurrences">
			<summary>
            Gets a list of modified occurrences for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.MyResponseType">
			<summary>
            Gets a value indicating what was the last response of the user that loaded this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.NetShowUrl">
			<summary>
            Gets or sets the URL of the Microsoft NetShow online meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.OptionalAttendees">
			<summary>
            Gets a list of optional attendeed for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.Organizer">
			<summary>
            Gets the organizer of this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.OriginalStart">
			<summary>
            Gets the original start time of this appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.Recurrence">
			<summary>
            Gets the recurrence pattern for this meeting request.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.RequiredAttendees">
			<summary>
            Gets a list of required attendees for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.Resources">
			<summary>
            Gets a list of resources for this meeting.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.Start">
			<summary>
            Gets or sets the start time of the appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.StartTimeZone">
			<summary>
            Gets or sets time zone of the start property of this meeting request.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.TimeZone">
			<summary>
            Gets the name of the time zone this appointment is defined in.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MeetingRequest.When">
			<summary>
            Gets a text value indicating when this appointment occurs. The text returned by When is localized using the Exchange Server culture or using the culture specified in the PreferredCulture property of the ExchangeService object this appointment is bound to.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema">
			<summary>
            Represents the schema for meeting requests.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.AdjacentMeetingCount">
			<summary>
            Defines the AdjacentMeetingCount property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.AdjacentMeetings">
			<summary>
            Defines the AdjacentMeetings property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.AllowNewTimeProposal">
			<summary>
            Defines the AllowNewTimeProposal property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.AppointmentReplyTime">
			<summary>
            Defines the AppointmentReplyTime property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.AppointmentSequenceNumber">
			<summary>
            Defines the AppointmentSequenceNumber property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.AppointmentState">
			<summary>
            Defines the AppointmentState property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.AppointmentType">
			<summary>
            Defines the AppointmentType property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.ConferenceType">
			<summary>
            Defines the ConferenceType property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.ConflictingMeetingCount">
			<summary>
            Defines the ConflictingMeetingCount property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.ConflictingMeetings">
			<summary>
            Defines the ConflictingMeetings property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.DeletedOccurrences">
			<summary>
            Defines the DeletedOccurrences property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.Duration">
			<summary>
            Defines the Duration property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.End">
			<summary>
            Defines the End property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.EndTimeZone">
			<summary>
            Defines the EndTimeZone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.FirstOccurrence">
			<summary>
            Defines the FirstOccurrence property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.IntendedFreeBusyStatus">
			<summary>
            Defines the IntendedFreeBusyStatus property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.IsAllDayEvent">
			<summary>
            Defines the IsAllDayEvent property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.IsCancelled">
			<summary>
            Defines the IsCancelled property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.IsMeeting">
			<summary>
            Defines the IsMeeting property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.IsOnlineMeeting">
			<summary>
            Defines the IsOnlineMeeting property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.IsRecurring">
			<summary>
            Defines the IsRecurring property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.LastOccurrence">
			<summary>
            Defines the LastOccurrence property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.LegacyFreeBusyStatus">
			<summary>
            Defines the LegacyFreeBusyStatus property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.Location">
			<summary>
            Defines the Location property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.MeetingRequestType">
			<summary>
            Defines the MeetingRequestType property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.MeetingRequestWasSent">
			<summary>
            Defines the MeetingRequestWasSent property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.MeetingWorkspaceUrl">
			<summary>
            Defines the MeetingWorkspaceUrl property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.ModifiedOccurrences">
			<summary>
            Defines the ModifiedOccurrences property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.MyResponseType">
			<summary>
            Defines the MyResponseType property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.NetShowUrl">
			<summary>
            Defines the NetShowUrl property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.OptionalAttendees">
			<summary>
            Defines the OptionalAttendees property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.Organizer">
			<summary>
            Defines the Organizer property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.OriginalStart">
			<summary>
            Defines the OriginalStart property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.Recurrence">
			<summary>
            Defines the Recurrence property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.RequiredAttendees">
			<summary>
            Defines the RequiredAttendees property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.Resources">
			<summary>
            Defines the Resources property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.Start">
			<summary>
            Defines the Start property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.StartTimeZone">
			<summary>
            Defines the StartTimeZone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.TimeZone">
			<summary>
            Defines the TimeZone property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestSchema.When">
			<summary>
            Defines the When property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingRequestsDeliveryScope">
			<summary>
            Defines how meeting requests are sent to delegates.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestsDeliveryScope.DelegatesAndMe">
			<summary>
            Meeting requests are sent to delegates and to the owner of the mailbox.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestsDeliveryScope.DelegatesAndSendInformationToMe">
			<summary>
            Meeting requests are sent to delegates and informational messages are sent to the owner of the mailbox.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestsDeliveryScope.DelegatesOnly">
			<summary>
            Meeting requests are sent to delegates only.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingRequestType">
			<summary>Defines the type of a meeting request.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestType.FullUpdate">
			<summary>
            The meeting request is an update to the original meeting.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestType.InformationalUpdate">
			<summary>
            The meeting request is an information update.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestType.NewMeetingRequest">
			<summary>
            The meeting request is for a new meeting.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestType.None">
			<summary>The meeting request type is not defined.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestType.Outdated">
			<summary>
            The meeting request is outdated.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestType.PrincipalWantsCopy">
			<summary>The meeting request was forwarded to a delegate, and this copy is informational.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingRequestType.SilentUpdate">
			<summary>
            The meeting request is a silent update to an existing meeting.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingResponse">
			<summary>
            Represents a response to a meeting request. Properties available on meeting messages are defined in the MeetingMessageSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingResponse.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to an existing meeting response and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A MeetingResponse instance representing the meeting response corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the meeting response.</param>
			<param name="id">The Id of the meeting response to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MeetingResponse.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing meeting response and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A MeetingResponse instance representing the meeting response corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the meeting response.</param>
			<param name="id">The Id of the meeting response to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MeetingResponseType">
			<summary>
            Defines the types of response given to a meeting request.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingResponseType.Accept">
			<summary>
            The meeting was accepted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingResponseType.Decline">
			<summary>
            The meeting was declined.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingResponseType.NoResponseReceived">
			<summary>
            No response was received for the meeting.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingResponseType.Organizer">
			<summary>
            There was no response. The authenticated is the organizer of the meeting.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingResponseType.Tentative">
			<summary>
            The meeting was tentatively accepted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MeetingResponseType.Unknown">
			<summary>
            The response type is inknown.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MemberStatus">
			<summary>
            Defines the status of distribution list members.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MemberStatus.Demoted">
			<summary>
            The member is demoted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MemberStatus.Normal">
			<summary>
            The member is normal.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MemberStatus.Unrecognized">
			<summary>
            The member is unrecognized.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MessageBody">
			<summary>
            Represents the body of a message.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MessageBody.#ctor">
			<summary>
        Initializes a new instance of the MessageBody class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MessageBody.#ctor(System.String)">
			<summary>
        Initializes a new instance of the MessageBody class.
      </summary>
			<param name="text">The text of the message body, assumed to be plain text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MessageBody.#ctor(Microsoft.Exchange.WebServices.Data.BodyType,System.String)">
			<summary>
        Initializes a new instance of the MessageBody class.
      </summary>
			<param name="bodyType">The type of the message body's text.</param>
			<param name="text">The text of the message body.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MessageBody.op_Implicit(Microsoft.Exchange.WebServices.Data.MessageBody)~System.String">
			<summary>
            Defines an implicit conversion of MessageBody into a string.
            </summary>
			<returns>A string containing the text of the MessageBody.</returns>
			<param name="messageBody">The MessageBody to convert to a string.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MessageBody.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.MessageBody">
			<summary>
            Defines an implicit conversation between a string and MessageBody.
            </summary>
			<returns>A MessageBody initialized with the specified string.</returns>
			<param name="textBody">The string to convert to MessageBody.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MessageBody.ToString">
			<summary>
            Returns a String that represents the current MessageBody.
            </summary>
			<returns>A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MessageBody.BodyType">
			<summary>
            Gets or sets the type of the message body's text.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MessageBody.Text">
			<summary>
            Gets or sets the text of the message body.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MessageDisposition">
			<summary>
            Defines how messages are disposed of in CreateItem and UpdateItem operations.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MessageDisposition.SaveOnly">
			<summary>
            Messages are saved but not sent.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MessageDisposition.SendAndSaveCopy">
			<summary>
            Messages are sent and a copy is saved.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.MessageDisposition.SendOnly">
			<summary>
            Messages are sent but no copy is saved.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MimeContent">
			<summary>
            Represents the MIME content of an item.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MimeContent.#ctor">
			<summary>
        Initializes a new instance of the MimeContent class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MimeContent.#ctor(System.String,System.Byte[])">
			<summary>
        Initializes a new instance of the MimeContent class.
      </summary>
			<param name="content">The content.</param>
			<param name="characterSet">The character set of the content.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.MimeContent.ToString">
			<summary>
            Returns a String that represents the current MimeContent.
            </summary>
			<returns>A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MimeContent.CharacterSet">
			<summary>
            Gets or sets the character set of the content.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MimeContent.Content">
			<summary>
            Gets or sets the content.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Month">
			<summary>
            Defines months of the year.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.April">
			<summary>
            April.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.August">
			<summary>
            August.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.December">
			<summary>
            December.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.February">
			<summary>
            February.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.January">
			<summary>
            January.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.July">
			<summary>
            July.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.June">
			<summary>
            June.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.March">
			<summary>
            March.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.May">
			<summary>
            May.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.November">
			<summary>
            November.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.October">
			<summary>
            October.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Month.September">
			<summary>
            September.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MoveCopyFolderResponse">
			<summary>
            Represents the base response class for individual folder move and copy operations.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MoveCopyFolderResponse.Folder">
			<summary>
            Gets the new (moved or copied) folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.MoveCopyItemResponse">
			<summary>Represents a response to a move or copy operation.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.MoveCopyItemResponse.Item">
			<summary>Gets the copied or moved item.</summary>
			<returns>An Item object that contains the moved or copied item.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.NameResolution">
			<summary>
            Represents a suggested name resolution.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NameResolution.Contact">
			<summary>
            Gets the contact information of the suggested resolved name. This property is only available when
            ResolveName is called with returnContactDetails = true.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NameResolution.Mailbox">
			<summary>
            Gets the mailbox of the suggested resolved name.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.NameResolutionCollection">
			<summary>
            Represents a list of suggested name resolutions.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.NameResolutionCollection.GetEnumerator">
			<summary>
            Gets an enumerator that iterates through the elements of the collection.
            </summary>
			<returns>An IEnumerator for the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NameResolutionCollection.Count">
			<summary>
            Gets the total number of elements in the list.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NameResolutionCollection.IncludesAllResolutions">
			<summary>
            Gets a value indicating whether more suggested resolutions are available. ResolveName only returns
            a maximum of 100 name resolutions. When IncludesAllResolutions is false, there were more than 100
            matching names on the server. To narrow the search, provide a more precise name to ResolveName.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NameResolutionCollection.Item(System.Int32)">
			<summary>
            Gets the name resolution at the specified index.
            </summary>
			<returns>The name resolution at the speicfied index.</returns>
			<param name="index">The index of the name resolution to get.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.NotificationEvent">
			<summary>Represents an event that is exposed by push and pull notifications.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NotificationEvent.EventType">
			<summary>Gets the type of the event.</summary>
			<returns>One of the EventType enumeration values.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NotificationEvent.OldParentFolderId">
			<summary>Gets the identifier of the old parent folder of the item or folder that this event applies to.</summary>
			<returns>A FolderId object that identifies the old parent folder of the item or folder that this event applies to.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NotificationEvent.ParentFolderId">
			<summary>Gets the parent folder identifier for the parent folder of the item or folder that this event applies to.</summary>
			<returns>A FolderId object that contains the parent folder identifier for the parent folder of the item or folder that this event applies to.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.NotificationEvent.TimeStamp">
			<summary>Gets a time stamp for the event.</summary>
			<returns>A <see cref="T:System.DateTime"></see> object that contains the date and time that the event occurred.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.OccurrenceInfo">
			<summary>
            Encapsulates information on the occurrence of a recurring appointment.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OccurrenceInfo.End">
			<summary>
            Gets the end date and time of the occurrence.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OccurrenceInfo.ItemId">
			<summary>
            Gets the Id of the occurrence.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OccurrenceInfo.OriginalStart">
			<summary>
            Gets the original start date and time of the occurrence.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OccurrenceInfo.Start">
			<summary>
            Gets the start date and time of the occurrence.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.OccurrenceInfoCollection">
			<summary>
            Represents a collection of OccurrenceInfo objects.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.OffsetBasePoint">
			<summary>
            Defines the offset's base point in a paged view.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.OffsetBasePoint.Beginning">
			<summary>
            The offset is from the beginning of the view.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.OffsetBasePoint.End">
			<summary>
            The offset is from the end of the view.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.OofExternalAudience">
			<summary>
            Defines the external audience of an Out of Office notification.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.OofExternalAudience.All">
			<summary>
            All recipients should receive Out of Office notifications.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.OofExternalAudience.Known">
			<summary>
            Only recipients that are in the user's Contacts frolder should receive Out of Office notifications.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.OofExternalAudience.None">
			<summary>
            No external recipients should receive Out of Office notifications.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.OofReply">
			<summary>Represents an Out of Office (OOF) response.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OofReply.#ctor">
			<summary>Initializes a new instance of the OofReply class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OofReply.#ctor(System.String)">
			<summary>Initializes a new instance of the OofReply class with the specified message.</summary>
			<param name="message">The reply message.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OofReply.op_Implicit(Microsoft.Exchange.WebServices.Data.OofReply)~System.String">
			<summary>Defines an implicit conversion between an OofReply object and a string.
            </summary>
			<returns>A string that contains the message of the specified OofReply object.</returns>
			<param name="oofReply">The OofReply object to convert into a string.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OofReply.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.OofReply">
			<summary>Defines an implicit conversion between a string and an OofReply object. </summary>
			<returns>An OofReply object that is initialized with the specified message.</returns>
			<param name="message">The message to convert into an OofReply object.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OofReply.ToString">
			<summary>Obtains a string representation of the reply.
            </summary>
			<returns>A string that contains the reply message.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OofReply.Culture">
			<summary>Gets or sets the culture of the reply.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OofReply.Message">
			<summary>Gets or sets the reply message.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.OofSettings">
			<summary>
            Represents a user's Out of Office (OOF) settings.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OofSettings.#ctor">
			<summary>
            Initializes a new instance of OofSettings.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OofSettings.AllowExternalOof">
			<summary>
            Gets a value indicating the authorized external OOF notifications.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OofSettings.Duration">
			<summary>
            Gets or sets the duration of the OOF status when State is set to OofState.Scheduled.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OofSettings.ExternalAudience">
			<summary>
            Gets or sets a value indicating who should receive external OOF messages.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OofSettings.ExternalReply">
			<summary>
            Gets or sets the OOF response sent to addresses outside the user's domain or trusted domain.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OofSettings.InternalReply">
			<summary>
            Gets or sets the OOF response sent other users in the user's domain or trusted domain.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OofSettings.State">
			<summary>
            Gets or sets the user's OOF state.
            </summary>
			<returns>The user's OOF state.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.OofState">
			<summary>
            Defines a user's Out of Office Assistant status.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.OofState.Disabled">
			<summary>
            The assistant is diabled.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.OofState.Enabled">
			<summary>
            The assistant is enabled.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.OofState.Scheduled">
			<summary>
            The assistant is scheduled.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.OrderByCollection">
			<summary>Represents an ordered collection of property definitions that are qualified with a sort direction.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OrderByCollection.Add(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.SortDirection)">
			<summary>Adds the specified property definition/sort direction pair to the collection.</summary>
			<param name="propertyDefinition">The property definition.</param>
			<param name="sortDirection">One of the SortDirection enumeration values.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OrderByCollection.Clear">
			<summary>Removes all elements from the collection.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OrderByCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through the collection.</summary>
			<returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"></see> instance that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OrderByCollection.Remove(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>Removes the specified property definition from the collection.</summary>
			<returns>Returns true if the property definition was removed; otherwise, returns false.</returns>
			<param name="propertyDefinition">The property definition to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OrderByCollection.RemoveAt(System.Int32)">
			<summary>Removes the property definition at the specified index from the collection.</summary>
			<param name="index">The index of the property definition to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.OrderByCollection.TryGetValue(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.SortDirection@)">
			<summary>Tries to get the specified property definition from the collection.</summary>
			<returns>Returns true if the property definition sort order is returned; otherwise, returns false.</returns>
			<param name="propertyDefinition">The property definition to get.</param>
			<param name="sortDirection">The sort direction for the property. If the property definition is not found, this parameter is null. This property is passed uninitialized.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OrderByCollection.Count">
			<summary>Gets the number of items in the collection.</summary>
			<returns>An number representing the number of items in the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.OrderByCollection.Item(System.Int32)">
			<summary>Gets the element at the specified index in the collection.</summary>
			<returns>The property definition and sort order at the specified index in the collection.</returns>
			<param name="index">The index of the property definition to return.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PagedView">
			<summary>Represents a view setting that support paging in a search operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PagedView.Offset">
			<summary>
            Gets or sets the offset.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PagedView.OffsetBasePoint">
			<summary>
            Gets or sets the base point of the offset.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PagedView.PageSize">
			<summary>
            The maximum number of items or folders the search operation should return.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PermissionScope">
			<summary>
            Defines the scope of a user's permission on a folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PermissionScope.All">
			<summary>
            The user has the associated permission on all items.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PermissionScope.None">
			<summary>
            The user does not have the associated permission.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PermissionScope.Owned">
			<summary>
            The user has the associated permission on items that it owns.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhoneCall">
			<summary>
            Represents a phone call.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PhoneCall.Disconnect">
			<summary>
            Disconnects this phone call.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PhoneCall.Refresh">
			<summary>
            Refreshes the state of this phone call.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhoneCall.ConnectionFailureCause">
			<summary>
            Gets a value indicating the reason why this phone call failed to connect.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhoneCall.SIPResponseCode">
			<summary>
            Gets the SIP response code of this phone call.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhoneCall.SIPResponseText">
			<summary>
            Gets the SIP response text of this phone call.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhoneCall.State">
			<summary>
            Gets a value indicating the last known state of this phone call.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhoneCallState">
			<summary>
            The PhoneCallState enumeration.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneCallState.Alerted">
			<summary>
            Alerted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneCallState.Connected">
			<summary>
            Connected.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneCallState.Connecting">
			<summary>
            Connecting.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneCallState.Disconnected">
			<summary>
            Disconnected.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneCallState.Forwarding">
			<summary>
            Forwarding.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneCallState.Idle">
			<summary>
            Idle.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneCallState.Incoming">
			<summary>
            Incoming.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneCallState.Transferring">
			<summary>
            Transferring.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhoneNumberDictionary">
			<summary>
            Represents a dictionary of phone numbers.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PhoneNumberDictionary.TryGetValue(Microsoft.Exchange.WebServices.Data.PhoneNumberKey,System.String@)">
			<summary>
            Tries to get the phone number associated with the specified key.
            </summary>
			<returns>Returns true if the Dictionary contains a phone number associated with the specified key; otherwise, returns false.</returns>
			<param name="key">The key.</param>
			<param name="phoneNumber">When this method returns, contains the phone number associated with the specified key, if the key is found; otherwise, null. This parameter is passed uninitialized.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhoneNumberDictionary.Item(Microsoft.Exchange.WebServices.Data.PhoneNumberKey)">
			<summary>
            Gets or sets the phone number at the specified key.
            </summary>
			<returns>The phone number at the specified key.</returns>
			<param name="key">The key of the phone number to get or set.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhoneNumberEntry">
			<summary>
            Represents an entry of a PhoneNumberDictionary.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhoneNumberEntry.PhoneNumber">
			<summary>
            Gets or sets the phone number of the entry.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhoneNumberKey">
			<summary>
            Defines phone number entries for a contact.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.AssistantPhone">
			<summary>
            The assistant's phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.BusinessFax">
			<summary>
            The business fax number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.BusinessPhone">
			<summary>
            The business phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.BusinessPhone2">
			<summary>
            The second business phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.Callback">
			<summary>
            The callback number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.CarPhone">
			<summary>
            The car phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.CompanyMainPhone">
			<summary>
            The company's main phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.HomeFax">
			<summary>
            The home fax number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.HomePhone">
			<summary>
            The home phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.HomePhone2">
			<summary>
            The second home phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.Isdn">
			<summary>
            The ISDN number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.MobilePhone">
			<summary>
            The mobile phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.OtherFax">
			<summary>
            An alternate fax number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.OtherTelephone">
			<summary>
            An alternate phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.Pager">
			<summary>
            The pager number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.PrimaryPhone">
			<summary>
            The primary phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.RadioPhone">
			<summary>
            The radio phone number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.Telex">
			<summary>
            The Telex number.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhoneNumberKey.TtyTddPhone">
			<summary>
            The TTY/TTD phone number.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhysicalAddressDictionary">
			<summary>
            Represents a dictionary of physical addresses.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PhysicalAddressDictionary.TryGetValue(Microsoft.Exchange.WebServices.Data.PhysicalAddressKey,Microsoft.Exchange.WebServices.Data.PhysicalAddressEntry@)">
			<summary>
            Tries to get the physical address associated with the specified key.
            </summary>
			<returns>Returns true if the Dictionary contains a physical address associated with the specified key; otherwise, returns false.</returns>
			<param name="key">The key.</param>
			<param name="physicalAddress">When this method returns, contains the physical address associated with the specified key, if the key is found; otherwise, null. This parameter is passed uninitialized.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhysicalAddressDictionary.Item(Microsoft.Exchange.WebServices.Data.PhysicalAddressKey)">
			<summary>
            Gets or sets the physical address at the specified key.
            </summary>
			<returns>The physical address at the specified key.</returns>
			<param name="key">The key of the physical address to get or set.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhysicalAddressEntry">
			<summary>
            Represents an entry of an PhysicalAddressDictionary.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PhysicalAddressEntry.#ctor">
			<summary>
            Initializes a new instance of PhysicalAddressEntry
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhysicalAddressEntry.City">
			<summary>
            Gets or sets the city.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhysicalAddressEntry.CountryOrRegion">
			<summary>
            Gets or sets the country or region.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhysicalAddressEntry.PostalCode">
			<summary>
            Gets or sets the postal code.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhysicalAddressEntry.State">
			<summary>
            Gets or sets the state.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PhysicalAddressEntry.Street">
			<summary>
            Gets or sets the street.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhysicalAddressIndex">
			<summary>
            Defines a physical address index.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhysicalAddressIndex.Business">
			<summary>
            The business address.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhysicalAddressIndex.Home">
			<summary>
            The home address.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhysicalAddressIndex.None">
			<summary>
            None.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhysicalAddressIndex.Other">
			<summary>
            The alternate address.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PhysicalAddressKey">
			<summary>
            Defines physical address entries for a contact.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhysicalAddressKey.Business">
			<summary>
            The business address.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhysicalAddressKey.Home">
			<summary>
            The home address.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PhysicalAddressKey.Other">
			<summary>
            An alternate address.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PostItem">
			<summary>
            Represents a post item. Properties available on post items are defined in the PostItemSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>
            Initializes an unsaved local instance of the PostItem class. To bind to an existing post item, use PostItem.Bind() instead.
            </summary>
			<param name="service">The ExchangeService object to which the e-mail message will be bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to an existing post item and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A PostItem instance representing the post item corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the post item.</param>
			<param name="id">The Id of the post item to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing post item and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>An PostItem instance representing the post item corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the post item.</param>
			<param name="id">The Id of the post item to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.CreateForward">
			<summary>
            Creates a forward response to the post item.
            </summary>
			<returns>A ResponseMessage representing the forward response that can subsequently be modified and sent.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.CreatePostReply">
			<summary>
            Creates a post reply to this post item.
            </summary>
			<returns>A PostReply that can be modified and saved.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.CreateReply(System.Boolean)">
			<summary>
            Creates a e-mail reply response to the post item.
            </summary>
			<returns>A ResponseMessage representing the e-mail reply response that can subsequently be modified and sent.</returns>
			<param name="replyAll">Indicates whether the reply should go to everyone involved in the thread.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.Forward(Microsoft.Exchange.WebServices.Data.MessageBody,Microsoft.Exchange.WebServices.Data.EmailAddress[])">
			<summary>
            Forwards the post item. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the original body of the post item.</param>
			<param name="toRecipients">The recipients to forward the post item to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.Forward(Microsoft.Exchange.WebServices.Data.MessageBody,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.EmailAddress})">
			<summary>
            Forwards the post item. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the original body of the post item.</param>
			<param name="toRecipients">The recipients to forward the post item to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.PostReply(Microsoft.Exchange.WebServices.Data.MessageBody)">
			<summary>
            Posts a reply to this post item. Calling this method results in a call to EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostItem.Reply(Microsoft.Exchange.WebServices.Data.MessageBody,System.Boolean)">
			<summary>
            Replies to the post item. Calling this method results in a call to EWS.
            </summary>
			<param name="bodyPrefix">The prefix to prepend to the original body of the post item.</param>
			<param name="replyAll">Indicates whether the reply should be sent to everyone involved in the thread.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostItem.ConversationIndex">
			<summary>
            Gets the conversation index of the post item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostItem.ConversationTopic">
			<summary>
            Gets the conversation topic of the post item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostItem.From">
			<summary>
            Gets or sets the "on behalf" poster of the post item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostItem.InternetMessageId">
			<summary>
            Gets the Internet message Id of the post item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostItem.IsRead">
			<summary>
            Gets or sets a value indicating whether the post item is read.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostItem.PostedTime">
			<summary>
            Gets the the date and time when the post item was posted.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostItem.References">
			<summary>
            Gets or sets the references of the post item.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostItem.Sender">
			<summary>
            Gets or sets the sender (poster) of the post item.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PostItemSchema">
			<summary>
            Represents the schema for post items.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PostItemSchema.ConversationIndex">
			<summary>
            Defines the ConversationIndex property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PostItemSchema.ConversationTopic">
			<summary>
            Defines the ConversationTopic property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PostItemSchema.From">
			<summary>
            Defines the From property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PostItemSchema.InternetMessageId">
			<summary>
            Defines the InternetMessageId property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PostItemSchema.IsRead">
			<summary>
            Defines the IsRead property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PostItemSchema.PostedTime">
			<summary>
            Defines the PostedTime property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PostItemSchema.References">
			<summary>
            Defines the References property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PostItemSchema.Sender">
			<summary>
            Defines the Sender property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PostReply">
			<summary>
            Represents a reply to a post item.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostReply.Save">
			<summary>
            Saves the post reply in the same folder as the original post item. Calling this method results in a call to EWS.
            </summary>
			<returns>A PostItem representing the posted reply.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostReply.Save(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Saves the post reply in the specified folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A PostItem representing the posted reply.</returns>
			<param name="destinationFolderId">The Id of the folder in which to save the post reply.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PostReply.Save(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Saves the post reply in a specified folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A PostItem representing the posted reply.</returns>
			<param name="destinationFolderName">The name of the folder in which to save the post reply.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostReply.Body">
			<summary>
            Gets or sets the body of the post reply.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostReply.BodyPrefix">
			<summary>
            Gets or sets the body prefix that should be prepended to the original post item's body.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PostReply.Subject">
			<summary>
            Gets or sets the subject of the post reply.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PropertyDefinition">
			<summary>
            Represents the definition of a folder or item property.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PropertyDefinition.Name">
			<summary>
            Gets the name of the property.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PropertyDefinition.Version">
			<summary>
            Gets the version.
            </summary>
			<returns>The version.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase">
			<summary>
            Represents the base class for all property definitions.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase.ToString">
			<summary>
            Returns a String that represents the current PropertyDefinitionBase.
            </summary>
			<returns>A <see cref="T:System.String"></see>that represents the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase.Version">
			<summary>
            Gets the version.
            </summary>
			<returns>The version.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PropertyException">
			<summary>
            Represents an error that occurs when an operation on a property fails.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertyException.#ctor(System.String)">
			<summary>
            PropertyException constructor.
            </summary>
			<param name="name">The name of the property that is at the origin of the exception.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertyException.#ctor(System.String,System.String)">
			<summary>
            PropertyException Constructor.
            </summary>
			<param name="name">The name of the property that is at the origin of the exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertyException.#ctor(System.String,System.String,System.Exception)">
			<summary>
            PropertyException Constructor.
            </summary>
			<param name="name">The name of the property that is at the origin of the exception.</param>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PropertyException.Name">
			<summary>
            Gets the name of the property that caused the exception.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PropertySet">
			<summary>
            Represents a set of item or folder properties. Property sets are used to indicate what properties of an item or
            folder should be loaded when binding to an existing item or folder or when loading an item or folder's properties.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.#ctor">
			<summary>
            Initializes a new instance of PropertySet based upon BasePropertySet.IdOnly.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.#ctor(Microsoft.Exchange.WebServices.Data.BasePropertySet)">
			<summary>
            Initializes a new instance of PropertySet.
            </summary>
			<param name="basePropertySet">The base property set to base the property set upon.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase})">
			<summary>
            Initializes a new instance of PropertySet based upon BasePropertySet.IdOnly.
            </summary>
			<param name="additionalProperties">Additional properties to include in the property set. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase[])">
			<summary>
            Initializes a new instance of PropertySet based upon BasePropertySet.IdOnly.
            </summary>
			<param name="additionalProperties">Additional properties to include in the property set. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.#ctor(Microsoft.Exchange.WebServices.Data.BasePropertySet,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase})">
			<summary>
            Initializes a new instance of PropertySet.
            </summary>
			<param name="additionalProperties">Additional properties to include in the property set. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="basePropertySet">The base property set to base the property set upon.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.#ctor(Microsoft.Exchange.WebServices.Data.BasePropertySet,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase[])">
			<summary>
            Initializes a new instance of PropertySet.
            </summary>
			<param name="additionalProperties">Additional properties to include in the property set. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="basePropertySet">The base property set to base the property set upon.</param>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PropertySet.FirstClassProperties">
			<summary>
            Returns a predefined property set that includes the first class properties of an item or folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.PropertySet.IdOnly">
			<summary>
            Returns a predefined property set that only includes the Id property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.Add(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
            Adds the specified property to the property set.
            </summary>
			<param name="property">The property to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase})">
			<summary>
            Adds the specified properties to the property set.
            </summary>
			<param name="properties">The properties to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.Clear">
			<summary>
            Remove all explicitly added properties from the property set.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.Contains(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
            Determines whether the specified property has been explicitly added to this property set using the Add or AddRange methods.
            </summary>
			<returns>Returns true if this property set contains the specified property; otherwise, returns false.</returns>
			<param name="property">The property.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.GetEnumerator">
			<summary>
            Returns an enumerator that iterates through the collection.
            </summary>
			<returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.op_Implicit(Microsoft.Exchange.WebServices.Data.BasePropertySet)~Microsoft.Exchange.WebServices.Data.PropertySet">
			<summary>
            Implements an implicit conversion between PropertySet and BasePropertySet.
            </summary>
			<returns>A PropertySet instance based on the specified base property set.</returns>
			<param name="basePropertySet">The BasePropertySet value to convert from.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PropertySet.Remove(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
            Removes the specified property from the set.
            </summary>
			<returns>Returns true if the property was successfully removed; otherwise, returns false.</returns>
			<param name="property">The property to remove.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PropertySet.BasePropertySet">
			<summary>
            Gets or sets the base property set the property set is based upon.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PropertySet.Count">
			<summary>
            Gets the number of explicitly added properties in this set.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PropertySet.FilterHtmlContent">
			<summary>
            Gets or sets value indicating whether or not to filter potentially unsafe HTML content from message bodies.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PropertySet.RequestedBodyType">
			<summary>
            Gets or sets type of body that should be loaded on items. If RequestedBodyType is null, body is returned as HTML if available, plain text otherwise.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PullSubscription">
			<summary>Represents a pull subscription.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PullSubscription.GetEvents">
			<summary>Obtains a collection of events that occurred on the subscribed folders since the point in time that is defined by the Watermark property. When GetEvents succeeds, the Watermark property is updated.
            </summary>
			<returns>A collection of events that occurred since the last watermark.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.PullSubscription.Unsubscribe">
			<summary>Unsubscribes from the pull subscription.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.PullSubscription.MoreEventsAvailable">
			<summary>Gets a value that indicates whether more events are available on the server.</summary>
			<returns>Value is true if more events are available; otherwise, value is false.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.PushSubscription">
			<summary>
            Represents a push subscriptions.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence">
			<summary>
            Represents a recurrence pattern, as used by Appointment and Task items.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.NeverEnds">
			<summary>
            Sets up this recurrence so that it never ends. Calling NeverEnds is equivalent to setting both NumberOfOccurrences and EndDate to null.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.EndDate">
			<summary>
            Gets or sets the date after which the recurrence ends. Setting EndDate resets NumberOfOccurrences.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.HasEnd">
			<summary>
            Gets a value indicating whether the pattern has a fixed number of occurrences or an end date.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.NumberOfOccurrences">
			<summary>
            Gets or sets the number of occurrences after which the recurrence ends. Setting NumberOfOccurrences resets EndDate.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.StartDate">
			<summary>
            Gets or sets the date and time when the recurrence start.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.DailyPattern">
			<summary>
            Represents a recurrence pattern where each occurrence happens a specific number of days after the previous one.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.DailyPattern.#ctor">
			<summary>
        Initializes a new instance of the Recurrence.DailyPattern class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.DailyPattern.#ctor(System.DateTime,System.Int32)">
			<summary>
        Initializes a new instance of the Recurrence.DailyPattern class.
      </summary>
			<param name="interval">The number of days between each occurrence.</param>
			<param name="startDate">The date and time when the recurrence starts.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.DailyRegenerationPattern">
			<summary>
            Represents a regeneration pattern, as used with recurring tasks, where each occurrence happens a specified number of days after the previous one is completed.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.DailyRegenerationPattern.#ctor">
			<summary>
        Initializes a new instance of the Recurrence.DailyRegenerationPattern class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.DailyRegenerationPattern.#ctor(System.DateTime,System.Int32)">
			<summary>
        Initializes a new instance of the Recurrence.DailyRegenerationPattern class.
      </summary>
			<param name="interval">The number of days between the current occurrence and the next, after the current occurrence is completed.</param>
			<param name="startDate">The date and time when the recurrence starts.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.IntervalPattern">
			<summary>
            Represents a recurrence pattern where each occurrence happens at a specific interval after the previous one.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.IntervalPattern.Interval">
			<summary>
            Gets or sets the interval between occurrences. 
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.MonthlyPattern">
			<summary>
            Represents a recurrence pattern where each occurrence happens on a specific day a specific number of
            months after the previous one.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.MonthlyPattern.#ctor">
			<summary>
        Initializes a new instance of the Recurrence.MonthlyPattern class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.MonthlyPattern.#ctor(System.DateTime,System.Int32,System.Int32)">
			<summary>
        Initializes a new instance of the Recurrence.MonthlyPattern class.
      </summary>
			<param name="interval">The number of months between each occurrence.</param>
			<param name="dayOfMonth">The day of the month when each occurrence happens.</param>
			<param name="startDate">The date and time when the recurrence starts.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.MonthlyPattern.DayOfMonth">
			<summary>
            Gets or sets the day of the month when each occurrence happens. DayOfMonth must be between 1 and 31.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.MonthlyRegenerationPattern">
			<summary>
            Represents a regeneration pattern, as used with recurring tasks, where each occurrence happens
            a specified number of months after the previous one is completed.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.MonthlyRegenerationPattern.#ctor">
			<summary>
        Initializes a new instance of the Recurrence.MonthlyRegenerationPattern class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.MonthlyRegenerationPattern.#ctor(System.DateTime,System.Int32)">
			<summary>
        Initializes a new instance of the Recurrence.MonthlyRegenerationPattern class.
      </summary>
			<param name="interval">The number of months between previous and next occurrences.</param>
			<param name="startDate">The date and time when the recurrence starts.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeMonthlyPattern">
			<summary>Represents a recurrence pattern in which each occurrence happens on a relative day a specific number of months after the previous one.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeMonthlyPattern.#ctor">
			<summary>Initializes a new instance of the Recurrence.RelativeMonthlyPattern class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeMonthlyPattern.#ctor(System.DateTime,System.Int32,Microsoft.Exchange.WebServices.Data.DayOfTheWeek,Microsoft.Exchange.WebServices.Data.DayOfTheWeekIndex)">
			<summary>Initializes a new instance of the Recurrence.RelativeMonthlyPattern class with the specified parameters.</summary>
			<param name="dayOfTheWeek">One of the DayOfTheWeek enumeration values that indicates on which day of the week the event recurs.</param>
			<param name="interval">The interval between occurrences.</param>
			<param name="dayOfTheWeekIndex">One of the DayOfTheWeekIndex enumeration values that indicates in which week of the month the event recurs.</param>
			<param name="startDate">The start date of the recurrence pattern.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeMonthlyPattern.DayOfTheWeek">
			<summary>Gets or sets the day of the week on which the event recurs.</summary>
			<returns>One of the DayOfTheWeek enumeration values.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeMonthlyPattern.DayOfTheWeekIndex">
			<summary>Gets or sets the week of the month on which the event recurs.</summary>
			<returns>One of the DayOfTheWeekIndex enumeration values.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeYearlyPattern">
			<summary>Represents a recurrence pattern in which each occurrence happens on a relative day every year.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeYearlyPattern.#ctor">
			<summary>Initializes a new instance of the Recurrence.RelativeYearlyPattern class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeYearlyPattern.#ctor(System.DateTime,Microsoft.Exchange.WebServices.Data.Month,Microsoft.Exchange.WebServices.Data.DayOfTheWeek,Microsoft.Exchange.WebServices.Data.DayOfTheWeekIndex)">
			<summary>Initializes a new instance of the Recurrence.RelativeYearlyPattern class with the specified parameters.</summary>
			<param name="dayOfTheWeek">One of the DayOfTheWeek enumeration values that indicates on which day of the week the event recurs.</param>
			<param name="dayOfTheWeekIndex">One of the DayOfTheWeekIndex enumeration values that indicates in which week of the month the event recurs.</param>
			<param name="month">One of the Month enumeration values.</param>
			<param name="startDate">The start date for the recurrence pattern.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeYearlyPattern.DayOfTheWeek">
			<summary>Gets or sets the day of the week on which the event recurs.</summary>
			<returns>One of the DayOfTheWeek enumeration values.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeYearlyPattern.DayOfTheWeekIndex">
			<summary>Gets or sets the week of the month on which the event recurs.</summary>
			<returns>One of the DayOfTheWeekIndex enumeration values.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.RelativeYearlyPattern.Month">
			<summary>Gets or sets the month of the year when each occurrence happens.
            </summary>
			<returns>One of the Month enumeration values.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.WeeklyPattern">
			<summary>Represents a recurrence pattern in which each occurrence happens on specific days a specific number of weeks after the previous one.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.WeeklyPattern.#ctor">
			<summary>Initializes a new instance of the Recurrence.WeeklyPattern class. </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.WeeklyPattern.#ctor(System.DateTime,System.Int32,Microsoft.Exchange.WebServices.Data.DayOfTheWeek[])">
			<summary>Initializes a new instance of the Recurrence.WeeklyPattern class with the specified values. </summary>
			<param name="daysOfTheWeek">An array of DayOfTheWeek enumeration values that indicate on which days of the week the event recurs.</param>
			<param name="interval">The interval between occurrences.</param>
			<param name="startDate">The start date of the recurrence pattern.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.WeeklyPattern.DaysOfTheWeek">
			<summary>Gets the days of the week on which the event recurs.</summary>
			<returns>A DayOfTheWeekCollection object that contains the days of the week on which the event recurs.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.WeeklyRegenerationPattern">
			<summary>
            Represents a regeneration pattern, as used with recurring tasks, where each occurrence happens a specified number of weeks after the previous one is completed.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.WeeklyRegenerationPattern.#ctor">
			<summary>
        Initializes a new instance of the Recurrence.WeeklyRegenerationPattern class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.WeeklyRegenerationPattern.#ctor(System.DateTime,System.Int32)">
			<summary>
        Initializes a new instance of the Recurrence.WeeklyRegenerationPattern class.
      </summary>
			<param name="interval">The number of weeks between the current occurrence and the next, after the current occurrence is completed.</param>
			<param name="startDate">The date and time when the recurrence starts.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.YearlyPattern">
			<summary>
            Represents a recurrence pattern where each occurrence happens on a specific day every year.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.YearlyPattern.#ctor">
			<summary>
        Initializes a new instance of the Recurrence.YearlyPattern class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.YearlyPattern.#ctor(System.DateTime,Microsoft.Exchange.WebServices.Data.Month,System.Int32)">
			<summary>
        Initializes a new instance of the Recurrence.YearlyPattern class.
      </summary>
			<param name="dayOfMonth">The day of the month each occurrence happens.</param>
			<param name="month">The month of the year each occurrence happens.</param>
			<param name="startDate">The date and time when the recurrence starts.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.YearlyPattern.DayOfMonth">
			<summary>
            Gets or sets the day of the month when each occurrence happens. DayOfMonth must be between 1 and 31.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Recurrence.YearlyPattern.Month">
			<summary>
            Gets or sets the month of the year when each occurrence happens.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Recurrence.YearlyRegenerationPattern">
			<summary>
            Represents a regeneration pattern, as used with recurring tasks, where each occurrence happens a specified number of years after the previous one is completed.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.YearlyRegenerationPattern.#ctor">
			<summary>
        Initializes a new instance of the Recurrence.YearlyRegenerationPattern class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Recurrence.YearlyRegenerationPattern.#ctor(System.DateTime,System.Int32)">
			<summary>
        Initializes a new instance of the Recurrence.YearlyRegenerationPattern class.
      </summary>
			<param name="interval">The number of years between the current occurrence and the next, after the current occurrence is completed.</param>
			<param name="startDate">The date and time when the recurrence starts.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.RecurringAppointmentMasterId">
			<summary>
            Represents the Id of an occurrence of a recurring appointment.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.RecurringAppointmentMasterId.#ctor(System.String)">
			<summary>
        Initializes a new instance of the RecurringAppointmentMasterId class.
      </summary>
			<param name="occurrenceId">The Id of an occurrence in the recurring series.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ResolveNameSearchLocation">
			<summary>
            Defines the location where a ResolveName operation searches for contacts.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResolveNameSearchLocation.ContactsOnly">
			<summary>
            The name is resolved against the Contacts folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResolveNameSearchLocation.ContactsThenDirectory">
			<summary>
            The name is resolved against the Contacts folder and then against the Global Address List if no match was found.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResolveNameSearchLocation.DirectoryOnly">
			<summary>
            The name is resolved against the Global Address List.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResolveNameSearchLocation.DirectoryThenContacts">
			<summary>
            The name is resolved against the Global Address List and then against the Contacts folder if no match was found.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ResponseActions">
			<summary>
            Defines the response actions that can be taken on an item.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.Accept">
			<summary>
            The item can be accepted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.Cancel">
			<summary>
            The item can be cancelled.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.Decline">
			<summary>
            The item can be declined.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.Forward">
			<summary>
            The item can be forwarded.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.None">
			<summary>
            No action can be taken.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.PostReply">
			<summary>
            A reply to the item can be posted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.RemoveFromCalendar">
			<summary>
            The item can be removed from the calendar.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.Reply">
			<summary>
            The item can be replied to.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.ReplyAll">
			<summary>
            The item can be replied to.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.SuppressReadReceipt">
			<summary>
            The item's read receipt can be suppressed.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseActions.TentativelyAccept">
			<summary>
            The item can be tentatively accepted.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ResponseMessage">
			<summary>
            Represents the base class for e-mail related responses (Reply, Reply all and Forward).
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseMessage.BccRecipients">
			<summary>
            Gets a list of recipients this response will be sent to as Bcc.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseMessage.Body">
			<summary>
            Gets or sets the body of the response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseMessage.BodyPrefix">
			<summary>
            Gets or sets the body prefix of this response. The body prefix will be prepended to the original
            message's body when the response is created.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseMessage.CcRecipients">
			<summary>
            Gets a list of recipients the response will be sent to as Cc.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseMessage.ResponseType">
			<summary>
            Gets a value indicating the type of response this object represents.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseMessage.Subject">
			<summary>
            Gets or sets the subject of this response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseMessage.ToRecipients">
			<summary>
            Gets a list of recipients the response will be sent to.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ResponseMessageType">
			<summary>
            Defines the type of a ResponseMessage object.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseMessageType.Forward">
			<summary>
            The ResponseMessage is a forward.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseMessageType.Reply">
			<summary>
            The ResponseMessage is a reply to the sender of a message.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ResponseMessageType.ReplyAll">
			<summary>
            The ResponseMessage is a reply to the sender and all the recipients of a message.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ResponseObject`1">
			<summary>
            Represents the base class for all responses that can be sent.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ResponseObject`1.Save">
			<summary>
            Saves the response in the Drafts folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A Message that represents the response.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ResponseObject`1.Save(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Saves the response in the specified folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A Message that represents the response.</returns>
			<param name="destinationFolderId">The Id of the folder in which to save the response.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ResponseObject`1.Save(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Saves the response in the specified folder. Calling this method results in a call to EWS.
            </summary>
			<returns>A Message that represents the response.</returns>
			<param name="destinationFolderName">The name of the folder in which to save the response.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ResponseObject`1.Send">
			<summary>
            Sends this response without saving a copy. Calling this method results in a call to EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ResponseObject`1.SendAndSaveCopy">
			<summary>
            Sends this response ans saves a copy in the Sent Items folder. Calling this method results in a call to EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ResponseObject`1.SendAndSaveCopy(Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Sends this response ans saves a copy in the specified folder. Calling this method results in a call to EWS.
            </summary>
			<param name="destinationFolderId">The Id of the folder in which to save the copy of the message.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ResponseObject`1.SendAndSaveCopy(Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Sends this response and saves a copy in the specified folder. Calling this method results in a call to EWS.
            </summary>
			<param name="destinationFolderName">The name of the folder in which to save the copy of the message.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseObject`1.IsDeliveryReceiptRequested">
			<summary>
            Gets or sets a value indicating whether delivery receipts should be sent to the sender.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ResponseObject`1.IsReadReceiptRequested">
			<summary>
            Gets or sets a value indicating whether read receipts will be requested from recipients of this response.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter">
			<summary>The base class for derived classes that represent a restriction.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.ContainsSubstring">
			<summary>
            Represents a search filter that checks for the presence of a substring inside a text property.
            Applications can use ContainsSubstring to define conditions such as "Field CONTAINS Value" or "Field IS PREFIXED WITH Value".
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.ContainsSubstring.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.ContainsSubstring class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.ContainsSubstring.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.String)">
			<summary>
        Initializes a new instance of the SearchFilter.ContainsSubstring class.
        The ContainmentMode property is initialized to ContainmentMode.Substring, and
        the ComparisonMode property is initialized to ComparisonMode.IgnoreCase.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="value">The value to compare with.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.ContainsSubstring.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.String,Microsoft.Exchange.WebServices.Data.ContainmentMode,Microsoft.Exchange.WebServices.Data.ComparisonMode)">
			<summary>
        Initializes a new instance of the SearchFilter.ContainsSubstring class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="value">The value to compare with.</param>
			<param name="containmentMode">The containment mode.</param>
			<param name="comparisonMode">The comparison mode.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.ContainsSubstring.ComparisonMode">
			<summary>
            Gets or sets the comparison mode.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.ContainsSubstring.ContainmentMode">
			<summary>
            Gets or sets the containment mode.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.ContainsSubstring.Value">
			<summary>
            Gets or sets the value to compare the specified property with.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.ExcludesBitmask">
			<summary>
            Represents a bitmask exclusion search filter. Applications can use ExcludesBitExcludesBitmaskFilter to define
            conditions such as "(OrdinalField and 0x0010) != 0x0010"
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.ExcludesBitmask.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.ExcludesBitmask class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.ExcludesBitmask.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Int32)">
			<summary>
        Initializes a new instance of the SearchFilter.ExcludesBitmask class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="bitmask">The bitmask to compare with.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.ExcludesBitmask.Bitmask">
			<summary>
            Gets or sets the bitmask to compare the property with.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.Exists">
			<summary>
            Represents a search filter checking if a field is set. Applications can use
            ExistsFilter to define conditions such as "Field IS SET".
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.Exists.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.Exists class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.Exists.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
        Initializes a new instance of the SearchFilter.Exists class.
      </summary>
			<param name="propertyDefinition">The definition of the property to check the existence of. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.IsEqualTo">
			<summary>
            Represents a search filter that checks if a property is equal to a given value or other property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsEqualTo.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.IsEqualTo class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsEqualTo.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Object)">
			<summary>
        Initializes a new instance of the SearchFilter.IsEqualTo class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="value">The value to compare the property with.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsEqualTo.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
        Initializes a new instance of the SearchFilter.IsEqualTo class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="otherPropertyDefinition">The definition of the property to compare with. Property definitions are available on schema classes (EmailMessageSchema, AppointmentSchema, etc.)</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.IsGreaterThan">
			<summary>
            Represents a search filter that checks if a property is greater than a given value or other property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsGreaterThan.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.IsGreaterThan class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsGreaterThan.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Object)">
			<summary>
        Initializes a new instance of the SearchFilter.IsGreaterThan class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="value">The value to compare the property with.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsGreaterThan.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
        Initializes a new instance of the SearchFilter.IsGreaterThan class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="otherPropertyDefinition">The definition of the property to compare with. Property definitions are available on schema classes (EmailMessageSchema, AppointmentSchema, etc.)</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.IsGreaterThanOrEqualTo">
			<summary>
            Represents a search filter that checks if a property is greater than or equal to a given value or other property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsGreaterThanOrEqualTo.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.IsGreaterThanOrEqualTo class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsGreaterThanOrEqualTo.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Object)">
			<summary>
        Initializes a new instance of the SearchFilter.IsGreaterThanOrEqualTo class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="value">The value to compare the property with.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsGreaterThanOrEqualTo.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
        Initializes a new instance of the SearchFilter.IsGreaterThanOrEqualTo class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="otherPropertyDefinition">The definition of the property to compare with. Property definitions are available on schema classes (EmailMessageSchema, AppointmentSchema, etc.)</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.IsLessThan">
			<summary>
            Represents a search filter that checks if a property is less than a given value or other property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsLessThan.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.IsLessThan class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsLessThan.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Object)">
			<summary>
        Initializes a new instance of the SearchFilter.IsLessThan class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="value">The value to compare the property with.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsLessThan.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
        Initializes a new instance of the SearchFilter.IsLessThan class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="otherPropertyDefinition">The definition of the property to compare with. Property definitions are available on schema classes (EmailMessageSchema, AppointmentSchema, etc.)</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.IsLessThanOrEqualTo">
			<summary>
            Represents a search filter that checks if a property is less than or equal to a given value or other property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsLessThanOrEqualTo.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.IsLessThanOrEqualTo class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsLessThanOrEqualTo.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Object)">
			<summary>
        Initializes a new instance of the SearchFilter.IsLessThanOrEqualTo class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="value">The value to compare the property with.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsLessThanOrEqualTo.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
        Initializes a new instance of the SearchFilter.IsLessThanOrEqualTo class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="otherPropertyDefinition">The definition of the property to compare with. Property definitions are available on schema classes (EmailMessageSchema, AppointmentSchema, etc.)</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.IsNotEqualTo">
			<summary>
            Represents a search filter that checks if a property is not equal to a given value or other property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsNotEqualTo.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.IsNotEqualTo class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsNotEqualTo.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Object)">
			<summary>
        Initializes a new instance of the SearchFilter.IsNotEqualTo class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="value">The value to compare the property with.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.IsNotEqualTo.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
        Initializes a new instance of the SearchFilter.IsNotEqualTo class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is being compared. Property definitions are available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)</param>
			<param name="otherPropertyDefinition">The definition of the property to compare with. Property definitions are available on schema classes (EmailMessageSchema, AppointmentSchema, etc.)</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.Not">
			<summary>
            Represents a search filter that negates another. Applications can use NotFilter to define
            conditions such as "NOT(other filter)".
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.Not.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.Not class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.Not.#ctor(Microsoft.Exchange.WebServices.Data.SearchFilter)">
			<summary>
        Initializes a new instance of the SearchFilter.Not class.
      </summary>
			<param name="searchFilter">The search filter to negate. Available search filter classes include SearchFilter.IsEqualTo, SearchFilter.ContainsSubstring and SearchFilter.SearchFilterCollection.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.Not.SearchFilter">
			<summary>
            Gets or sets the search filter to negate. Available search filter classes include
            SearchFilter.IsEqualTo, SearchFilter.ContainsSubstring and SearchFilter.SearchFilterCollection.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.PropertyBasedFilter">
			<summary>
            Represents a search filter where an item or folder property is involved.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.PropertyBasedFilter.PropertyDefinition">
			<summary>
            Gets or sets the definition of the property that is involved in the search filter. Property definitions are
            available as static members from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.RelationalFilter">
			<summary>
            Represents the base class for relational filters (for example, IsEqualTo, IsGreaterThan or IsLessThanOrEqualTo).
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.RelationalFilter.OtherPropertyDefinition">
			<summary>
            Gets or sets the definition of the property to compare with. Property definitions are available as static members
            from schema classes (for example, EmailMessageSchema.Subject, AppointmentSchema.Start, ContactSchema.GivenName, etc.)
            The OtherPropertyDefinition and Value properties are mutually exclusive; setting one resets the other to null.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.RelationalFilter.Value">
			<summary>
            Gets or sets the value to compare with. The Value and OtherPropertyDefinition properties
            are mutually exclusive; setting one resets the other to null.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection">
			<summary>
            Represents a collection of search filters linked by a logical operator. Applications can
            use SearchFilterCollection to define complex search filters such as "Condition1 AND Condition2".
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.#ctor">
			<summary>
        Initializes a new instance of the SearchFilter.SearchFilterCollection class.
        The LogicalOperator property is initialized to LogicalOperator.And.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.#ctor(Microsoft.Exchange.WebServices.Data.LogicalOperator)">
			<summary>
        Initializes a new instance of the SearchFilter.SearchFilterCollection class.
      </summary>
			<param name="logicalOperator">The logical operator used to initialize the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.#ctor(Microsoft.Exchange.WebServices.Data.LogicalOperator,System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.SearchFilter})">
			<summary>
        Initializes a new instance of the SearchFilter.SearchFilterCollection class.
      </summary>
			<param name="logicalOperator">The logical operator used to initialize the collection.</param>
			<param name="searchFilters">The search filters to add to the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.#ctor(Microsoft.Exchange.WebServices.Data.LogicalOperator,Microsoft.Exchange.WebServices.Data.SearchFilter[])">
			<summary>
        Initializes a new instance of the SearchFilter.SearchFilterCollection class.
      </summary>
			<param name="logicalOperator">The logical operator used to initialize the collection.</param>
			<param name="searchFilters">The search filters to add to the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.Add(Microsoft.Exchange.WebServices.Data.SearchFilter)">
			<summary>
            Adds a search filter of any type to the collection.
            </summary>
			<param name="searchFilter">The search filter to add. Available search filter classes include SearchFilter.IsEqualTo, SearchFilter.ContainsSubstring and SearchFilter.SearchFilterCollection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.AddRange(System.Collections.Generic.IEnumerable{Microsoft.Exchange.WebServices.Data.SearchFilter})">
			<summary>
            Adds multiple search filters to the collection.
            </summary>
			<param name="searchFilters">The search filters to add. Available search filter classes include SearchFilter.IsEqualTo, SearchFilter.ContainsSubstring and SearchFilter.SearchFilterCollection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.Clear">
			<summary>
            Clears the collection.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.Contains(Microsoft.Exchange.WebServices.Data.SearchFilter)">
			<summary>
            Determines whether a specific search filter is in the collection.
            </summary>
			<returns>Returns true is the search filter was found in the collection; otherwise returns false.</returns>
			<param name="searchFilter">The search filter to locate in the collection.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.GetEnumerator">
			<summary>
            Gets an enumerator that iterates through the elements of the collection.
            </summary>
			<returns>An IEnumerator for the collection.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.Remove(Microsoft.Exchange.WebServices.Data.SearchFilter)">
			<summary>
            Removes a search filter from the collection.
            </summary>
			<param name="searchFilter">The search filter to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.RemoveAt(System.Int32)">
			<summary>
            Removes the search filter at the specified index from the collection.
            </summary>
			<param name="index">The zero-based index of the search filter to remove.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.Count">
			<summary>
            Gets the total number of search filters in the collection.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.Item(System.Int32)">
			<summary>
            Gets or sets the search filter at the specified index.
            </summary>
			<returns>The search filter at the specified index.</returns>
			<param name="index">The zero-based index of the search filter to get or set.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFilter.SearchFilterCollection.LogicalOperator">
			<summary>
            Gets or sets the logical operator that links the serach filters in this collection.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFolder">
			<summary>
            Represents a search folder. 
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFolder.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>
            Initializes an unsaved local instance of the SearchFolder class. To bind to an existing search folder, use SearchFolder.Bind() instead.
            </summary>
			<param name="service">The ExchangeService object to which the search folder will be bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Binds to an existing search folder and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A SearchFolder instance representing the search folder corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the search folder.</param>
			<param name="id">The Id of the search folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Binds to an existing search folder and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A SearchFolder instance representing the search folder with the specified name.</returns>
			<param name="service">The service to use to bind to the search folder.</param>
			<param name="name">The name of the search folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing search folder and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A SearchFolder instance representing the search folder corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the search folder.</param>
			<param name="id">The Id of the search folder to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.SearchFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing search folder and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A SearchFolder instance representing the search folder with the specified name.</returns>
			<param name="service">The service to use to bind to the search folder.</param>
			<param name="propertySet">The set of properties to load.</param>
			<param name="name">The name of the search folder to bind to.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFolder.SearchParameters">
			<summary>
            Gets or sets the search parameters associated with the search folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFolderParameters">
			<summary>
            Represents the parameters associated with a search folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFolderParameters.RootFolderIds">
			<summary>
            Gets or sets the list of root folders the search folder searches in.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFolderParameters.SearchFilter">
			<summary>
            Gets or sets the search filter associated with the search folder. Available search filter classes include
            SearchFilter.IsEqualTo, SearchFilter.ContainsSubstring and SearchFilter.SearchFilterCollection.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SearchFolderParameters.Traversal">
			<summary>
            Gets or sets the traversal mode for the search folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFolderSchema">
			<summary>
            Represents the schema for search folders.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SearchFolderSchema.SearchParameters">
			<summary>
            Defines the SearchParameters property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SearchFolderTraversal">
			<summary>
            Defines the scope of a search folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SearchFolderTraversal.Deep">
			<summary>
            Items belonging to the root folder and its sub-folders are retrieved.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SearchFolderTraversal.Shallow">
			<summary>
            Items belonging to the root folder are retrieved.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SendCancellationsMode">
			<summary>
            Defines how meeting cancellations should be sent to attendees when an appointment is deleted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendCancellationsMode.SendOnlyToAll">
			<summary>
            Meeting cancellations are sent to all attendees.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendCancellationsMode.SendToAllAndSaveCopy">
			<summary>
            Meeting cancellations are sent to all attendees and a copy of the meeting is saved in the organizer's Sent Items folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendCancellationsMode.SendToNone">
			<summary>
            No meeting cancellation is sent.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SendInvitationsMode">
			<summary>
            Defines if/how meeting invitations are sent.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendInvitationsMode.SendOnlyToAll">
			<summary>
            Meeting invitations are sent to all attendees.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendInvitationsMode.SendToAllAndSaveCopy">
			<summary>
            Meeting invitations are sent to all attendees and a copy of the invitation message is saved.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendInvitationsMode.SendToNone">
			<summary>
            No meeting invitation is sent.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SendInvitationsOrCancellationsMode">
			<summary>
            Defines if/how meeting invitations or cancellations should be sent to attendees when an appointment is updated.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendInvitationsOrCancellationsMode.SendOnlyToAll">
			<summary>
            Meeting invitations/cancellations are sent to all attendees.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendInvitationsOrCancellationsMode.SendOnlyToChanged">
			<summary>
            Meeting invitations/cancellations are sent only to attendees that have been added or modified.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendInvitationsOrCancellationsMode.SendToAllAndSaveCopy">
			<summary>
            Meeting invitations/cancellations are sent to all attendees and a copy is saved in the organizer's Sent Items folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendInvitationsOrCancellationsMode.SendToChangedAndSaveCopy">
			<summary>
            Meeting invitations/cancellations are sent only to attendees that have been added or modified and a copy is saved in the organizer's Sent Items folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SendInvitationsOrCancellationsMode.SendToNone">
			<summary>
            No meeting invitation/cancellation is sent.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Sensitivity">
			<summary>
            Defines the sensitivity of an item.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Sensitivity.Confidential">
			<summary>
            The item is confidential.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Sensitivity.Normal">
			<summary>
            The item has a normal sensitivity.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Sensitivity.Personal">
			<summary>
            The item is personal.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.Sensitivity.Private">
			<summary>
            The item is private.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceError">
			<summary>Defines the error codes that can be returned by Exchange Web Services (EWS).
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorAccessDenied">
			<summary>Indicates that the calling account does not have the rights to perform the action requested.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorAccountDisabled">
			<summary>Indicates that the account in question has been disabled.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorAddDelegatesFailed">
			<summary>Occurs when a list with added delegates cannot be saved.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorAddressSpaceNotFound">
			<summary>Indicates that the address space record, or Domain Name System (DNS) domain name, for cross-forest availability could not be found in Active Directory Domain Services (AD DS).</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorADOperation">
			<summary>Indicates that the operation failed because of communication problems with Active Directory.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorADSessionFilter">
			<summary>Indicates that the ResolveName request specifies an invalid name.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorADUnavailable">
			<summary>Indicates that AD DS is unavailable. Try your request again later.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorAffectedTaskOccurrencesRequired">
			<summary>Indicates that the AffectedTaskOccurrence property value is missing. This value is required when you are deleting a task so that Exchange Web Services knows whether to delete a single task or all occurrences of a repeating task.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorAttachmentSizeLimitExceeded">
			<summary>Indicates that the size of the attachment exceeds Int32.MaxValue, in bytes.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorAutoDiscoverFailed">
			<summary>Indicates that Exchange Web Services tried to determine the location of a cross-forest computer that is running Microsoft Exchange Server that has the Client Access server role installed by using the Autodiscover, but the call to the Autodiscover failed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorAvailabilityConfigNotFound">
			<summary>Indicates that the availability configuration information for the local forest is missing from AD DS.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorBatchProcessingStopped">
			<summary>Indicates that the previous item in the request failed in such a way that Exchange Web Services stopped processing the remaining items in the request. All remaining items are marked with the ErrorBatchProcessingStopped error.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarCannotMoveOrCopyOccurrence">
			<summary>Indicates that an attempt was made to move or copy an occurrence of a recurring calendar item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarCannotUpdateDeletedItem">
			<summary>Indicates that an attempt was made to update a calendar item that is located in the Deleted Items folder, and the update in question would send out a meeting invite.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarCannotUseIdForOccurrenceId">
			<summary>Indicates that the OccurrenceId does not correspond to a valid occurrence of the recurringMasterId.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarCannotUseIdForRecurringMasterId">
			<summary>Indicates that the recurringMasterId does not correspond to a valid occurrence of the OccurrenceId.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarDurationIsTooLong">
			<summary>Indicates that the item duration of a calendar item exceeds five years.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarEndDateIsEarlierThanStartDate">
			<summary>Indicates that the end date/time must be changed so that it is greater than the start date/time.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarFolderIsInvalidForCalendarView">
			<summary>Indicates that the find operation that is using the CalendarView object is not for a calendar folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarInvalidAttributeValue">
			<summary>This error code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarInvalidDayForTimeChangePattern">
			<summary>Indicates that invalid values of Day, WeekDay, and WeekendDay were used to define the time change pattern.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarInvalidDayForWeeklyRecurrence">
			<summary>Indicates that invalid values of Day, WeekDay, and WeekendDay were used to specify the weekly recurrence.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarInvalidPropertyState">
			<summary>Indicates that the state of the calendar item recurrence binary large object (BLOB) in the Exchange store is invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarInvalidPropertyValue">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarInvalidRecurrence">
			<summary>Indicates that the internal structure of the objects that represent the recurrence is invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarInvalidTimeZone">
			<summary>Indicates that an invalid time zone was encountered.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsDelegatedForAccept">
			<summary>Indicates that delegate access cannot be used to accept a meeting request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsDelegatedForDecline">
			<summary>Indicates that delegate access cannot be used to decline a meeting request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsDelegatedForRemove">
			<summary>Indicates that delegate access cannot be used to delete a meeting request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsDelegatedForTentative">
			<summary>Indicates that delegate access cannot be used to tentatively accept a meeting request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsNotOrganizer">
			<summary>Indicates that a meeting cannot be canceled by someone other than the organizer.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsOrganizerForAccept">
			<summary>Indicates that the meeting organizer cannot accept the meeting. Only attendees can accept meeting requests.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsOrganizerForDecline">
			<summary>Indicates that the meeting organizer cannot decline the meeting. Only attendees can decline meeting requests.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsOrganizerForRemove">
			<summary>Indicates that the meeting organizer cannot remove a meeting from the calendar. The organizer can only remove the meeting by canceling the meeting. Only attendees can remove a calendar item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarIsOrganizerForTentative">
			<summary>Indicates that the meeting organizer cannot tentatively accept a meeting. Only attendees can tentatively accept meeting requests.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarMeetingRequestIsOutOfDate">
			<summary>Indicates that a meeting request is out-of-date and cannot be updated.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange">
			<summary>Occurs when the occurrence index that is specified does not correspond to a valid occurrence. For example, if your recurrence pattern defines a set of three meeting occurrences and you try to access the fifth occurrence.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarOccurrenceIsDeletedFromRecurrence">
			<summary>Occurs when the occurrence index that is specified corresponds to a deleted instance.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarOutOfRange">
			<summary>Occurs when a recurrence pattern is defined that contains a value for a month, day, or week that is out of range, such as the seventh week of the month.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCalendarViewRangeTooBig">
			<summary>Occurs when the range for calendar paging is larger than two years.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotCreateCalendarItemInNonCalendarFolder">
			<summary>Occurs when you are creating a calendar item and the folder specified is a non-calendar folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotCreateContactInNonContactFolder">
			<summary>Occurs when you are creating a contact and the folder specified is a non-contact folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotCreatePostItemInNonMailFolder">
			<summary>Indicates that a post item cannot be created in a Calendar, Contacts, Tasks, Notes, and so on folder. It can only be created in a Mail folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotCreateTaskInNonTaskFolder">
			<summary>Occurs when you are creating a task and the folder specified is a non-task folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotDeleteObject">
			<summary>Indicates that the item or folder to delete cannot be deleted.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotDeleteTaskOccurrence">
			<summary>Indicates that you cannot delete an occurrence of a nonrecurring task and you cannot delete the last occurrence of a recurring task.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotOpenFileAttachment">
			<summary>Occurs when the attachment stream does not open.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotSetCalendarPermissionOnNonCalendarFolder">
			<summary>Indicates that the caller tried to set calendar permissions on a non-calendar folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotSetNonCalendarPermissionOnCalendarFolder">
			<summary>Indicates that the caller tried to set non-calendar permissions on a calendar folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotSetPermissionUnknownEntries">
			<summary>Indicates that you cannot set unknown permissions in a permissions set.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotUseFolderIdForItemId">
			<summary>Occurs when the ID that was passed represents a folder instead of an item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCannotUseItemIdForFolderId">
			<summary>Occurs when the ID that was passed in represents an item instead of a folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorChangeKeyRequired">
			<summary>Indicates that a valid change key must be provided when you are performing certain update operations.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorChangeKeyRequiredForWriteOperations">
			<summary>Indicates that a valid change key must be provided when you are performing certain update operations.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorConnectionFailed">
			<summary>Occurs when Exchange Web Services cannot connect to the mailbox.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorContentConversionFailed">
			<summary>Occurs when Exchange Web Services is unable to retrieve the Multipurpose Internet Mail Extensions (MIME) content for the item that was retrieved, or is unable to create the item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCorruptData">
			<summary>Indicates that the data is corrupted and cannot be processed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCreateItemAccessDenied">
			<summary>Indicates that the caller does not have the right to create the item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCreateManagedFolderPartialCompletion">
			<summary>Indicates that one or more of the managed folders that you tried to create failed to be created. Search for each folder to determine which folders were created and which folders do not exist.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCreateSubfolderAccessDenied">
			<summary>Indicates that the calling account does not have the proper rights to create the subfolder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorCrossMailboxMoveCopy">
			<summary>Indicates that the item or folder cannot be moved from one mailbox to another.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDataSizeLimitExceeded">
			<summary>Indicates that either the data that you were trying to set exceeded the maximum size for the property or the value is large enough to require streaming and the property does not support streaming, such as folder properties.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDataSourceOperation">
			<summary>Occurs when the underlying data provider failed to complete the operation.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDelegateAlreadyExists">
			<summary>Occurs when the specified user already exists in the list of delegates.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDelegateCannotAddOwner">
			<summary>Occurs when the specified user to be added as a delegate is the owner of the mailbox.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDelegateMissingConfiguration">
			<summary>Occurs when you try to get a delegate and either there is no delegate information on local FreeBusy message or no Active Directory public delegate (no “public delegate” or no "Send On Behalf" entry in AD DS).</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDelegateNoUser">
			<summary>Occurs when a specified user cannot be mapped to a user in AD DS.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDelegateValidationFailed">
			<summary>Occurs in when you try to add a delegate user that is not valid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDeleteDistinguishedFolder">
			<summary>Indicates that you cannot delete a distinguished folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDeleteItemsFailed">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDistinguishedUserNotSupported">
			<summary>Indicates that a distinguished user ID is not valid for the operation. DistinguishedUserType should not be present in the request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorDuplicateUserIdsSpecified">
			<summary>Indicates that a duplicate user ID has been found in a permission set, that either Default or Anonymous are set more than once, or that there are duplicate SIDs or recipients.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorEmailAddressMismatch">
			<summary>Occurs when the e-mail address for the distinguished folder ID does not match the mailbox that you are operating on. For example, you cannot create a search folder that exists in one mailbox but considers distinguished folders from another mailbox in its search criteria.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorEventNotFound">
			<summary>Indicates that the subscription that was created with a particular watermark is no longer valid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorExpiredSubscription">
			<summary>Indicates that the subscription that is referenced has expired.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorFolderCorrupt">
			<summary>Indicates that the folder is corrupted and cannot be saved.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorFolderExists">
			<summary>Indicates that a folder that has that name already exists. Duplicate folder names are not allowed within the same parent folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorFolderNotFound">
			<summary>Indicates that the folder ID that was passed in does not correspond to a valid folder, or that the delegate does not have permissions to access the folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorFolderPropertRequestFailed">
			<summary>Indicates that the requested property could not be retrieved. This does not indicate that the property does not exist, but that the property was corrupted in some way so that the retrieval failed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorFolderSave">
			<summary>Indicates that the folder could not be created or saved because of an invalid state.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorFolderSaveFailed">
			<summary>Indicates that the folder could not be created or saved because of an invalid state.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorFolderSavePropertyError">
			<summary>Indicates that the folder could not be created or updated because of invalid property values.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorFreeBusyGenerationFailed">
			<summary>Occurs when free/busy information cannot be retrieved because of an intervening failure.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorImpersonateUserDenied">
			<summary>Indicates that the calling account does not have the ms-Exch-EPI-May-Impersonate right on either the user or contact that it is trying to impersonate or the mailbox database that contains the user mailbox. </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorImpersonationDenied">
			<summary>Indicates that the calling account does not have the ms-Exch-EPI-Impersonation right on the Client Access server that it is calling. </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorImpersonationFailed">
			<summary>Indicates that there was an unexpected error when an attempt was made to perform server-to-server authentication. This response code typically indicates either that the service account that is running the Exchange Web Services application pool is configured incorrectly, that Exchange Web Services cannot talk to the directory, or that a trust between forests is not correctly configured.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorIncorrectSchemaVersion">
			<summary>Indicates that the request was valid for the current Exchange Server version but was invalid for the request server version that was specified.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorIncorrectUpdatePropertyCount">
			<summary>Indicates that each change description in update method call must list only one property to update.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInsufficientResources">
			<summary>Indicates that the mailbox server is overloaded. Try your request again later.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInternalServerError">
			<summary>Indicates that Exchange Web Services encountered an error that it could not recover from, and no more specific response code is associated with the error that occurred.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInternalServerTransientError">
			<summary>Indicates that an internal server error occurred and that you should try your request again later.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidAccessLevel">
			<summary>Indicates that the level of access that the caller has on the free/busy data is invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidAttachmentId">
			<summary>Indicates that the attachment was not found within the attachments collection for the item. For example, you may receive this response code if you have an attachment ID and then the attachment is deleted and you try to retrieve the attachment by using the attachment ID.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidAttachmentSubfilter">
			<summary>Occurs when you try to bind to an existing search folder by using a complex attachment table restriction. Exchange Web Services only supports simple contains filters against the attachment table. If you try to bind to an existing search folder that has a more complex attachment table restriction (a subfilter), Exchange Web Services cannot render the XML for that filter and returns this error.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidAttachmentSubfilterTextFilter">
			<summary>Occurs when you try to bind to an existing search folder by using a complex attachment table restriction. Exchange Web Services only supports simple contains filters against the attachment table. If you try to bind to an existing search folder that has a more complex attachment table restriction, Exchange Web Services cannot render the XML for that filter. In this case, the attachment subfilter contains a text filter, but it is not looking at the attachment display name.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidAuthorizationContext">
			<summary>Indicates that the authorization procedure for the requester failed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidChangeKey">
			<summary>Indicates that an invalid change key was passed in. Note that many methods do not require a change key to be passed. However, if you do provide a change key, it must be valid, although not necessarily up-to-date.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidClientSecurityContext">
			<summary>Indicates that there was an internal error when an attempt was made to resolve the identity of the caller.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidCompleteDate">
			<summary>Occurs when you try to set the CompleteDate of a task to a time in the future. When it is converted to the local time of the Client Access server, the CompleteDate property cannot be set to a value that is later than the local time on the Client Access server.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidCrossForestCredentials">
			<summary>Occurs when the credentials that are used to proxy a request to a different directory service forest fail authentication.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidDelegatePermission">
			<summary>Indicates that the specified folder permissions are invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidDelegateUserId">
			<summary>Indicates that the specified delegate user ID is invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidExchangeImpersonationHeaderData">
			<summary>Occurs when an Exchange Impersonation header was passed in but it did not contain a security identifier (SID), user principal name (UPN), or PrimarySmtpAddress. This response code is always returned within a SOAP fault.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidExcludesRestriction">
			<summary>Indicates that the bitmask that was passed into the Excludes restriction was unable to be parsed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidExpressionTypeForSubFilter">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidExtendedProperty">
			<summary>Occurs when the combination of extended property values that was specified are invalid or result in an invalid extended property Uniform Resource Identifier (URI).</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidExtendedPropertyValue">
			<summary>Indicates that the value that was offered for the extended property is inconsistent with the type that was specified in the associated extended field URI. </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidFolderId">
			<summary>Occurs when the folder ID is corrupted.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidFolderTypeForOperation">
			<summary>Indicates that the specified folder type is invalid for the current operation. For example, you cannot create a Search folder in a public folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidFractionalPagingParameters">
			<summary>Occurs in fractional paging when the user has specified one of the following: a numerator that is greater than the denominator, a numerator that is less than zero, or a denominator that is less than or equal to zero.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidFreeBusyViewType">
			<summary>Occurs if a FreeBusyViewType of None is requested.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidId">
			<summary>Occurs when the folder ID is corrupted.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdEmpty">
			<summary>Indicates that the caller specified an ID that is empty.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdMalformed">
			<summary>Indicates that the structure of the ID is internally inconsistent.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdMalformedEwsLegacyIdFormat">
			<summary>Indicates that a folder or item ID that is using the Exchange 2007 format was specified for a request with a version of Exchange 2007 SP1 or later. You cannot use Exchange 2007 IDs in Exchange 2007 SP1 or later requests. You must use the ConvertId method to convert them first.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdMonikerTooLong">
			<summary>Indicates that the structure of the ID is internally inconsistent. The moniker is contained within the ID and indicates which mailbox the ID belongs to. This error code is returned if the length of the moniker is checked and the byte count is longer than expected.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdNotAnItemAttachmentId">
			<summary>Occurs when the specified ID does not refer to an item attachment.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdReturnedByResolveNames">
			<summary>Indicates that a contact in your mailbox is corrupt.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdStoreObjectIdTooLong">
			<summary>Occurs when the structure of the ID is internally inconsistent.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdTooManyAttachmentLevels">
			<summary>Indicates that the attachment hierarchies exceed the maximum of 255 levels deep.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIdXml">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidIndexedPagingParameters">
			<summary>Occurs if the offset for indexed paging is less than zero.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidInternetHeaderChildNodes">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationAcceptItem">
			<summary>Occurs when an attempt is made to accept something other than a meeting request or a calendar item, or when an attempt is made to accept a calendar item occurrence that is in the Deleted Items folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationCancelItem">
			<summary>Occurs when an attempt is made to cancel something other than a calendar item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationCreateItem">
			<summary>Indicates that you tried to create an unsupported item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationCreateItemAttachment">
			<summary>Indicates that you tried to create an item attachment by using an unsupported item type.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationDeclineItem">
			<summary>Occurs when an attempt is made to decline something other than a meeting request or a calendar item, or when an attempt is made to decline a calendar item occurrence that is in the Deleted Items folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationExpandDL">
			<summary>Occurs when you try to expand something that is not a d istribution list.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationRemoveItem">
			<summary>Occurs when you try to remove an item that is not a meeting cancellation.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationSendItem">
			<summary>Occurs if you try to send an item that is not a message item. Only items whose ItemClass property value begins with IPM.Note can be sent.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidItemForOperationTentative">
			<summary>Occurs if you try to tentatively accept an item that is not a calendar item or meeting request. Also occurs if you try to tentatively accept an item occurrence that is in the Deleted Items folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidManagedFolderProperty">
			<summary>Indicates that the structure of the managed folder is corrupted and cannot be rendered.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidManagedFolderQuota">
			<summary>Indicates that the quota that is set on the managed folder is less than zero, which indicates a corrupted managed folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidManagedFolderSize">
			<summary>Indicates that the size that is set on the managed folder is less than zero, which indicates a corrupted managed folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidMergedFreeBusyInterval">
			<summary>Indicates that the supplied merged free/busy internal value is invalid. The default minimum value is 5 minutes. The default maximum value is 1440 minutes.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidNameForNameResolution">
			<summary>Indicates that the name you are trying to resolve is invalid. For example, a zero-length string, a single space, a comma, and a dash are all invalid names.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidNetworkServiceContext">
			<summary>Indicates an error in the Network Service account on the Client Access server.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidOofParameter">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidOperation">
			<summary>This is a general error that is used when the requested operation is invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPagingMaxRows">
			<summary>Indicates that zero rows or a negative value is specified as the maximum number of rows to be returned.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidParentFolder">
			<summary>Indicates that you passed in an invalid parent folder for an operation, for example by creating a folder within a search folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPercentCompleteValue">
			<summary>Occurs if the percent complete property is set to a value that is not between 0 and 100 (inclusive).</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPermissionSettings">
			<summary>Indicates that the permission level is inconsistent with the permission settings.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPropertyAppend">
			<summary>Occurs if the property that you are trying to append to does not support appending. The following are the only properties that support appending: Recipient collections (To, Cc, Bcc), Attendee collections (Required, Optional, Resources), Body property, and ReplyTo.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPropertyDelete">
			<summary>Indicates that the property that you are trying to delete does not support deleting. For example, you cannot delete the ID property of an item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPropertyForExists">
			<summary>Occurs if you specify one of the flag properties when using SearchFilter.Exists. The following are the flag properties: Item.IsDraft, Item.IsSubmitted, Item.IsUnmodified, Item.IsResend, and Item.IsFromMe.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPropertyForOperation">
			<summary>Indicates that the property that you are trying to manipulate does not support the operation that is being performed on it.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPropertyRequest">
			<summary>Occurs if the property that is specified in the request is not available for the item type. For example, this response code is returned if a property that is only available on calendar items is requested in the PropertySet for a message.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPropertySet">
			<summary>Indicates that the property you are trying to set is read-only.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPropertyUpdateSentMessage">
			<summary>Occurs when a client tries to update certain properties of a message that has already been sent. For example, the following properties cannot be updated on a sent message: EmailMessage.IsReadReceiptRequested and EmailMessage.IsDeliveryReceiptRequested.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidProxySecurityContext">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPullSubscriptionId">
			<summary>Occurs if you try to get events from or unsubscribe from a pull subscription by specifying a push subscription ID.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidPushSubscriptionUrl">
			<summary>Indicates that the URL has an invalid format. The following conditions must be met for Exchange Web Services to accept the URL: String length &gt; 0 and &lt; 2083, protocol is http or https, and able to be parsed by the URI Microsoft .NET Framework class.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidRecipients">
			<summary>Indicates that the recipient collection on your message or the attendee collection on your calendar item is invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidRecipientSubfilter">
			<summary>Indicates that the search folder has a recipient table filter that Exchange Web Services cannot represent. To fix the error, retrieve the folder without requesting the search parameters.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidRecipientSubfilterComparison">
			<summary>Indicates that the search folder has a recipient table filter that Exchange Web Services cannot represent. To fix the error, retrieve the folder without requesting the search parameters.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidRecipientSubfilterOrder">
			<summary>Indicates that the search folder has a recipient table filter that Exchange Web Services cannot represent. To fix the error, retrieve the folder without requesting the search parameters.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidRecipientSubfilterTextFilter">
			<summary>Indicates that the search folder has a recipient table filter that Exchange Web Services cannot represent. To fix the error, retrieve the folder without requesting the search parameters.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidReferenceItem">
			<summary>Occurs under the following circumstances: The referenced item identifier is not a EmailMessage or Appointment object, or one of their descendants; the reference item identifier is for an Appointment object and the organizer is trying to Reply or ReplyAll.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidRequest">
			<summary>Indicates that the SOAP request has a SOAP action header, but nothing in the SOAP body. Note that the SOAP action header is not required as Exchange Web Services can determine the method to call from the local name of the root element in the SOAP body.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidRestriction">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidRoutingType">
			<summary>Indicates that the routing type that was set for an EmailMessage is not a valid routing type. Typically, routing type is set to Simple Mail Transfer Protocol (SMTP).</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidScheduledOofDuration">
			<summary>Occurs if the specified duration end time is not greater than the start time, or if the end time does not occur in the future.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSecurityDescriptor">
			<summary>Indicates that the Exchange security descriptor on the Calendar folder in the store is corrupted.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSendItemSaveSettings">
			<summary>Occurs during an attempt to send an item where the SaveItemFolderId is specified in the request but the SaveItemToFolder property is set to false.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSerializedAccessToken">
			<summary>Indicates that the token that was passed in the header is malformed, does not refer to a valid account in the directory, or is missing the primary group SID.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidServerVersion">
			<summary>Indicates that an invalid request server version was specified in the request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSid">
			<summary>Indicates that one or more of the SID properties within the passed token or Exchange Impersonation block have an invalid structure.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSmtpAddress">
			<summary>Indicates that the SMTP address cannot be parsed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSubfilterType">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSubfilterTypeNotAttendeeType">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSubfilterTypeNotRecipientType">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSubscription">
			<summary>Indicates that the subscription is no longer valid. This could be because the Client Access is restarting or because the subscription expired.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSubscriptionRequest">
			<summary>Indicates that the subscribe request included multiple public folder IDs. A subscription can include multiple folders from the same mailbox or one public folder ID.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidSyncStateData">
			<summary>Indicates that the sync state data is corrupted. To fix this error, you must resynchronize without the sync state. Make sure that if you are persisting sync state blobs and that you are not accidentally truncating the BLOB.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidTimeInterval">
			<summary>Indicates that the specified time interval is invalid. The start time must be greater than or equal to the end time.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidUserInfo">
			<summary>Indicates that an internally inconsistent user ID was specified for a permissions operation. For example, if a distinguished user ID is specified (Default or Anonymous), this error is returned if you also try to specify a SID, or primary SMTP address or display name for this user.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidUserOofSettings">
			<summary>Indicates that the user Out of Office (OOF) settings are invalid because of a missing internal or external reply.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidUserPrincipalName">
			<summary>Indicates that the UPN that was passed in the Exchange Impersonation SOAP header did not map to a valid account.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidUserSid">
			<summary>Indicates that the SID that was passed in the Exchange Impersonation SOAP header was either structurally invalid or did not map to a valid account.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidUserSidMissingUPN">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidValueForProperty">
			<summary>Indicates that the comparison value in the restriction is invalid for the property you are comparing against. For example, the comparison value of DateTimeCreated &gt; true would return this response code. This response code is also returned if you specify an enumeration property in the comparison, but the value that you are comparing against is not a valid value for that enumeration.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorInvalidWatermark">
			<summary>Indicates that the watermark is invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorIrresolvableConflict">
			<summary>Indicates that conflict resolution was unable to resolve changes for the properties. The items in the store may have been changed and have to be updated. Retrieve the updated change key and try again.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorItemCorrupt">
			<summary>Indicates that the state of the object is corrupted and cannot be retrieved. </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorItemNotFound">
			<summary>Indicates that the item was not found or you do not have rights to access the item.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorItemPropertyRequestFailed">
			<summary>Occurs if a property request fails. The property may exist, but could not be retrieved.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorItemSave">
			<summary>Occurs when attempts to save the item or folder fail.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorItemSavePropertyError">
			<summary>Occurs when attempts to save the item or folder fail because of invalid property values. The response code includes the path of the invalid properties.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorLogonAsNetworkServiceFailed">
			<summary>Indicates that the availability service was unable to log on as the network service in order to proxy requests to the appropriate sites or forests. This response typically indicates a configuration error.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMailboxConfiguration">
			<summary>Indicates that the mailbox information in AD DS is configured incorrectly.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMailboxDataArrayEmpty">
			<summary>Indicates that the MailboxDataArray property in the request is empty. You must supply at least one mailbox identifier.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMailboxDataArrayTooBig">
			<summary>Occurs when more than 100 entries are supplied in a MailboxDataArray.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMailboxLogonFailed">
			<summary>Occurs when the connection to the mailbox to get the calendar view information failed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMailboxMoveInProgress">
			<summary>Indicates that the mailbox is being moved to a different mailbox store or server. This can also indicate that the mailbox is on another server or mailbox database.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMailboxStoreUnavailable">
			<summary>Indicates that the mailbox database is offline, corrupt, shutting down, or exhibiting other conditions that make the mailbox unavailable.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMailRecipientNotFound">
			<summary>Occurs if the mailbox data information cannot be mapped to a valid mailbox account.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorManagedFolderAlreadyExists">
			<summary>Indicates that the managed folder that you are trying to create already exists in your mailbox.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorManagedFolderNotFound">
			<summary>Occurs when the folder name that was specified in the request does not map to a managed folder definition in AD DS. You can only create instances of managed folders for folders defined in AD DS. Check the name and try again.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorManagedFoldersRootFailure">
			<summary>Indicates that the managed folders root was deleted from the mailbox or that there is already a folder in the same parent folder that has the name of the managed folder root. This will also occur if the attempt to create the root managed folder fails.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMeetingSuggestionGenerationFailed">
			<summary>Indicates that the suggestions engine encountered a problem when it was trying to generate the suggestions.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMessageDispositionRequired">
			<summary>Occurs if the message disposition is not set.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMessageSizeExceeded">
			<summary>Indicates that the message that you are trying to send exceeded the allowed limits.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMimeContentConversionFailed">
			<summary>Occurs when the MIME content is not a valid iCal when you try to create an item. When you are trying to retrieve an item, this response indicates that the MIME content could not be generated.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMimeContentInvalid">
			<summary>Occurs when the MIME content is invalid.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMimeContentInvalidBase64String">
			<summary>Occurs when the MIME content in the request is not a valid base 64 string.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingArgument">
			<summary>Indicates that a required argument was missing from the request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingEmailAddress">
			<summary>Indicates that you specified a distinguished folder ID in the request, but the account that made the request does not have a mailbox on the system.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingEmailAddressForManagedFolder">
			<summary>Indicates that you specified a distinguished folder ID in the request, but the account that made the request does not have a mailbox on the system.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingInformationEmailAddress">
			<summary>Indicates that the attendee or recipient does not have email address set.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingInformationReferenceItemId">
			<summary>Occurs if the reference item ID  value is missing.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingItemForCreateItemAttachment">
			<summary>Occurs when you are creating an item attachment if you do not indicate the item that you want to create.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingManagedFolderId">
			<summary>Occurs when the policy IDs property, property tag 0x6732, for the folder is missing. You should consider this a corrupted folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingRecipients">
			<summary>Indicates that you tried to send an item without including recipients.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMissingUserIdInformation">
			<summary>Indicates that a user ID has not been fully specified in a permissions set.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMoreThanOneAccessModeSpecified">
			<summary>Indicates that you have specified more than one ExchangeImpersonation or SerializedSecurityContext property value within a request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMoveCopyFailed">
			<summary>Indicates that the move or copy operation failed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorMoveDistinguishedFolder">
			<summary>Occurs if you try to move a distinguished folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNameResolutionMultipleResults">
			<summary>Indicates that the ResolveName method returned more than one result or that the ambiguous name that you specified matched more than one object in the directory. The response code includes the matched names in the response data.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNameResolutionNoMailbox">
			<summary>Indicates that the caller does not have a mailbox on the system.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNameResolutionNoResults">
			<summary>Occurs if the ResolveName method returns no results.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoCalendar">
			<summary>Occurs if there is no Calendar folder for the mailbox.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoDestinationCASDueToKerberosRequirements">
			<summary>Indicates that the request referred to a mailbox in another Active Directory site, but no Client Access servers in the destination site were configured for Windows Authentication and therefore the request could not be proxied.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoDestinationCASDueToSSLRequirements">
			<summary>Indicates that the request referred to a mailbox in another Active Directory site, but no Client Access servers in the destination site were configured for SSL connections and therefore the request could not be proxied.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoDestinationCASDueToVersionMismatch">
			<summary>Indicates that the request referred to a mailbox in another Active Directory site, but no Client Access servers in the destination site were of an acceptable product version to receive the request and therefore the request could not be proxied.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoFolderClassOverride">
			<summary>Occurs if you set the folder class when you are creating an item other than a generic folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoFreeBusyAccess">
			<summary>Indicates that the caller does not have free/busy viewing rights on the Calendar folder in question.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNonExistentMailbox">
			<summary>Indicates one of the following: 1) The e-mail address is empty in the call to create a managed folder 2) the SMTP address does not map to a valid mailbox.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNonPrimarySmtpAddress">
			<summary>Occurs when a caller passes in a non-primary SMTP address. The response includes the correct SMTP address to use.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoPropertyTagForCustomProperties">
			<summary>Indicates that MAPI properties in the custom range, 0x8000 and greater, cannot be referenced by property tags.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoPublicFolderReplicaAvailable">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNoRespondingCASInDestinationSite">
			<summary>Indicates that the request referred to a mailbox in another Active Directory site, but none of the Client Access servers in that site responded and therefore the request could not be proxied.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNotDelegate">
			<summary>Indicates that the user is not a delegate for the mailbox.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorNotEnoughMemory">
			<summary>Indicates that the operation could not be completed because of insufficient memory.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorObjectTypeChanged">
			<summary>Indicates that the object type cannot be changed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorOccurrenceCrossingBoundary">
			<summary>Indicates that the time allotment for a given occurrence overlaps with an earlier or later occurrence.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorOccurrenceTimeSpanTooBig">
			<summary>Indicates that the time allotment for a given occurrence overlaps with another occurrence of the same recurring item. This response also occurs if the length in minutes of a given occurrence is larger than Int32.MaxValue.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorOperationNotAllowedWithPublicFolderRoot">
			<summary>Indicates that the current operation is not valid to be performed on the public folder root.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorParentFolderIdRequired">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorParentFolderNotFound">
			<summary>Occurs when you try to create a folder if the parent folder is not found.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorPasswordChangeRequired">
			<summary>Indicates that you must change your password before you can access this mailbox. This occurs when a new account has been created and the administrator indicated that the user must change the password at first logon. You cannot update the password by using Exchange Web Services. You must use a tool such as Outlook Web Access to change your password.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorPasswordExpired">
			<summary>Indicates that the password has expired. You cannot change the password by using Exchange Web Services. You must use a tool such as Outlook Web Access to change your password.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorPropertyUpdate">
			<summary>Indicates that the update failed because of invalid property values. The response message includes the invalid property paths.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorPropertyValidationFailure">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorProxiedSubscriptionCallFailure">
			<summary>Indicates that the request referred to a subscription that exists on another Client Access server, but an attempt to proxy the request to that Client Access server failed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorProxyCallFailed">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorProxyGroupSidLimitExceeded">
			<summary>Indicates that the request referred to a mailbox in another Active Directory site, and the original caller is a member of more than 3000 groups.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorProxyRequestNotAllowed">
			<summary>Indicates that the request that Exchange Web Services sent to another Client Access server when trying to fulfill a GetUserAvailability request was invalid. This response code likely indicates a configuration or rights error, or that someone is trying unsuccessfully to mimic an availability proxy request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorProxyRequestProcessingFailed">
			<summary>Indicates that Exchange Web Services tried to proxy an availability request to another Client Access server for fulfillment, but the request failed. This response can be caused by network connectivity issues or request time-out issues.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorProxyTokenExpired">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorPublicFolderRequestProcessingFailed">
			<summary>Occurs when you try to get availability for a recipient that is located on a computer that is running a version of Exchange Server that is earlier than Exchange 2007 and the request to retrieve free/busy information for the recipient from the public folder server failed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorPublicFolderServerNotFound">
			<summary>Occurs when you try to get user availability for a recipient that is located on an Exchange server that is running a version of Exchange that is earlier than Exchange 2007 and the request to retrieve free/busy information for the recipient from the public folder server failed because the organizational unit did not have a public folder server associated with it.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorQueryFilterTooLong">
			<summary>Indicates that the search folder restriction may be valid, but is not supported by Exchange Web Services. Exchange Web Services limits restrictions to contain a maximum of 255 filter expressions. If you try to bind to an existing search folder that exceeds 255, this response code is returned.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorQuotaExceeded">
			<summary>Occurs when the mailbox quota is exceeded.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorReadEventsFailed">
			<summary>Indicates that the process for reading events was aborted because of an internal failure. Re-create the event synchronization based on a last known watermark.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorReadReceiptNotPending">
			<summary>Occurs when an attempt has been made to suppress a read receipt when the message sender did not request a read receipt on the message.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorRecurrenceEndDateTooBig">
			<summary>Occurs when the end date for the recurrence is after 9/1/4500.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorRecurrenceHasNoOccurrence">
			<summary>Indicates that the recurrence has no occurrence instances in the specified range.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorRemoveDelegatesFailed">
			<summary>Indicates that the delegate list failed to be saved after delegates were removed.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorRequestStreamTooBig">
			<summary>Occurs when the request stream is larger than 400 KB.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorRequiredPropertyMissing">
			<summary>Indicates that one or more of the required properties is missing when you try to create an attachments.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorResolveNamesInvalidFolderType">
			<summary>Indicates that the caller has specified a folder that is not a Contacts folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorResolveNamesOnlyOneContactsFolderAllowed">
			<summary>Indicates that the caller has specified more than one Contacts folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorResponseSchemaValidation">
			<summary>Occurs when the response cannot be validated against the schema.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorRestrictionTooComplex">
			<summary>Indicates that the restriction that was passed cannot be evaluated by Exchange Web Services.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorRestrictionTooLong">
			<summary>Occurs when the restriction has more than 255 filters.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorResultSetTooBig">
			<summary>Indicates that the number of calendar entries for a given recipient exceeds the allowed limit of 1000. Reduce the window and try again.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSavedItemFolderNotFound">
			<summary>Indicates that the folder in which to save the item does not exist.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSchemaValidation">
			<summary>Occurs when the incoming request fails schema validation against types.xsd and messages.xsd. This response code is always returned within a SOAP fault.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSearchFolderNotInitialized">
			<summary>Indicates that the search folder was created, but the search criteria were never set on the folder.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSendMeetingCancellationsRequired">
			<summary>Occurs when you try to delete a calendar item without specifying whether meeting cancellations should be sent.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSendMeetingInvitationsOrCancellationsRequired">
			<summary>Occurs when you try to update a calendar item without specifying whether meeting cancellations should be sent.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSendMeetingInvitationsRequired">
			<summary>Occurs when you try to create a calendar item without specifying whether meeting cancellations should be sent.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSentMeetingRequestUpdate">
			<summary>Indicates that after the organizer sends a meeting request, the request cannot be updated. To modify the meeting, modify the calendar item, not the meeting request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSentTaskRequestUpdate">
			<summary>Indicates that after the task initiator sends a task request, that request cannot be updated.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorServerBusy">
			<summary>Occurs when the server is busy.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorServiceDiscoveryFailed">
			<summary>Indicates that Exchange Web Services tried to proxy a user availability request to the appropriate forest for the recipient, but it could not determine where to send the request because of a service discovery failure.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorStaleObject">
			<summary>Occurs when you try to update or send an item if the change key is not up to date or was not supplied. Retrieve the item to get an updated change key and then try the operation again.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSubscriptionAccessDenied">
			<summary>Indicates that you tried to access a subscription by using an account that did not create that subscription. Each subscription can only be accessed by the creator of the subscription.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSubscriptionDelegateAccessNotSupported">
			<summary>Indicates that you cannot create a subscription if you are not the owner or do not have owner access to the mailbox.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSubscriptionNotFound">
			<summary>Indicates that the specified subscription does not exist. The subscription may have expired, the Exchange Web Services process may have been restarted, or an invalid subscription was passed in. If the subscription was valid, re-create the subscription with the latest watermark.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorSyncFolderNotFound">
			<summary>Indicates that the folder ID that was specified in the SyncFolderItems method call does not exist.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorTimeIntervalTooBig">
			<summary>Indicates that the time window that was specified is larger than the allowed limit. By default, the allowed limit is 42.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorTimeoutExpired">
			<summary>Occurs when there is not enough time to complete the processing of the request.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorToFolderNotFound">
			<summary>Indicates that the destination folder does not exist.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorTokenSerializationDenied">
			<summary>Occurs if the caller tries to perform a token serialization request but does not have ms-Exch-EPI-TokenSerialization rights on the Client Access server they are calling.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnableToGetUserOofSettings">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedCulture">
			<summary>Occurs if you try to set the Culture property to a value that is not parsable by the System.Globalization.CultureInfo class.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedMapiPropertyType">
			<summary>Occurs if a caller tries to use extended properties of types object, object array, error or null.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedMimeConversion">
			<summary>Occurs when you are trying to retrieve or set MIME content for an item other than a PostItem, EmailMessage, or Appointment object.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedPathForQuery">
			<summary>Indicates that the property path cannot be used within a restriction.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedPathForSortGroup">
			<summary>Indicates that the property path cannot be used for sorting or grouping operations.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedPropertyDefinition">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedQueryFilter">
			<summary>Indicates that the search folder restriction may be valid, but is not supported by Exchange Web Services.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedRecurrence">
			<summary>Indicates that the recurrence pattern that was supplied is not supported for tasks.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedSubFilter">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUnsupportedTypeForConversion">
			<summary>Indicates that Exchange Web Services found a property type in the store but cannot generate XML for the property type.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUpdateDelegatesFailed">
			<summary>Indicates that the delegate list failed to be saved after delegates were updated.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorUpdatePropertyMismatch">
			<summary>Occurs when the single property path that is listed in a change description does not match the single property that is being set within the actual item or folder object.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorVirusDetected">
			<summary>Indicates that the Exchange Store detected a virus in the message.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorVirusMessageDeleted">
			<summary>Indicates that the Exchange Store detected a virus in the message and deleted it.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorVoiceMailNotImplemented">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorWin32InteropError">
			<summary>Indicates that there was an internal failure during communication with unmanaged code.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.ErrorWorkingHoursXmlMalformed">
			<summary>This response code is not used.</summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceError.NoError">
			<summary>Indicates that an error has not occurred.</summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceId">
			<summary>
            Represents the Id of an Exchange object.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceId.Equals(System.Object)">
			<summary>
            Determines whether the specified object is equal to the current ServiceId.
            </summary>
			<returns>Returns true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, returns false.</returns>
			<param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
			<exception cref="T:System.NullReferenceException">The obj parameter is null.</exception>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceId.GetHashCode">
			<summary>
            Serves as a hash function for a particular type.
            </summary>
			<returns>A hash code for the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceId.SameIdAndChangeKey(Microsoft.Exchange.WebServices.Data.ServiceId)">
			<summary>
            Determines whether two ServiceId instances are equal (including ChangeKeys).
            </summary>
			<param name="other">The ServiceId to compare with the current ServiceId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceId.ToString">
			<summary>
            Returns a String that represents the current ServiceId.
            </summary>
			<returns>A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceId.ChangeKey">
			<summary>
            Gets the change key associated with the Exchange object. The change key represents the
            the version of the associated item or folder.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceId.UniqueId">
			<summary>
            Gets the unique Id of the Exchange object.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceLocalException">
			<summary>
            Represents an error that occurs when a service operation fails locally (for example: validation error).
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceLocalException.#ctor">
			<summary>
            Initializes a new instance of the ServiceLocalException class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceLocalException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the ServiceLocalException class.
      </summary>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceLocalException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceLocalException class.
      </summary>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceObject">
			<summary>
            Represents the base abstract class for all item and folder types.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceObject.GetLoadedPropertyDefinitions">
			<summary>
            Gets the collection of loaded property definitions.
            </summary>
			<returns>Collection of property definitions.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceObject.Load">
			<summary>
            Loads the first class properties. Calling this method results in a call to EWS.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceObject.Load(Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Loads the specified set of properties. Calling this method results in a call to EWS.
            </summary>
			<param name="propertySet">The properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceObject.TryGetProperty(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Object@)">
			<summary>
            Try to get the value of a specified property in this instance. 
            </summary>
			<returns>Returns true if property retrieved; otherwise returns false.</returns>
			<param name="propertyDefinition">The property definition.</param>
			<param name="propertyValue">The property value.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceObject.IsDirty">
			<summary>
            Gets a value indicating whether the object has been modified and should be saved.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceObject.IsNew">
			<summary>
            Indicates whether this object is a real store item, or if it is a local object that has not yet been saved.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceObject.Item(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
            Gets the value of specified property in this instance. 
            </summary>
			<param name="propertyDefinition">Definition of the property to get.</param>
			<exception cref="T:Microsoft.Exchange.WebServices.Data.PropertyException">Raised if this property has not been assigned or loaded. Raised for set if property cannot be updated or deleted.</exception>
			<exception cref="T:Microsoft.Exchange.WebServices.Data.ServiceVersionException">Raised if this property requires a later version of Exchange.</exception>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceObject.Schema">
			<summary>
            Gets the schema associated with this type of object.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceObject.Service">
			<summary>
            Gets the ExchangeService the object is bound to.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceObjectPropertyDefinition">
			<summary>
            Represents a property definition for a service object.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceObjectPropertyDefinition.Version">
			<summary>
            Gets the version.
            </summary>
			<returns>The version.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceObjectPropertyException">
			<summary>
            Represents an error that occurs when an operation on a property fails.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceObjectPropertyException.#ctor(Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
            Initializes a new instance of the ServiceObjectPropertyException class.
            </summary>
			<param name="propertyDefinition">The definition of the property that is at the origin of the exception.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceObjectPropertyException.#ctor(System.String,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase)">
			<summary>
        Initializes a new instance of the ServiceObjectPropertyException class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is at the origin of the exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceObjectPropertyException.#ctor(System.String,Microsoft.Exchange.WebServices.Data.PropertyDefinitionBase,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceObjectPropertyException class.
      </summary>
			<param name="propertyDefinition">The definition of the property that is at the origin of the exception.</param>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceObjectPropertyException.PropertyDefinition">
			<summary>
            Gets the definition of the property that caused the exception.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceObjectSchema">
			<summary>
            Represents the base class for all item and folder schemas.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceObjectSchema.ExtendedProperties">
			<summary>
            Defines the ExtendedProperties property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceObjectSchema.GetEnumerator">
			<summary>
            Obtains an enumerator for the properties of the schema.
            </summary>
			<returns>An IEnumerator instance.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceObjectType">
			<summary>
            Defines the type of a service object.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceObjectType.Folder">
			<summary>
            The object is a folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceObjectType.Item">
			<summary>
            The object is an item.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceRemoteException">
			<summary>
            Represents an error that occurs when a service operation fails remotely.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceRemoteException.#ctor">
			<summary>
            Initializes a new instance of the ServiceRemoteException class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceRemoteException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the ServiceRemoteException class.
      </summary>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceRemoteException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceRemoteException class.
      </summary>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceRequestException">
			<summary>
            Represents an error that occurs when a service operation request fails (for example: connection error).
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceRequestException.#ctor">
			<summary>
            Initializes a new instance of the ServiceRequestException class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceRequestException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the ServiceRequestException class.
      </summary>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceRequestException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceRequestException class.
      </summary>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceResponse">
			<summary>
            Represents the standard response to an Exchange Web Services operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponse.ErrorCode">
			<summary>
            Gets the error code associated with this response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponse.ErrorDetails">
			<summary>
            Gets error details associated with the response. If Result is set to Success, ErrorDetailsDictionary returns null.
            Error details will only available for some error codes. For example, when error code is ErrorRecurrenceHasNoOccurrence, 
            the ErrorDetailsDictionary will contain keys for EffectiveStartDate and EffectiveEndDate.
            </summary>
			<returns>The error details dictionary.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponse.ErrorMessage">
			<summary>
            Gets a detailed error message associated with the response. If Result is set to Success, ErrorMessage returns null.
            ErrorMessage is localized according to the PreferredCulture property of the ExchangeService object that
            was used to call the method that generated the response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponse.ErrorProperties">
			<summary>
            Gets information about property errors associated with the response. If Result is set to Success, ErrorProperties returns null.
            ErrorProperties is only available for some error codes. For example, when the error code is ErrorInvalidPropertyForOperation,
            ErrorProperties will contain the definition of the property that was invalid for the request.
            </summary>
			<returns>The error properties list.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponse.Result">
			<summary>
            Gets the result associated with this response.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceResponseCollection`1">
			<summary>
            Represents a strogly typed list of service responses.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceResponseCollection`1.GetEnumerator">
			<summary>
            Gets an enumerator that iterates through the elements of the collection.
            </summary>
			<returns>An IEnumerator for the collection.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponseCollection`1.Count">
			<summary>
            Gets the total number of responses in the list.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponseCollection`1.Item(System.Int32)">
			<summary>
            Gets the response at the specified index.
            </summary>
			<returns>The response at the specified index.</returns>
			<param name="index">The zero-based index of the response to get.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponseCollection`1.OverallResult">
			<summary>
            Gets a value indicating the overall result of the request that generated this response collection.
            If all of the responses have their Result property set to Success, OverallResult returns Success.
            If at least one response has its Result property set to Warning and all other responses have their Result
            property set to Success, OverallResult returns Warning. If at least one response has a its Result set to
            Error, OverallResult returns Error.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceResponseException">
			<summary>
            Represents a remote service exception that has a single response.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponseException.ErrorCode">
			<summary>
            Gets the service error code.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponseException.Message">
			<summary>
            Gets a message that describes the current exception.
            </summary>
			<returns>The error message that explains the reason for the exception.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ServiceResponseException.Response">
			<summary>
            Gets the ServiceResponse for the exception.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceResult">
			<summary>
            Defines the result of a call to an EWS method. Values in this enumeration have to
            be ordered from lowest to highest severity.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceResult.Error">
			<summary>
            The call triggered at least one error.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceResult.Success">
			<summary>
            The call was successful
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.ServiceResult.Warning">
			<summary>
            The call triggered at least one warning.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceValidationException">
			<summary>
            Represents an error that occurs when a validation check fails.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceValidationException.#ctor">
			<summary>
            Initializes a new instance of the ServiceValidationException class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceValidationException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the ServiceValidationException class.
      </summary>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceValidationException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceValidationException class.
      </summary>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceVersionException">
			<summary>
            Represents an error that occurs when a request cannot be handled due to a service version mismatch.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceVersionException.#ctor">
			<summary>
        Initializes a new instance of the ServiceVersionException class.
      </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceVersionException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the ServiceVersionException class.
      </summary>
			<param name="message">The error message.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceVersionException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceVersionException class.
      </summary>
			<param name="innerException">The inner exception.</param>
			<param name="message">The error message.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceXmlDeserializationException">
			<summary>
            Represents an error that occurs when the XML for a response cannot be deserialized.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceXmlDeserializationException.#ctor">
			<summary>
            Initializes a new instance of the ServiceXmlDeserializationException class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceXmlDeserializationException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the ServiceXmlDeserializationException class.
      </summary>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceXmlDeserializationException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceXmlDeserializationException class.
      </summary>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ServiceXmlSerializationException">
			<summary>
            Represents an error that occurs when the XML for a request cannot be serialized.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceXmlSerializationException.#ctor">
			<summary>
            Initializes a new instance of the ServiceXmlSerializationException class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceXmlSerializationException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the ServiceXmlSerializationException class.
      </summary>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.ServiceXmlSerializationException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceXmlSerializationException class.
      </summary>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SortDirection">
			<summary>
            Defines a sort direction.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SortDirection.Ascending">
			<summary>
            The sort is performed in ascending order.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SortDirection.Descending">
			<summary>
            The sort is performed in descending order.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.StandardUser">
			<summary>
            Defines a standard delegate user.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.StandardUser.Anonymous">
			<summary>
            The anonymous delegate user that is used to define delegate permissions for unauthenticated users.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.StandardUser.Default">
			<summary>
            The default delegate user that is used to define default delegation permissions.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.StringList">
			<summary>Represents a list of strings.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.#ctor">
			<summary>Initializes a new instance of the StringList class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.#ctor(System.Collections.Generic.IEnumerable{System.String})">
			<summary>Initializes a new instance of the StringList class.</summary>
			<param name="strings">An IEnumerable string collection that is used to create the StringList object.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.Add(System.String)">
			<summary>Adds a string to the list.
            </summary>
			<param name="s">The string to add to the list.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.AddRange(System.Collections.Generic.IEnumerable{System.String})">
			<summary>Adds multiple strings to the list.
            </summary>
			<param name="strings">The strings to add to the list.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.Clear">
			<summary>Clears the list.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.Contains(System.String)">
			<summary>Determines whether the list contains a specific string.
            </summary>
			<returns>Returns true if s is present in the list; otherwise, returns false.</returns>
			<param name="s">The string to check the presence of.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.Equals(System.Object)">
			<summary>Indicates whether the specified object is equal to the current StringList object.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object.</returns>
			<param name="obj">The object that is used to compare to the StringList object.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.GetEnumerator">
			<summary>Gets an enumerator that iterates through the elements of the collection.
            </summary>
			<returns>An IEnumerator for the collection.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.GetHashCode">
			<summary>A hash function for the StringList class.</summary>
			<returns>A <see cref="T:System.Int32"></see> object.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.Remove(System.String)">
			<summary>Removes a string from the list.
            </summary>
			<returns>Returns true if s was removed; otherwise, returns false.</returns>
			<param name="s">The string to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.RemoveAt(System.Int32)">
			<summary>Removes the string at the specified position from the list.
            </summary>
			<param name="index">The index of the string to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.StringList.ToString">
			<summary>Generates a string representation of all the items in the list.
            </summary>
			<returns>A comma-separated list of the strings that are present in the list.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.StringList.Count">
			<summary>Gets the number of strings in the list.
            </summary>
			<returns>A <see cref="T:System.Int32"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.StringList.Item(System.Int32)">
			<summary>Gets or sets the string at the specified index.
            </summary>
			<returns>The string at the specified index.</returns>
			<param name="index">The index of the string to get or set.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SubscriptionBase">
			<summary>
            Represents the base class for event subscriptions.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SubscriptionBase.Id">
			<summary>
            Gets the Id of the subscription.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SubscriptionBase.Watermark">
			<summary>
            Gets the latest watermark of the subscription.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Suggestion">
			<summary>Represents meeting suggestions for a specific date.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Suggestion.Date">
			<summary>Gets the date for meeting suggestions for a specific date.</summary>
			<returns>A <see cref="T:System.DateTime"></see> object that represents the date for meeting suggestions for a specific date.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Suggestion.Quality">
			<summary>Gets the quality of the suggested meeting date.</summary>
			<returns>A SuggestionQuality object that represents the quality of the suggested meeting date.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Suggestion.TimeSuggestions">
			<summary>Gets a collection of suggested meeting times for the suggested meeting date.</summary>
			<returns>A <see cref="T:System.Collection.ObjectMode.Collection&lt;T&gt;"></see> object that contains TimeSuggestion objects that each represent a suggested meeting time.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SuggestionQuality">
			<summary>
            Defines the quality of an availability suggestion.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SuggestionQuality.Excellent">
			<summary>
            The suggestion is excellent.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SuggestionQuality.Fair">
			<summary>
            The suggestion is fair.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SuggestionQuality.Good">
			<summary>
            The suggestion is good.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SuggestionQuality.Poor">
			<summary>
            The suggestion is poor.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SyncFolderHierarchyResponse">
			<summary>
            Represents the response to a folder synchronization operation.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SyncFolderItemsResponse">
			<summary>
            Represents the response to a folder items synchronization operation.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SyncFolderItemsScope">
			<summary>
            Determines items to be included in a SyncFolderItems response.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SyncFolderItemsScope.NormalAndAssociatedItems">
			<summary>
            Include normal and associated items in the response.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.SyncFolderItemsScope.NormalItems">
			<summary>
            Include only normal items in the response.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.SyncResponse`2">
			<summary>
            Represents the base response class for synchronuization operations.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.SyncResponse`2.Changes">
			<summary>
            Gets a list of changes that occurred on the synchronized folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.Task">
			<summary>
            Represents a Task item. Properties available on tasks are defined in the TaskSchema class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Task.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>
            Initializes an unsaved local instance of the Task class. To bind to an existing task, use Task.Bind() instead.
            </summary>
			<param name="service">The ExchangeService instance to which this task is bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Task.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId)">
			<summary>
            Binds to an existing task and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A Task instance representing the task corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the task.</param>
			<param name="id">The Id of the task to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Task.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.ItemId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing task and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A Task instance representing the task corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the task.</param>
			<param name="id">The Id of the task to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Task.DeleteCurrentOccurrence(Microsoft.Exchange.WebServices.Data.DeleteMode)">
			<summary>
            Deletes the current occurrence of a recurring task. After the current occurrence isdeleted,
            the task represents the next occurrence. Developers should call Load to retrieve the new property
            values of the task. Calling this method results in a call to EWS.
            </summary>
			<param name="deleteMode">The deletion mode.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.Task.Update(Microsoft.Exchange.WebServices.Data.ConflictResolutionMode)">
			<summary>
            Applies the local changes that have been made to this task. Calling this method results in at least one call to EWS.
            Mutliple calls to EWS might be made if attachments have been added or removed.
            </summary>
			<returns>A Task object representing the completed occurrence if the task is recurring and the update marks it as completed; or a Task object representing the current occurrence if the task is recurring and the uypdate changed its recurrence pattern; or null in every other case.</returns>
			<param name="conflictResolutionMode">Specifies how conflicts should be resolved.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.ActualWork">
			<summary>
            Gets or sets the actual amount of time that is spent on the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.AssignedTime">
			<summary>
            Gets the date and time the task was assigned.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.BillingInformation">
			<summary>
            Gets or sets the billing information of the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.ChangeCount">
			<summary>
            Gets the number of times the task has changed since it was created.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.Companies">
			<summary>
            Gets or sets a list of companies associated with the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.CompleteDate">
			<summary>
            Gets or sets the date and time on which the task was completed.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.Contacts">
			<summary>
            Gets or sets a list of contacts associated with the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.DelegationState">
			<summary>
            Gets the current delegation state of the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.Delegator">
			<summary>
            Gets the name of the delegator of this task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.DueDate">
			<summary>
            Gets or sets the date and time on which the task is due.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.IsComplete">
			<summary>
             Gets a value indicating whether the task is complete.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.IsRecurring">
			<summary>
            Gets a value indicating whether the task is recurring.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.IsTeamTask">
			<summary>
            Gets a value indicating whether the task is a team task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.Mileage">
			<summary>
            Gets or sets the mileage of the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.Mode">
			<summary>
            Gets a value indicating the mode of the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.Owner">
			<summary>
            Gets the name of the owner of the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.PercentComplete">
			<summary>
            Gets or sets the completeion percentage of the task. PercentComplete must be between 0 and 100.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.Recurrence">
			<summary>
            Gets or sets the recurrence pattern for this task. Available recurrence pattern classes include
            Recurrence.DailyPattern, Recurrence.MonthlyPattern and Recurrence.YearlyPattern.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.StartDate">
			<summary>
            Gets or sets the date and time on which the task starts.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.Status">
			<summary>
            Gets or sets the status of the task.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.StatusDescription">
			<summary>
            Gets a string representing the status of the task, localized according to the PreferredCulture
            property of the ExchangeService object the task is bound to.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.Task.TotalWork">
			<summary>
            Gets or sets the total amount of work spent on the task.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TaskDelegationState">
			<summary>
            Defines the delegation state of a task.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskDelegationState.Accepted">
			<summary>
            The task was delegated and the delegation was accepted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskDelegationState.Declined">
			<summary>
            The task was delegated but the delegation was declined.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskDelegationState.NoDelegation">
			<summary>
            The task is not delegated.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskDelegationState.Unknown">
			<summary>
            The task's delegation state is unknown.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TaskMode">
			<summary>
            Defines the modes of a Task.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskMode.Normal">
			<summary>
            The task is normal.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskMode.Request">
			<summary>
            The task is a task assignment request.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskMode.RequestAccepted">
			<summary>
            The task assignment request was accepted.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskMode.RequestDeclined">
			<summary>
            The task assignment request was declined.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskMode.SelfDelegated">
			<summary>
            The task is self delegated.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskMode.Update">
			<summary>
            The task has been updated.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TaskSchema">
			<summary>
            Represents the schema for task items.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.ActualWork">
			<summary>
            Defines the ActualWork property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.AssignedTime">
			<summary>
            Defines the AssignedTime property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.BillingInformation">
			<summary>
            Defines the BillingInformation property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.ChangeCount">
			<summary>
            Defines the ChangeCount property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.Companies">
			<summary>
            Defines the Companies property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.CompleteDate">
			<summary>
            Defines the CompleteDate property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.Contacts">
			<summary>
            Defines the Contacts property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.DelegationState">
			<summary>
            Defines the DelegationState property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.Delegator">
			<summary>
            Defines the Delegator property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.DueDate">
			<summary>
            Defines the DueDate property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.IsComplete">
			<summary>
            Defines the IsComplete property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.IsRecurring">
			<summary>
            Defines the IsRecurring property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.IsTeamTask">
			<summary>
            Defines the IsTeamTask property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.Mileage">
			<summary>
            Defines the Mileage property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.Mode">
			<summary>
            Defines the Mode property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.Owner">
			<summary>
            Defines the Owner property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.PercentComplete">
			<summary>
            Defines the PercentComplete property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.Recurrence">
			<summary>
            Defines the Recurrence property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.StartDate">
			<summary>
            Defines the StartDate property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.Status">
			<summary>
            Defines the Status property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.StatusDescription">
			<summary>
            Defines the StatusDescription property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskSchema.TotalWork">
			<summary>
            Defines the TotalWork property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TasksFolder">
			<summary>
            Represents a folder containing task items.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TasksFolder.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>
            Initializes an unsaved local instance of the TasksFolder class. To bind to an existing tasks folder, use TasksFolder.Bind() instead.
            </summary>
			<param name="service">The ExchangeService object to which the tasks folder will be bound.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TasksFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>
            Binds to an existing tasks folder and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A TasksFolder instance representing the task folder corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the tasks folder.</param>
			<param name="id">The Id of the tasks folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TasksFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>
            Binds to an existing tasks folder and loads its first class properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A TasksFolder instance representing the tasks folder with the specified name.</returns>
			<param name="service">The service to use to bind to the tasks folder.</param>
			<param name="name">The name of the tasks folder to bind to.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TasksFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing tasks folder and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A TasksFolder instance representing the task folder corresponding to the specified Id.</returns>
			<param name="service">The service to use to bind to the tasks folder.</param>
			<param name="id">The Id of the tasks folder to bind to.</param>
			<param name="propertySet">The set of properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TasksFolder.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.PropertySet)">
			<summary>
            Binds to an existing tasks folder and loads the specified set of properties.
            Calling this method results in a call to EWS.
            </summary>
			<returns>A TasksFolder instance representing the tasks folder with the specified name.</returns>
			<param name="service">The service to use to bind to the tasks folder.</param>
			<param name="propertySet">The set of properties to load.</param>
			<param name="name">The name of the tasks folder to bind to.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TaskStatus">
			<summary>
            Defines the execution status of a task.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskStatus.Completed">
			<summary>
            The execution of the task is completed.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskStatus.Deferred">
			<summary>
            The execution of the task is deferred.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskStatus.InProgress">
			<summary>
            The execution of the task is in progress.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskStatus.NotStarted">
			<summary>
            The execution of the task is not started.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TaskStatus.WaitingOnOthers">
			<summary>
            The execution of the task is waiting on others.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TimeSuggestion">
			<summary>Represents an availability time suggestion.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.TimeSuggestion.Conflicts">
			<summary>Gets a collection of conflicting meetings for the suggested meeting time.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection&lt;T&gt;"></see> object that contains Conflict objects that represent conflicts with the suggested meeting time.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.TimeSuggestion.IsWorkTime">
			<summary>Indicates whether the suggested meeting time is within the mailbox's working hours.</summary>
			<returns>Value is true if the meeting time is within the mailbox's working hours; otherwise, value is false.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.TimeSuggestion.MeetingTime">
			<summary>Gets the suggested meeting time.</summary>
			<returns>A <see cref="T:System.DateTime"></see> object that represents the start of a suggested meeting time.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.TimeSuggestion.Quality">
			<summary>Gets the quality of the suggested meeting time.</summary>
			<returns>A SuggestionQuality object the indicates the quality of the suggested meeting time.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TimeWindow">
			<summary>Represents a time period.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TimeWindow.#ctor(System.DateTime,System.DateTime)">
			<summary>Initializes a new instance of the TimeWindow class.</summary>
			<param name="endTime">The end date and time of a time span.</param>
			<param name="startTime">The start date and time of a time span.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.TimeWindow.EndTime">
			<summary>Gets or sets the end date and time of a time span.</summary>
			<returns>A <see cref="T:System.DateTime"></see> object that represents the end of a time span.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.TimeWindow.StartTime">
			<summary>Gets or sets the start date and time of a time span.</summary>
			<returns>A <see cref="T:System.DateTime"></see> object that represents the beginning of a time span.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TimeZoneConversionException">
			<summary>
            Represents an error that occurs when a date and time cannot be converted from one time zone to another.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TimeZoneConversionException.#ctor">
			<summary>
            Initializes a new instance of the ServiceLocalException class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TimeZoneConversionException.#ctor(System.String)">
			<summary>
        Initializes a new instance of the ServiceLocalException class.
      </summary>
			<param name="message">Error message text.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TimeZoneConversionException.#ctor(System.String,System.Exception)">
			<summary>
        Initializes a new instance of the ServiceLocalException class.
      </summary>
			<param name="innerException">Inner exception.</param>
			<param name="message">Error message text.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TokenCredentials">
			<summary>Provides credentials if you already have a token.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.TokenCredentials.#ctor(System.String)">
			<summary>Initializes a new instance of the TokenCredentials class.</summary>
			<param name="securityToken">The token that is used to provide security credentials.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.TraceFlags">
			<summary>
            Defines flags to control tracing details.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.All">
			<summary>
            All trace types enabled.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.AutodiscoverConfiguration">
			<summary>
            Trace Autodiscover configuration logic.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.AutodiscoverRequest">
			<summary>
            Trace Autodiscover request messages.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.AutodiscoverResponse">
			<summary>
            Trace Autodiscover response messages.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.AutodiscoverResponseHttpHeaders">
			<summary>
            Trace Autodiscover response HTTP headers.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.EwsRequest">
			<summary>
            Trace EWS request messages.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.EwsResponse">
			<summary>
            Trace EWS response messages.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.EwsResponseHttpHeaders">
			<summary>
            Trace EWS response HTTP headers.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.TraceFlags.None">
			<summary>
            No tracing.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.UnifiedMessaging">
			<summary>
            Represents the Unified Messaging functionalities.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UnifiedMessaging.PlayOnPhone(Microsoft.Exchange.WebServices.Data.ItemId,System.String)">
			<summary>
            Calls a phone and reads a message to the person who answers.
            </summary>
			<returns>An object providing status for the phone call.</returns>
			<param name="itemId">The Id of the message to read.</param>
			<param name="dialString">The full dial string used to call the phone.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.UniqueBody">
			<summary>
            Represents the body part of an item that is unique to the conversation the item is part of. 
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UniqueBody.op_Implicit(Microsoft.Exchange.WebServices.Data.UniqueBody)~System.String">
			<summary>
            Defines an implicit conversion of UniqueBody into a string.
            </summary>
			<returns>A string containing the text of the UniqueBody.</returns>
			<param name="messageBody">The UniqueBody to convert to a string.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UniqueBody.ToString">
			<summary>
            Returns a String that represents the current UniqueBody.
            </summary>
			<returns>A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UniqueBody.BodyType">
			<summary>
            Gets the type of the unique body's text.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UniqueBody.Text">
			<summary>
            Gets the text of the unique body.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.UpdateItemResponse">
			<summary>
            Represents the response to an individual item update operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UpdateItemResponse.ConflictCount">
			<summary>
            Gets the number of property conflicts that were resolved during the update operation.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UpdateItemResponse.ReturnedItem">
			<summary>
            Gets the item that was returned by the update operation. ReturnedItem is set only when a recurring Task
            is marked as complete or when its recurrence pattern changes. 
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.UserConfiguration">
			<summary>Represents an object that can be used to store user-defined configuration settings.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfiguration.#ctor(Microsoft.Exchange.WebServices.Data.ExchangeService)">
			<summary>Initializes a new instance of the UserConfiguration class.</summary>
			<param name="service">The ExchangeService object that will be used to bind to the Exchange server.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfiguration.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,System.String,Microsoft.Exchange.WebServices.Data.FolderId,Microsoft.Exchange.WebServices.Data.UserConfigurationProperties)">
			<summary>Binds to an existing user configuration based on a FolderId object and loads the specified properties.</summary>
			<returns>A UserConfiguration instance.</returns>
			<param name="service">The service to which the user configuration is bound.</param>
			<param name="name">The name of the user configuration.</param>
			<param name="parentFolderId">The identifier of the folder that contains the user configuration.</param>
			<param name="properties">The properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfiguration.Bind(Microsoft.Exchange.WebServices.Data.ExchangeService,System.String,Microsoft.Exchange.WebServices.Data.WellKnownFolderName,Microsoft.Exchange.WebServices.Data.UserConfigurationProperties)">
			<summary>Binds to an existing user configuration based on a WellKnownFolderName object and loads the specified properties.</summary>
			<returns>A UserConfiguration object.</returns>
			<param name="service">The ExchangeService object that will be used to bind to the Exchange server.</param>
			<param name="parentFolderName">The folder, identified by a WellKnownFolderName object, that contains the user configuration.</param>
			<param name="name">The name of the user configuration to bind.</param>
			<param name="properties">The UserConfigurationProperties object that identifies the properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfiguration.Delete">
			<summary>Deletes the user configuration. 
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfiguration.Load(Microsoft.Exchange.WebServices.Data.UserConfigurationProperties)">
			<summary>Loads the specified user configuration properties.</summary>
			<param name="properties">The user configuration properties to load.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfiguration.Save(System.String,Microsoft.Exchange.WebServices.Data.FolderId)">
			<summary>Saves a user configuration object into a folder specified by a FolderId object.</summary>
			<param name="name">The name of the user configuration object.</param>
			<param name="parentFolderId">The FolderId object that identifies the folder that will contain the saved user configuration object.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfiguration.Save(System.String,Microsoft.Exchange.WebServices.Data.WellKnownFolderName)">
			<summary>Saves a user configuration object into a folder specified by a WellKnownFolderName object.</summary>
			<param name="parentFolderName">The WellKnownFolderName object that identifies the folder that will contain the saved user configuration object.</param>
			<param name="name">The name of the user configuration object.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfiguration.Update">
			<summary>Updates the user configuration object.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfiguration.BinaryData">
			<summary>Gets or sets the binary data of the user configuration.</summary>
			<returns>A <see cref="T:System.Byte"></see> array of binary data.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfiguration.Dictionary">
			<summary>Gets the dictionary of the user configuration.</summary>
			<returns>A UserConfigurationDictionary object that contains a user configuration dictionary.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfiguration.IsDirty">
			<summary>Indicates whether the user configuration object has been modified.</summary>
			<returns>Value is true if the user configuration object has been modified; otherwise, value is false.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfiguration.ItemId">
			<summary>Gets the identifier of the user configuration.</summary>
			<returns>An ItemId object that identifies the user configuration.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfiguration.Name">
			<summary>Gets the name of the user configuration.</summary>
			<returns>A String that represents the user configuration name.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfiguration.ParentFolderId">
			<summary>Gets the identifier of the folder that contains the user configuration.</summary>
			<returns>A FolderId object that represents the identifier of the folder that contains the user configuration.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfiguration.XmlData">
			<summary>Gets or sets the XML data of the user configuration.
            </summary>
			<returns>A <see cref="T:System.Byte"></see> array of XML data.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary">
			<summary>
            Represents a user configuration's Dictionary property.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary.Add(System.Object,System.Object)">
			<summary>
            Adds an element with the provided key and value to the user configuration dictionary.
            </summary>
			<param name="key">The object to use as the key of the element to add.</param>
			<param name="value">The object to use as the value of the element to add.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary.Clear">
			<summary>
            Removes all items from the user configuration dictionary.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary.ContainsKey(System.Object)">
			<summary>
            Determines whether the user configuration dictionary contains an element with the specified key.
            </summary>
			<returns>Returns true if the user configuration dictionary contains an element with the key; otherwise returns false.</returns>
			<param name="key">The key to locate in the user configuration dictionary.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary.GetEnumerator">
			<summary>
            Returns an enumerator that iterates through the user configuration dictionary.
            </summary>
			<returns>An IEnumerator that can be used to iterate through the user configuration dictionary.</returns>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary.Remove(System.Object)">
			<summary>
            Removes the element with the specified key from the user configuration dictionary.
            </summary>
			<returns>Returns true if the element is successfully removed; otherwise returns false.</returns>
			<param name="key">The key of the element to remove.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary.TryGetValue(System.Object,System.Object@)">
			<summary>
            Gets the value associated with the specified key.
            </summary>
			<returns>Returns true if the user configuration dictionary contains the key; otherwise, returns false.</returns>
			<param name="key">The key whose value to get.</param>
			<param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, null.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary.Count">
			<summary>
            Gets the number of elements in the user configuration dictionary.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionary.Item(System.Object)">
			<summary>
            Gets or sets the element with the specified key.
            </summary>
			<returns>The element with the specified key.</returns>
			<param name="key">The key of the element to get or set.</param>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType">
			<summary>
            Identifies the user configuration dictionary key and value types.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.Boolean">
			<summary>
            Boolean type.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.Byte">
			<summary>
            Byte type.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.ByteArray">
			<summary>
            Byte array type
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.DateTime">
			<summary>
            DateTime type.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.Integer32">
			<summary>
            32-bit integer type.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.Integer64">
			<summary>
            64-bit integer type.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.String">
			<summary>
            String type.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.StringArray">
			<summary>
            String array type.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.UnsignedInteger32">
			<summary>
            32-bit unsigned integer type.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationDictionaryObjectType.UnsignedInteger64">
			<summary>
            64-bit unsigned integer type.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.UserConfigurationProperties">
			<summary>
            Identifies the user configuration properties to retrieve.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationProperties.All">
			<summary>
            Retrieve all properties.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationProperties.BinaryData">
			<summary>
            Retrieve the BinaryData property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationProperties.Dictionary">
			<summary>
            Retrieve the Dictionary property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationProperties.Id">
			<summary>
            Retrieve the Id property.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.UserConfigurationProperties.XmlData">
			<summary>
            Retrieve the XmlData property.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.UserId">
			<summary>
            Represents the Id of a user.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserId.#ctor">
			<summary>
            Initializes a new instance of the UserId class.
            </summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserId.#ctor(Microsoft.Exchange.WebServices.Data.StandardUser)">
			<summary>
            Initializes a new instance of the UserId class.
            </summary>
			<param name="standardUser">The StandardUser value used to initialize the UserId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserId.#ctor(System.String)">
			<summary>
            Initializes a new instance of the UserId class.
            </summary>
			<param name="primarySmtpAddress">The primary SMTP address used to initialize the UserId.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserId.op_Implicit(Microsoft.Exchange.WebServices.Data.StandardUser)~Microsoft.Exchange.WebServices.Data.UserId">
			<summary>
            Implements an implicit conversion between StandardUser and UserId.
            </summary>
			<returns>A UserId initialized with the specified standard user value.</returns>
			<param name="standardUser">The standard user used to initialize the user Id.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.UserId.op_Implicit(System.String)~Microsoft.Exchange.WebServices.Data.UserId">
			<summary>
            Implements an implicit conversion between a string representing a primary SMTP address and UserId.
            </summary>
			<returns>A UserId initialized with the specified primary SMTP address.</returns>
			<param name="primarySmtpAddress">The string representing a primary SMTP address.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserId.DisplayName">
			<summary>
            Gets or sets the display name of the user.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserId.PrimarySmtpAddress">
			<summary>
            Gets or sets the primary SMTP address or the user.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserId.SID">
			<summary>
            Gets or sets the SID of the user.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.UserId.StandardUser">
			<summary>
            Gets or sets a value indicating which standard user the user represents.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.ViewBase">
			<summary>
            Represents the base view class for search operations.
            </summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.ViewBase.PropertySet">
			<summary>
            Gets or sets the property set. PropertySet determines which properties will be loaded on found items. If PropertySet is null,
            all first class properties are loaded on found items.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.WebCredentials">
			<summary>Wraps an instance of a <see cref="T:System.Net.NetworkCredential"></see> object that is used for password-based authentication methods such as basic, digest, NTLM, and Kerberos authentication.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.WebCredentials.#ctor">
			<summary>Initializes a new instance of the WebCredentials class to use the default network credentials.</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.WebCredentials.#ctor(System.Net.ICredentials)">
			<summary>Initializes a new instance of the WebCredentials class with the specified credentials.</summary>
			<param name="credentials">The credentials of the account to authenticate.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.WebCredentials.#ctor(System.String,System.String)">
			<summary>Initializes a new instance of the WebCredentials class with the user name and password for the account to authenticate.</summary>
			<param name="username">The user name of the account to authenticate.</param>
			<param name="password">The password of the account to authenticate.</param>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.WebCredentials.#ctor(System.String,System.String,System.String)">
			<summary>Initializes a new instance of the WebCredentials class with the user name, password, and domain for the account to authenticate.</summary>
			<param name="domain">The domain of the account to authenticate.</param>
			<param name="username">The user name of the account to authenticate.</param>
			<param name="password">The password of the account to authenticate.</param>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.WebCredentials.Credentials">
			<summary>Gets the credentials of the account to authenticate.</summary>
			<returns>The <see cref="T:System.Net.ICredentials"></see> object that represents the account to authenticate.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.WellKnownFolderName">
			<summary>
            Defines well known folder names.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Calendar">
			<summary>
            The Calendar folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Contacts">
			<summary>
            The Contacts folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.DeletedItems">
			<summary>
            The Deleted Items folder
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Drafts">
			<summary>
            The Drafts folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Inbox">
			<summary>
            The Inbox folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Journal">
			<summary>
            The Journal folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.JunkEmail">
			<summary>
            The Junk E-mail folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.MsgFolderRoot">
			<summary>
            The message folder root.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Notes">
			<summary>
            The Notes folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Outbox">
			<summary>
            The Outbox folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.PublicFoldersRoot">
			<summary>
            The root of the Public Folders hierarchy.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Root">
			<summary>
            The root of the mailbox.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.SearchFolders">
			<summary>
            The Search Folders folder, also known as the Finder folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.SentItems">
			<summary>
            The Sent Items folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.Tasks">
			<summary>
            The Tasks folder.
            </summary>
		</member>
		<member name="F:Microsoft.Exchange.WebServices.Data.WellKnownFolderName.VoiceMail">
			<summary>
            The Voicemail folder.
            </summary>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.WorkingHours">
			<summary>Represents the working hours for a specific time zone.</summary>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.WorkingHours.DaysOfTheWeek">
			<summary>Gets the working days of the attendee.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.Collection&lt;T&gt;"></see> object that contains DayOfTheWeek enumeration values that indicate when the attendee is working."</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.WorkingHours.EndTime">
			<summary>Gets the time of day that the attendee stops working.</summary>
			<returns>A <see cref="T:System.Timespan"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.WorkingHours.StartTime">
			<summary>Gets the time of day that the attendee starts working.</summary>
			<returns>A <see cref="T:System.Timespan"></see> object.</returns>
		</member>
		<member name="P:Microsoft.Exchange.WebServices.Data.WorkingHours.TimeZone">
			<summary>Gets the time zone to which the working hours apply.</summary>
			<returns>A <see cref="T:System.TimeZoneInfo"></see> object.</returns>
		</member>
		<member name="T:Microsoft.Exchange.WebServices.Data.WSSecurityBasedCredentials">
			<summary>The base class for all credential classes that use Web Services Security (WS-Security).</summary>
		</member>
		<member name="M:Microsoft.Exchange.WebServices.Data.WSSecurityBasedCredentials.#ctor">
			<summary>Initializes a new instance of the WSSecurityBasedCredentials class.</summary>
		</member>
	</members>
</doc>